<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\output\TQ2440_Test.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\output\TQ2440_Test.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 4.1 [Build 713]: Last Updated: Fri Apr 11 07:55:40 2014
<BR><P>
<H3>Maximum Stack Usage =       1416 bytes + Unknown(Functions without stacksize, Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
[Anonymous Symbol] &rArr; Main &rArr; process_key &rArr; App_Main &rArr; InfoNES_Load &rArr; LoadRomImage &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; disk_write &rArr; Write_Mult_Block &rArr; CMD25 &rArr; Chk_CMD_End &rArr; Uart_Printf &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
<P>
<H3>
Functions with no stack information
</H3><UL>
 <LI><a href="#[c2]">__ENTRY</a>
 <LI><a href="#[c3]">StartPointAfterSleepWakeUp</a>
 <LI><a href="#[c4]">CLKDIV124</a>
 <LI><a href="#[c5]">CLKDIV144</a>
 <LI><a href="#[2d8]">EnterCritical</a>
 <LI><a href="#[2d9]">ExitCritical</a>
 <LI><a href="#[1c9]">SET_IF</a>
 <LI><a href="#[2da]">WR_IF</a>
 <LI><a href="#[1ca]">CLR_IF</a>
 <LI><a href="#[2db]">outportw</a>
 <LI><a href="#[2dc]">inportw</a>
 <LI><a href="#[1c5]">MMU_EnableICache</a>
 <LI><a href="#[1ba]">MMU_DisableICache</a>
 <LI><a href="#[1c6]">MMU_EnableDCache</a>
 <LI><a href="#[1b9]">MMU_DisableDCache</a>
 <LI><a href="#[1c3]">MMU_EnableAlignFault</a>
 <LI><a href="#[2dd]">MMU_DisableAlignFault</a>
 <LI><a href="#[1c4]">MMU_EnableMMU</a>
 <LI><a href="#[1bd]">MMU_DisableMMU</a>
 <LI><a href="#[187]">MMU_SetFastBusMode</a>
 <LI><a href="#[186]">MMU_SetAsyncBusMode</a>
 <LI><a href="#[1c0]">MMU_SetTTBase</a>
 <LI><a href="#[1c1]">MMU_SetDomain</a>
 <LI><a href="#[2de]">MMU_InvalidateIDCache</a>
 <LI><a href="#[1bc]">MMU_InvalidateICache</a>
 <LI><a href="#[2df]">MMU_InvalidateICacheMVA</a>
 <LI><a href="#[2e0]">MMU_PrefetchICacheMVA</a>
 <LI><a href="#[2e1]">MMU_InvalidateDCache</a>
 <LI><a href="#[2e2]">MMU_InvalidateDCacheMVA</a>
 <LI><a href="#[2e3]">MMU_CleanDCacheMVA</a>
 <LI><a href="#[2e4]">MMU_CleanInvalidateDCacheMVA</a>
 <LI><a href="#[2e5]">MMU_CleanDCacheIndex</a>
 <LI><a href="#[1bb]">MMU_CleanInvalidateDCacheIndex</a>
 <LI><a href="#[2e6]">MMU_WaitForInterrupt</a>
 <LI><a href="#[1be]">MMU_InvalidateTLB</a>
 <LI><a href="#[2e7]">MMU_InvalidateITLB</a>
 <LI><a href="#[2e8]">MMU_InvalidateITLBMVA</a>
 <LI><a href="#[2e9]">MMU_InvalidateDTLB</a>
 <LI><a href="#[2ea]">MMU_InvalidateDTLBMVA</a>
 <LI><a href="#[2eb]">MMU_SetDCacheLockdownBase</a>
 <LI><a href="#[2ec]">MMU_SetICacheLockdownBase</a>
 <LI><a href="#[2ed]">MMU_SetDTLBLockdown</a>
 <LI><a href="#[2ee]">MMU_SetITLBLockdown</a>
 <LI><a href="#[1c2]">MMU_SetProcessId</a>
 <LI><a href="#[4]">IsrIRQ</a>
 <LI><a href="#[2]">copy_proc_beg</a>
 <LI><a href="#[3]">[Anonymous Symbol]</a>
</UL>
</UL>
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[f3]">scan_files</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[f3]">scan_files</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[3]">[Anonymous Symbol]</a> from 2440init.o(RESET) referenced from 2440init.o(RESET)
 <LI><a href="#[8]">AdcTsAuto</a> from touchpanel.o(.text) referenced from touchpanel.o(.text)
 <LI><a href="#[166]">CMD33</a> from sd_mmc.o(.text) referenced from sd_mmc.o(.text)
 <LI><a href="#[fb]">HaltDabort</a> from main.o(.text) referenced from main.o(.text)
 <LI><a href="#[fd]">HaltPabort</a> from main.o(.text) referenced from main.o(.text)
 <LI><a href="#[fe]">HaltSwi</a> from main.o(.text) referenced from main.o(.text)
 <LI><a href="#[ff]">HaltUndef</a> from main.o(.text) referenced from main.o(.text)
 <LI><a href="#[4]">IsrIRQ</a> from 2440init.o(RESET) referenced from 2440init.o(RESET)
 <LI><a href="#[c]">Map0_Apu</a> from infones_mapper.o(.text) referenced 23 times from infones_mapper.o(.text)
 <LI><a href="#[f]">Map0_HSync</a> from infones_mapper.o(.text) referenced 21 times from infones_mapper.o(.text)
 <LI><a href="#[32]">Map0_Init</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.data)
 <LI><a href="#[32]">Map0_Init</a> from infones_mapper.o(.text) referenced 2 times from infones_mapper.o(.text)
 <LI><a href="#[10]">Map0_PPU</a> from infones_mapper.o(.text) referenced 23 times from infones_mapper.o(.text)
 <LI><a href="#[d]">Map0_ReadApu</a> from infones_mapper.o(.text) referenced 23 times from infones_mapper.o(.text)
 <LI><a href="#[11]">Map0_RenderScreen</a> from infones_mapper.o(.text) referenced 23 times from infones_mapper.o(.text)
 <LI><a href="#[b]">Map0_Sram</a> from infones_mapper.o(.text) referenced 22 times from infones_mapper.o(.text)
 <LI><a href="#[e]">Map0_VSync</a> from infones_mapper.o(.text) referenced 23 times from infones_mapper.o(.text)
 <LI><a href="#[14]">Map0_Write</a> from infones_mapper.o(.text) referenced 12 times from infones_mapper.o(.text)
 <LI><a href="#[2b]">Map100_HSync</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.text)
 <LI><a href="#[87]">Map100_Init</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.data)
 <LI><a href="#[87]">Map100_Init</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.text)
 <LI><a href="#[2a]">Map100_Write</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.text)
 <LI><a href="#[88]">Map101_Init</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.data)
 <LI><a href="#[88]">Map101_Init</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.text)
 <LI><a href="#[2d]">Map105_HSync</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.text)
 <LI><a href="#[89]">Map105_Init</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.data)
 <LI><a href="#[89]">Map105_Init</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.text)
 <LI><a href="#[2c]">Map105_Write</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.text)
 <LI><a href="#[8a]">Map107_Init</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.data)
 <LI><a href="#[8a]">Map107_Init</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.text)
 <LI><a href="#[8b]">Map108_Init</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.data)
 <LI><a href="#[8b]">Map108_Init</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.text)
 <LI><a href="#[272]">Map108_Write</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.text)
 <LI><a href="#[8c]">Map109_Init</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.data)
 <LI><a href="#[8c]">Map109_Init</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.text)
 <LI><a href="#[46]">Map10_Init</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.data)
 <LI><a href="#[46]">Map10_Init</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.text)
 <LI><a href="#[8d]">Map110_Init</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.data)
 <LI><a href="#[8d]">Map110_Init</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.text)
 <LI><a href="#[8e]">Map112_Init</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.data)
 <LI><a href="#[8e]">Map112_Init</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.text)
 <LI><a href="#[8f]">Map113_Init</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.data)
 <LI><a href="#[8f]">Map113_Init</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.text)
 <LI><a href="#[2e]">Map114_HSync</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.text)
 <LI><a href="#[90]">Map114_Init</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.data)
 <LI><a href="#[90]">Map114_Init</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.text)
 <LI><a href="#[91]">Map115_Init</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.data)
 <LI><a href="#[91]">Map115_Init</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.text)
 <LI><a href="#[92]">Map116_Init</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.data)
 <LI><a href="#[92]">Map116_Init</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.text)
 <LI><a href="#[30]">Map117_HSync</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.text)
 <LI><a href="#[93]">Map117_Init</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.data)
 <LI><a href="#[93]">Map117_Init</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.text)
 <LI><a href="#[2f]">Map117_Write</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.text)
 <LI><a href="#[94]">Map118_Init</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.data)
 <LI><a href="#[94]">Map118_Init</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.text)
 <LI><a href="#[95]">Map119_Init</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.data)
 <LI><a href="#[95]">Map119_Init</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.text)
 <LI><a href="#[47]">Map11_Init</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.data)
 <LI><a href="#[47]">Map11_Init</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.text)
 <LI><a href="#[96]">Map122_Init</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.data)
 <LI><a href="#[96]">Map122_Init</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.text)
 <LI><a href="#[97]">Map133_Init</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.data)
 <LI><a href="#[97]">Map133_Init</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.text)
 <LI><a href="#[31]">Map134_Apu</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.text)
 <LI><a href="#[98]">Map134_Init</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.data)
 <LI><a href="#[98]">Map134_Init</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.text)
 <LI><a href="#[99]">Map135_Init</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.data)
 <LI><a href="#[99]">Map135_Init</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.text)
 <LI><a href="#[48]">Map13_Init</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.data)
 <LI><a href="#[48]">Map13_Init</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.text)
 <LI><a href="#[9a]">Map140_Init</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.data)
 <LI><a href="#[291]">Map140_Sram</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.text)
 <LI><a href="#[9b]">Map151_Init</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.data)
 <LI><a href="#[9b]">Map151_Init</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.text)
 <LI><a href="#[49]">Map15_Init</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.data)
 <LI><a href="#[49]">Map15_Init</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.text)
 <LI><a href="#[9c]">Map160_Init</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.data)
 <LI><a href="#[9c]">Map160_Init</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.text)
 <LI><a href="#[33]">Map160_Write</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.text)
 <LI><a href="#[4a]">Map16_Init</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.data)
 <LI><a href="#[4a]">Map16_Init</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.text)
 <LI><a href="#[15]">Map17_Apu</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.text)
 <LI><a href="#[16]">Map17_HSync</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.text)
 <LI><a href="#[4b]">Map17_Init</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.data)
 <LI><a href="#[4b]">Map17_Init</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.text)
 <LI><a href="#[9d]">Map180_Init</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.data)
 <LI><a href="#[9d]">Map180_Init</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.text)
 <LI><a href="#[294]">Map180_Write</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.text)
 <LI><a href="#[9e]">Map181_Init</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.data)
 <LI><a href="#[9e]">Map181_Init</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.text)
 <LI><a href="#[9f]">Map182_Init</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.data)
 <LI><a href="#[9f]">Map182_Init</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.text)
 <LI><a href="#[a0]">Map183_Init</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.data)
 <LI><a href="#[a0]">Map183_Init</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.text)
 <LI><a href="#[34]">Map183_Write</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.text)
 <LI><a href="#[a1]">Map185_Init</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.data)
 <LI><a href="#[a1]">Map185_Init</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.text)
 <LI><a href="#[297]">Map185_Write</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.text)
 <LI><a href="#[a2]">Map187_Init</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.data)
 <LI><a href="#[a2]">Map187_Init</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.text)
 <LI><a href="#[35]">Map187_ReadApu</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.text)
 <LI><a href="#[36]">Map189_HSync</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.text)
 <LI><a href="#[a3]">Map189_Init</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.data)
 <LI><a href="#[a3]">Map189_Init</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.text)
 <LI><a href="#[4c]">Map18_Init</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.data)
 <LI><a href="#[4c]">Map18_Init</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.text)
 <LI><a href="#[17]">Map18_Write</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.text)
 <LI><a href="#[a4]">Map191_Init</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.data)
 <LI><a href="#[a4]">Map191_Init</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.text)
 <LI><a href="#[a5]">Map193_Init</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.data)
 <LI><a href="#[a5]">Map193_Init</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.text)
 <LI><a href="#[a6]">Map194_Init</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.data)
 <LI><a href="#[a6]">Map194_Init</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.text)
 <LI><a href="#[2a2]">Map194_Write</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.text)
 <LI><a href="#[3f]">Map1_Init</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.data)
 <LI><a href="#[3f]">Map1_Init</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.text)
 <LI><a href="#[a]">Map1_Write</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.text)
 <LI><a href="#[a7]">Map200_Init</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.data)
 <LI><a href="#[a7]">Map200_Init</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.text)
 <LI><a href="#[a8]">Map201_Init</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.data)
 <LI><a href="#[a8]">Map201_Init</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.text)
 <LI><a href="#[2a6]">Map202_Apu</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.text)
 <LI><a href="#[a9]">Map202_Init</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.data)
 <LI><a href="#[a9]">Map202_Init</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.text)
 <LI><a href="#[2a7]">Map202_Write</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.text)
 <LI><a href="#[4d]">Map21_Init</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.data)
 <LI><a href="#[4d]">Map21_Init</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.text)
 <LI><a href="#[aa]">Map222_Init</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.data)
 <LI><a href="#[aa]">Map222_Init</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.text)
 <LI><a href="#[ab]">Map225_Init</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.data)
 <LI><a href="#[ab]">Map225_Init</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.text)
 <LI><a href="#[ac]">Map226_Init</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.data)
 <LI><a href="#[ac]">Map226_Init</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.text)
 <LI><a href="#[ad]">Map227_Init</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.data)
 <LI><a href="#[ad]">Map227_Init</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.text)
 <LI><a href="#[ae]">Map228_Init</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.data)
 <LI><a href="#[ae]">Map228_Init</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.text)
 <LI><a href="#[af]">Map229_Init</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.data)
 <LI><a href="#[af]">Map229_Init</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.text)
 <LI><a href="#[4e]">Map22_Init</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.data)
 <LI><a href="#[4e]">Map22_Init</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.text)
 <LI><a href="#[b0]">Map230_Init</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.data)
 <LI><a href="#[b0]">Map230_Init</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.text)
 <LI><a href="#[b1]">Map231_Init</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.data)
 <LI><a href="#[b1]">Map231_Init</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.text)
 <LI><a href="#[b2]">Map232_Init</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.data)
 <LI><a href="#[b2]">Map232_Init</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.text)
 <LI><a href="#[b3]">Map233_Init</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.data)
 <LI><a href="#[b3]">Map233_Init</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.text)
 <LI><a href="#[b4]">Map234_Init</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.data)
 <LI><a href="#[b4]">Map234_Init</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.text)
 <LI><a href="#[2b3]">Map234_Write</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.text)
 <LI><a href="#[b5]">Map236_Init</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.data)
 <LI><a href="#[b5]">Map236_Init</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.text)
 <LI><a href="#[37]">Map236_Write</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.text)
 <LI><a href="#[4f]">Map23_Init</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.data)
 <LI><a href="#[4f]">Map23_Init</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.text)
 <LI><a href="#[18]">Map23_Write</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.text)
 <LI><a href="#[b6]">Map240_Init</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.data)
 <LI><a href="#[b6]">Map240_Init</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.text)
 <LI><a href="#[b7]">Map241_Init</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.data)
 <LI><a href="#[b7]">Map241_Init</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.text)
 <LI><a href="#[b8]">Map242_Init</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.data)
 <LI><a href="#[b8]">Map242_Init</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.text)
 <LI><a href="#[2b6]">Map242_Write</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.text)
 <LI><a href="#[38]">Map243_Apu</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.text)
 <LI><a href="#[b9]">Map243_Init</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.data)
 <LI><a href="#[b9]">Map243_Init</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.text)
 <LI><a href="#[ba]">Map244_Init</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.data)
 <LI><a href="#[ba]">Map244_Init</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.text)
 <LI><a href="#[bb]">Map245_Init</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.data)
 <LI><a href="#[bb]">Map245_Init</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.text)
 <LI><a href="#[bc]">Map246_Init</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.data)
 <LI><a href="#[bc]">Map246_Init</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.text)
 <LI><a href="#[bd]">Map248_Init</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.data)
 <LI><a href="#[bd]">Map248_Init</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.text)
 <LI><a href="#[39]">Map249_Apu</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.text)
 <LI><a href="#[3a]">Map249_HSync</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.text)
 <LI><a href="#[be]">Map249_Init</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.data)
 <LI><a href="#[be]">Map249_Init</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.text)
 <LI><a href="#[50]">Map24_Init</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.data)
 <LI><a href="#[50]">Map24_Init</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.text)
 <LI><a href="#[bf]">Map251_Init</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.data)
 <LI><a href="#[bf]">Map251_Init</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.text)
 <LI><a href="#[2c2]">Map251_Write</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.text)
 <LI><a href="#[3c]">Map252_HSync</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.text)
 <LI><a href="#[c0]">Map252_Init</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.data)
 <LI><a href="#[c0]">Map252_Init</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.text)
 <LI><a href="#[3b]">Map252_Write</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.text)
 <LI><a href="#[3d]">Map255_Apu</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.text)
 <LI><a href="#[c1]">Map255_Init</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.data)
 <LI><a href="#[c1]">Map255_Init</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.text)
 <LI><a href="#[3e]">Map255_ReadApu</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.text)
 <LI><a href="#[19]">Map25_HSync</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.text)
 <LI><a href="#[51]">Map25_Init</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.data)
 <LI><a href="#[51]">Map25_Init</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.text)
 <LI><a href="#[1b]">Map26_HSync</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.text)
 <LI><a href="#[52]">Map26_Init</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.data)
 <LI><a href="#[52]">Map26_Init</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.text)
 <LI><a href="#[1a]">Map26_Write</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.text)
 <LI><a href="#[40]">Map2_Init</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.data)
 <LI><a href="#[40]">Map2_Init</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.text)
 <LI><a href="#[210]">Map2_Write</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.text)
 <LI><a href="#[53]">Map32_Init</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.data)
 <LI><a href="#[53]">Map32_Init</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.text)
 <LI><a href="#[54]">Map33_Init</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.data)
 <LI><a href="#[54]">Map33_Init</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.text)
 <LI><a href="#[55]">Map34_Init</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.data)
 <LI><a href="#[55]">Map34_Init</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.text)
 <LI><a href="#[225]">Map34_Write</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.text)
 <LI><a href="#[41]">Map3_Init</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.data)
 <LI><a href="#[41]">Map3_Init</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.text)
 <LI><a href="#[56]">Map40_Init</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.data)
 <LI><a href="#[56]">Map40_Init</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.text)
 <LI><a href="#[226]">Map40_Write</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.text)
 <LI><a href="#[57]">Map41_Init</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.data)
 <LI><a href="#[57]">Map41_Init</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.text)
 <LI><a href="#[58]">Map42_Init</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.data)
 <LI><a href="#[58]">Map42_Init</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.text)
 <LI><a href="#[229]">Map42_Write</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.text)
 <LI><a href="#[59]">Map43_Init</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.data)
 <LI><a href="#[59]">Map43_Init</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.text)
 <LI><a href="#[22a]">Map43_Write</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.text)
 <LI><a href="#[5a]">Map44_Init</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.data)
 <LI><a href="#[5a]">Map44_Init</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.text)
 <LI><a href="#[1e]">Map45_HSync</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.text)
 <LI><a href="#[5b]">Map45_Init</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.data)
 <LI><a href="#[5b]">Map45_Init</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.text)
 <LI><a href="#[1d]">Map45_Sram</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.text)
 <LI><a href="#[1c]">Map45_Write</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.text)
 <LI><a href="#[5c]">Map46_Init</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.data)
 <LI><a href="#[5c]">Map46_Init</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.text)
 <LI><a href="#[234]">Map46_Sram</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.text)
 <LI><a href="#[235]">Map46_Write</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.text)
 <LI><a href="#[5d]">Map47_Init</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.data)
 <LI><a href="#[5d]">Map47_Init</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.text)
 <LI><a href="#[5e]">Map48_Init</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.data)
 <LI><a href="#[5e]">Map48_Init</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.text)
 <LI><a href="#[1f]">Map49_HSync</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.text)
 <LI><a href="#[5f]">Map49_Init</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.data)
 <LI><a href="#[5f]">Map49_Init</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.text)
 <LI><a href="#[12]">Map4_HSync</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.text)
 <LI><a href="#[42]">Map4_Init</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.data)
 <LI><a href="#[42]">Map4_Init</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.text)
 <LI><a href="#[23f]">Map50_Apu</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.text)
 <LI><a href="#[60]">Map50_Init</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.data)
 <LI><a href="#[60]">Map50_Init</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.text)
 <LI><a href="#[61]">Map51_Init</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.data)
 <LI><a href="#[61]">Map51_Init</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.text)
 <LI><a href="#[241]">Map51_Sram</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.text)
 <LI><a href="#[242]">Map51_Write</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.text)
 <LI><a href="#[62]">Map57_Init</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.data)
 <LI><a href="#[62]">Map57_Init</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.text)
 <LI><a href="#[20]">Map57_Write</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.text)
 <LI><a href="#[63]">Map58_Init</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.data)
 <LI><a href="#[63]">Map58_Init</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.text)
 <LI><a href="#[64]">Map60_Init</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.data)
 <LI><a href="#[64]">Map60_Init</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.text)
 <LI><a href="#[65]">Map61_Init</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.data)
 <LI><a href="#[65]">Map61_Init</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.text)
 <LI><a href="#[66]">Map62_Init</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.data)
 <LI><a href="#[66]">Map62_Init</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.text)
 <LI><a href="#[67]">Map64_Init</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.data)
 <LI><a href="#[67]">Map64_Init</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.text)
 <LI><a href="#[21]">Map64_Write</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.text)
 <LI><a href="#[22]">Map65_HSync</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.text)
 <LI><a href="#[68]">Map65_Init</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.data)
 <LI><a href="#[68]">Map65_Init</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.text)
 <LI><a href="#[69]">Map66_Init</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.data)
 <LI><a href="#[69]">Map66_Init</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.text)
 <LI><a href="#[6a]">Map67_Init</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.data)
 <LI><a href="#[6a]">Map67_Init</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.text)
 <LI><a href="#[6b]">Map68_Init</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.data)
 <LI><a href="#[6b]">Map68_Init</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.text)
 <LI><a href="#[6c]">Map69_Init</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.data)
 <LI><a href="#[6c]">Map69_Init</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.text)
 <LI><a href="#[6d]">Map70_Init</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.data)
 <LI><a href="#[6d]">Map70_Init</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.text)
 <LI><a href="#[6e]">Map71_Init</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.data)
 <LI><a href="#[6e]">Map71_Init</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.text)
 <LI><a href="#[24e]">Map71_Write</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.text)
 <LI><a href="#[6f]">Map72_Init</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.data)
 <LI><a href="#[6f]">Map72_Init</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.text)
 <LI><a href="#[70]">Map73_Init</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.data)
 <LI><a href="#[70]">Map73_Init</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.text)
 <LI><a href="#[23]">Map74_HSync</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.text)
 <LI><a href="#[71]">Map74_Init</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.data)
 <LI><a href="#[71]">Map74_Init</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.text)
 <LI><a href="#[72]">Map75_Init</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.data)
 <LI><a href="#[72]">Map75_Init</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.text)
 <LI><a href="#[73]">Map76_Init</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.data)
 <LI><a href="#[73]">Map76_Init</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.text)
 <LI><a href="#[74]">Map77_Init</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.data)
 <LI><a href="#[74]">Map77_Init</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.text)
 <LI><a href="#[256]">Map77_Write</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.text)
 <LI><a href="#[75]">Map78_Init</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.data)
 <LI><a href="#[75]">Map78_Init</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.text)
 <LI><a href="#[76]">Map79_Init</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.data)
 <LI><a href="#[76]">Map79_Init</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.text)
 <LI><a href="#[43]">Map7_Init</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.data)
 <LI><a href="#[43]">Map7_Init</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.text)
 <LI><a href="#[215]">Map7_Write</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.text)
 <LI><a href="#[77]">Map80_Init</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.data)
 <LI><a href="#[77]">Map80_Init</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.text)
 <LI><a href="#[78]">Map82_Init</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.data)
 <LI><a href="#[78]">Map82_Init</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.text)
 <LI><a href="#[24]">Map82_Sram</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.text)
 <LI><a href="#[26]">Map83_HSync</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.text)
 <LI><a href="#[79]">Map83_Init</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.data)
 <LI><a href="#[79]">Map83_Init</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.text)
 <LI><a href="#[25]">Map83_Write</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.text)
 <LI><a href="#[7a]">Map86_Init</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.data)
 <LI><a href="#[7a]">Map86_Init</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.text)
 <LI><a href="#[7b]">Map87_Init</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.data)
 <LI><a href="#[7b]">Map87_Init</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.text)
 <LI><a href="#[7c]">Map88_Init</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.data)
 <LI><a href="#[7c]">Map88_Init</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.text)
 <LI><a href="#[7d]">Map89_Init</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.data)
 <LI><a href="#[7d]">Map89_Init</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.text)
 <LI><a href="#[44]">Map8_Init</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.data)
 <LI><a href="#[44]">Map8_Init</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.text)
 <LI><a href="#[27]">Map90_Apu</a> from infones_mapper.o(.text) referenced 2 times from infones_mapper.o(.text)
 <LI><a href="#[29]">Map90_HSync</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.text)
 <LI><a href="#[7e]">Map90_Init</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.data)
 <LI><a href="#[7e]">Map90_Init</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.text)
 <LI><a href="#[28]">Map90_ReadApu</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.text)
 <LI><a href="#[7f]">Map91_Init</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.data)
 <LI><a href="#[7f]">Map91_Init</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.text)
 <LI><a href="#[80]">Map92_Init</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.data)
 <LI><a href="#[80]">Map92_Init</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.text)
 <LI><a href="#[81]">Map93_Init</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.data)
 <LI><a href="#[81]">Map93_Init</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.text)
 <LI><a href="#[264]">Map93_Sram</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.text)
 <LI><a href="#[82]">Map94_Init</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.data)
 <LI><a href="#[82]">Map94_Init</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.text)
 <LI><a href="#[265]">Map94_Write</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.text)
 <LI><a href="#[83]">Map95_Init</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.data)
 <LI><a href="#[83]">Map95_Init</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.text)
 <LI><a href="#[84]">Map96_Init</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.data)
 <LI><a href="#[84]">Map96_Init</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.text)
 <LI><a href="#[85]">Map97_Init</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.data)
 <LI><a href="#[85]">Map97_Init</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.text)
 <LI><a href="#[26c]">Map97_Write</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.text)
 <LI><a href="#[86]">Map99_Init</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.data)
 <LI><a href="#[86]">Map99_Init</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.text)
 <LI><a href="#[45]">Map9_Init</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.data)
 <LI><a href="#[45]">Map9_Init</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.text)
 <LI><a href="#[13]">Map9_PPU</a> from infones_mapper.o(.text) referenced from infones_mapper.o(.text)
 <LI><a href="#[c2]">__ENTRY</a> from 2440init.o(RESET) referenced from mmu.o(.text)
 <LI><a href="#[6]">_get_lc_ctype</a> from lc_ctype_c.o(locale$$code) referenced from rt_ctype_table.o(.text)
 <LI><a href="#[7]">_printf_input_char</a> from _printf_char_common.o(.text) referenced from _printf_char_common.o(.text)
 <LI><a href="#[5]">_sputc</a> from _sputc.o(.text) referenced 2 times from c89vsprintf.o(.text)
 <LI><a href="#[2]">copy_proc_beg</a> from 2440init.o(RESET) referenced from 2440init.o(RESET)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[c2]"></a>__ENTRY</STRONG> (ARM, 0 bytes, Stack size unknown bytes, 2440init.o(RESET))

<P><STRONG><a name="[c3]"></a>StartPointAfterSleepWakeUp</STRONG> (ARM, 0 bytes, Stack size unknown bytes, 2440init.o(RESET), UNUSED, KEPT)
<BR><BR>[Stack]<UL><LI>Max Depth = 40 + Unknown Stack Size
<LI>Call Chain = StartPointAfterSleepWakeUp &rArr; RdNF2SDRAM &rArr; rLB_ReadPage
</UL>
<BR>[Calls]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;copy_proc_beg
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RdNF2SDRAM
</UL>

<P><STRONG><a name="[c4]"></a>CLKDIV124</STRONG> (ARM, 0 bytes, Stack size unknown bytes, 2440init.o(RESET), UNUSED, KEPT)

<P><STRONG><a name="[c5]"></a>CLKDIV144</STRONG> (ARM, 0 bytes, Stack size unknown bytes, 2440init.o(RESET), UNUSED, KEPT)

<P><STRONG><a name="[c8]"></a>_printf_n</STRONG> (ARM, 0 bytes, Stack size unknown bytes, _printf_n.o(.ARM.Collect$$_printf_percent$$00000001))
<BR><BR>[Calls]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_charcount
</UL>

<P><STRONG><a name="[1ad]"></a>_printf_percent</STRONG> (ARM, 0 bytes, Stack size unknown bytes, _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__printf
</UL>

<P><STRONG><a name="[ca]"></a>_printf_p</STRONG> (ARM, 0 bytes, Stack size unknown bytes, _printf_p.o(.ARM.Collect$$_printf_percent$$00000002))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = _printf_p &rArr; _printf_hex_ptr &rArr; _printf_longlong_hex &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_hex_ptr
</UL>

<P><STRONG><a name="[cc]"></a>_printf_f</STRONG> (ARM, 0 bytes, Stack size unknown bytes, _printf_f.o(.ARM.Collect$$_printf_percent$$00000003))
<BR><BR>[Stack]<UL><LI>Max Depth = 320 + Unknown Stack Size
<LI>Call Chain = _printf_f &rArr; _printf_fp_dec &rArr; _printf_fp_dec_real &rArr; _fp_digits &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec
</UL>

<P><STRONG><a name="[ce]"></a>_printf_e</STRONG> (ARM, 0 bytes, Stack size unknown bytes, _printf_e.o(.ARM.Collect$$_printf_percent$$00000004))
<BR><BR>[Stack]<UL><LI>Max Depth = 320 + Unknown Stack Size
<LI>Call Chain = _printf_e &rArr; _printf_fp_dec &rArr; _printf_fp_dec_real &rArr; _fp_digits &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec
</UL>

<P><STRONG><a name="[cf]"></a>_printf_g</STRONG> (ARM, 0 bytes, Stack size unknown bytes, _printf_g.o(.ARM.Collect$$_printf_percent$$00000005))
<BR><BR>[Stack]<UL><LI>Max Depth = 320 + Unknown Stack Size
<LI>Call Chain = _printf_g &rArr; _printf_fp_dec &rArr; _printf_fp_dec_real &rArr; _fp_digits &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec
</UL>

<P><STRONG><a name="[d0]"></a>_printf_a</STRONG> (ARM, 0 bytes, Stack size unknown bytes, _printf_a.o(.ARM.Collect$$_printf_percent$$00000006))
<BR><BR>[Calls]<UL><LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_hex (Weak Reference)
</UL>

<P><STRONG><a name="[2c4]"></a>_printf_ll</STRONG> (ARM, 0 bytes, Stack size unknown bytes, _printf_ll.o(.ARM.Collect$$_printf_percent$$00000007))

<P><STRONG><a name="[d2]"></a>_printf_i</STRONG> (ARM, 0 bytes, Stack size unknown bytes, _printf_i.o(.ARM.Collect$$_printf_percent$$00000008))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + Unknown Stack Size
<LI>Call Chain = _printf_i &rArr; _printf_int_dec &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec
</UL>

<P><STRONG><a name="[d4]"></a>_printf_d</STRONG> (ARM, 0 bytes, Stack size unknown bytes, _printf_d.o(.ARM.Collect$$_printf_percent$$00000009))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + Unknown Stack Size
<LI>Call Chain = _printf_d &rArr; _printf_int_dec &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec
</UL>

<P><STRONG><a name="[d5]"></a>_printf_u</STRONG> (ARM, 0 bytes, Stack size unknown bytes, _printf_u.o(.ARM.Collect$$_printf_percent$$0000000A))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + Unknown Stack Size
<LI>Call Chain = _printf_u &rArr; _printf_int_dec &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec
</UL>

<P><STRONG><a name="[d6]"></a>_printf_o</STRONG> (ARM, 0 bytes, Stack size unknown bytes, _printf_o.o(.ARM.Collect$$_printf_percent$$0000000B))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = _printf_o &rArr; _printf_int_oct &rArr; _printf_longlong_oct &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_oct
</UL>

<P><STRONG><a name="[d8]"></a>_printf_x</STRONG> (ARM, 0 bytes, Stack size unknown bytes, _printf_x.o(.ARM.Collect$$_printf_percent$$0000000C))
<BR><BR>[Stack]<UL><LI>Max Depth = 80 + Unknown Stack Size
<LI>Call Chain = _printf_x &rArr; _printf_int_hex &rArr; _printf_longlong_hex &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_hex
</UL>

<P><STRONG><a name="[da]"></a>_printf_lli</STRONG> (ARM, 0 bytes, Stack size unknown bytes, _printf_lli.o(.ARM.Collect$$_printf_percent$$0000000D))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + Unknown Stack Size
<LI>Call Chain = _printf_lli &rArr; _printf_longlong_dec &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_longlong_dec
</UL>

<P><STRONG><a name="[dc]"></a>_printf_lld</STRONG> (ARM, 0 bytes, Stack size unknown bytes, _printf_lld.o(.ARM.Collect$$_printf_percent$$0000000E))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + Unknown Stack Size
<LI>Call Chain = _printf_lld &rArr; _printf_longlong_dec &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_longlong_dec
</UL>

<P><STRONG><a name="[dd]"></a>_printf_llu</STRONG> (ARM, 0 bytes, Stack size unknown bytes, _printf_llu.o(.ARM.Collect$$_printf_percent$$0000000F))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + Unknown Stack Size
<LI>Call Chain = _printf_llu &rArr; _printf_longlong_dec &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_longlong_dec
</UL>

<P><STRONG><a name="[de]"></a>_printf_llo</STRONG> (ARM, 0 bytes, Stack size unknown bytes, _printf_llo.o(.ARM.Collect$$_printf_percent$$00000010))
<BR><BR>[Stack]<UL><LI>Max Depth = 56 + Unknown Stack Size
<LI>Call Chain = _printf_llo &rArr; _printf_ll_oct &rArr; _printf_longlong_oct &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_ll_oct
</UL>

<P><STRONG><a name="[e0]"></a>_printf_llx</STRONG> (ARM, 0 bytes, Stack size unknown bytes, _printf_llx.o(.ARM.Collect$$_printf_percent$$00000011))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = _printf_llx &rArr; _printf_ll_hex &rArr; _printf_longlong_hex &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_ll_hex
</UL>

<P><STRONG><a name="[2c5]"></a>_printf_l</STRONG> (ARM, 0 bytes, Stack size unknown bytes, _printf_l.o(.ARM.Collect$$_printf_percent$$00000012))

<P><STRONG><a name="[e2]"></a>_printf_c</STRONG> (ARM, 0 bytes, Stack size unknown bytes, _printf_c.o(.ARM.Collect$$_printf_percent$$00000013))
<BR><BR>[Stack]<UL><LI>Max Depth = 40 + Unknown Stack Size
<LI>Call Chain = _printf_c &rArr; _printf_char &rArr; _printf_cs_common &rArr; _printf_str &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char
</UL>

<P><STRONG><a name="[e4]"></a>_printf_s</STRONG> (ARM, 0 bytes, Stack size unknown bytes, _printf_s.o(.ARM.Collect$$_printf_percent$$00000014))
<BR><BR>[Stack]<UL><LI>Max Depth = 40 + Unknown Stack Size
<LI>Call Chain = _printf_s &rArr; _printf_string &rArr; _printf_cs_common &rArr; _printf_str &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_string
</UL>

<P><STRONG><a name="[e6]"></a>_printf_lc</STRONG> (ARM, 0 bytes, Stack size unknown bytes, _printf_lc.o(.ARM.Collect$$_printf_percent$$00000015))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
<LI>Call Chain = _printf_lc &rArr; _printf_wchar &rArr; _printf_lcs_common &rArr; _printf_wctomb &rArr; _wcrtomb &rArr; __rt_ctype_table
</UL>
<BR>[Calls]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_wchar
</UL>

<P><STRONG><a name="[e8]"></a>_printf_ls</STRONG> (ARM, 0 bytes, Stack size unknown bytes, _printf_ls.o(.ARM.Collect$$_printf_percent$$00000016))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
<LI>Call Chain = _printf_ls &rArr; _printf_wstring &rArr; _printf_lcs_common &rArr; _printf_wctomb &rArr; _wcrtomb &rArr; __rt_ctype_table
</UL>
<BR>[Calls]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_wstring
</UL>

<P><STRONG><a name="[2c6]"></a>_printf_percent_end</STRONG> (ARM, 0 bytes, Stack size unknown bytes, _printf_percent_end.o(.ARM.Collect$$_printf_percent$$00000017))

<P><STRONG><a name="[2c7]"></a>__rt_lib_init_lc_ctype_2</STRONG> (ARM, 0 bytes, Stack size 0 bytes, libinit2.o(.ARM.Collect$$libinit$$0000000F))

<P><STRONG><a name="[2c8]"></a>__rt_lib_init_lc_numeric_2</STRONG> (ARM, 0 bytes, Stack size 0 bytes, libinit2.o(.ARM.Collect$$libinit$$00000013))

<P><STRONG><a name="[c6]"></a>RdNF2SDRAM</STRONG> (ARM, 192 bytes, Stack size 24 bytes, nand.o(.text), UNUSED, KEPT)
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = RdNF2SDRAM &rArr; rLB_ReadPage
</UL>
<BR>[Calls]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rLB_ReadPage
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rSB_ReadPage
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rNF_ReadID
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rNF_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartPointAfterSleepWakeUp
</UL>

<P><STRONG><a name="[ef]"></a>delay_ms</STRONG> (ARM, 176 bytes, Stack size 16 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + Unknown Stack Size
<LI>Call Chain = delay_ms
</UL>
<BR>[Calls]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Main
</UL>

<P><STRONG><a name="[f3]"></a>scan_files</STRONG> (ARM, 704 bytes, Stack size 96 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 776 + Unknown Stack Size
 + In Cycle
<LI>Call Chain = scan_files &rArr;  scan_files (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_readdir
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_opendir
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scan_files
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncpy
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Main
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scan_files
</UL>

<P><STRONG><a name="[10c]"></a>Clk1_Disable</STRONG> (ARM, 24 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Main
</UL>

<P><STRONG><a name="[10b]"></a>Clk0_Disable</STRONG> (ARM, 24 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Main
</UL>

<P><STRONG><a name="[fb]"></a>HaltDabort</STRONG> (ARM, 16 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 400 + Unknown Stack Size
<LI>Call Chain = HaltDabort &rArr; Uart_Printf &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart_Printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(.text)
</UL>
<P><STRONG><a name="[fd]"></a>HaltPabort</STRONG> (ARM, 16 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 400 + Unknown Stack Size
<LI>Call Chain = HaltPabort &rArr; Uart_Printf &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart_Printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(.text)
</UL>
<P><STRONG><a name="[fe]"></a>HaltSwi</STRONG> (ARM, 16 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 400 + Unknown Stack Size
<LI>Call Chain = HaltSwi &rArr; Uart_Printf &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart_Printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(.text)
</UL>
<P><STRONG><a name="[ff]"></a>HaltUndef</STRONG> (ARM, 16 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 400 + Unknown Stack Size
<LI>Call Chain = HaltUndef &rArr; Uart_Printf &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart_Printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(.text)
</UL>
<P><STRONG><a name="[101]"></a>Isr_Init</STRONG> (ARM, 72 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Main
</UL>

<P><STRONG><a name="[c7]"></a>Main</STRONG> (ARM, 772 bytes, Stack size 24 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1416 + Unknown Stack Size
<LI>Call Chain = Main &rArr; process_key &rArr; App_Main &rArr; InfoNES_Load &rArr; LoadRomImage &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; disk_write &rArr; Write_Mult_Block &rArr; CMD25 &rArr; Chk_CMD_End &rArr; Uart_Printf &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;process_key
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mount
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_menu
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart_Select
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart_Init
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart1_irq_init
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart0_irq_init
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadMenuKey
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Port_Init
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Open_Touchpanel
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Led_Display
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_TFT_Init
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_ClearScr
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Glib_logo
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Glib_Buttom2
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChangeMPllValue
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChangeClockDivider
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Isr_Init
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Clk0_Disable
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Clk1_Disable
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scan_files
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cal_cpu_bus_clk
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MMU_Init
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDinit
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart_Printf
</UL>
<BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;[Anonymous Symbol]
</UL>

<P><STRONG><a name="[116]"></a>ClearMemory</STRONG> (ARM, 76 bytes, Stack size 16 bytes, main.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart_Printf
</UL>

<P><STRONG><a name="[2c9]"></a>Clk0_Enable</STRONG> (ARM, 48 bytes, Stack size 0 bytes, main.o(.text), UNUSED)

<P><STRONG><a name="[2ca]"></a>Clk1_Enable</STRONG> (ARM, 48 bytes, Stack size 0 bytes, main.o(.text), UNUSED)

<P><STRONG><a name="[117]"></a>_printf_cs_common</STRONG> (ARM, 36 bytes, Stack size 8 bytes, _printf_char.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _printf_cs_common &rArr; _printf_str &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_mbtowc (Weak Reference)
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_str
</UL>
<BR>[Called By]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_string
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char
</UL>

<P><STRONG><a name="[e3]"></a>_printf_char</STRONG> (ARM, 28 bytes, Stack size 0 bytes, _printf_char.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _printf_char &rArr; _printf_cs_common &rArr; _printf_str &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_cs_common
</UL>
<BR>[Called By]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_c
</UL>

<P><STRONG><a name="[e5]"></a>_printf_string</STRONG> (ARM, 12 bytes, Stack size 0 bytes, _printf_char.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _printf_string &rArr; _printf_cs_common &rArr; _printf_str &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_cs_common
</UL>
<BR>[Called By]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_s
</UL>

<P><STRONG><a name="[119]"></a>_printf_str</STRONG> (ARM, 144 bytes, Stack size 16 bytes, _printf_str.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _printf_str &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
</UL>
<BR>[Called By]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_cs_common
</UL>

<P><STRONG><a name="[11a]"></a>_printf_pre_padding</STRONG> (ARM, 84 bytes, Stack size 16 bytes, _printf_pad.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _printf_pre_padding
</UL>
<BR>[Called By]<UL><LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec_real
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_common
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_wctomb
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_str
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_infnan
</UL>

<P><STRONG><a name="[11b]"></a>_printf_post_padding</STRONG> (ARM, 72 bytes, Stack size 16 bytes, _printf_pad.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _printf_post_padding
</UL>
<BR>[Called By]<UL><LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec_real
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_common
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_wctomb
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_str
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_infnan
</UL>

<P><STRONG><a name="[2cb]"></a>__aeabi_uidiv</STRONG> (ARM, 0 bytes, Stack size 0 bytes, aeabi_sdiv.o(.text_udiv), UNUSED)

<P><STRONG><a name="[f0]"></a>__aeabi_uidivmod</STRONG> (ARM, 36 bytes, Stack size 0 bytes, aeabi_sdiv.o(.text_udiv))
<BR><BR>[Calls]<UL><LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__arm_div_large
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__arm_div2
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__arm_div5
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__arm_div8
</UL>
<BR>[Called By]<UL><LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_Stop
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer_Start
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Buzzer_Freq_Set
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cal_cpu_bus_clk
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDinit
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map118_Set_CPU_Banks
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map118_Set_PPU_Banks
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map114_Set_CPU_Banks
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map114_Set_PPU_Banks
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map112_Set_CPU_Banks
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map112_Set_PPU_Banks
<LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map95_Set_CPU_Banks
<LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map95_Set_PPU_Banks
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map90_Sync_Chr_Banks
<LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map90_Sync_Mirror
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map83_Write
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map74_Set_CPU_Banks
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map74_Set_PPU_Banks
<LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map49_Set_CPU_Banks
<LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map49_Set_PPU_Banks
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map47_Set_CPU_Banks
<LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map47_Set_PPU_Banks
<LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map45_Write
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map45_Set_PPU_Banks
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map44_Set_CPU_Banks
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map44_Set_PPU_Banks
<LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map4_Set_CPU_Banks
<LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map4_Set_PPU_Banks
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map1_set_ROM_banks
</UL>

<P><STRONG><a name="[2cc]"></a>__aeabi_idiv</STRONG> (ARM, 0 bytes, Stack size 8 bytes, aeabi_sdiv.o(.text), UNUSED)

<P><STRONG><a name="[f2]"></a>__aeabi_idivmod</STRONG> (ARM, 380 bytes, Stack size 8 bytes, aeabi_sdiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_lseek
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfoNES_PadState
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cal_cpu_bus_clk
<LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map244_Write
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map243_Apu
<LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map242_Write
<LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map241_Write
<LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map240_Apu
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map236_Write
<LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map234_Set_Banks
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map233_Write
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map232_Write
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map231_Write
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map230_Write
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map229_Write
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map228_Write
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map227_Write
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map226_Write
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map225_Write
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map222_Write
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map202_WriteSub
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map201_Write
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map200_Write
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map194_Write
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map193_Sram
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map191_Set_CPU_Banks
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map191_Set_PPU_Banks
<LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map189_Write
<LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map189_Apu
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map187_Set_PPU_Banks
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map187_Set_CPU_Banks
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map183_Write
<LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map182_Write
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map181_Apu
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map180_Write
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map160_Write
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map160_HSync
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map151_Write
<LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map140_Apu
<LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map135_Apu
<LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map135_Set_PPU_Banks
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map134_Apu
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map133_Apu
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map122_Sram
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map119_Set_CPU_Banks
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map119_Set_PPU_Banks
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map117_Write
<LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map116_Set_CPU_Banks
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map116_Set_PPU_Banks
<LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map115_Set_CPU_Banks
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map115_Set_PPU_Banks
<LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map113_Write
<LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map113_Apu
<LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map110_Apu
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map109_Apu
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map109_Set_PPU_Banks
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map108_Init
<LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map108_Write
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map107_Write
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map105_Write
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map101_Write
<LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map100_Set_CPU_Banks
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map100_Set_PPU_Banks
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map99_Apu
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map97_Write
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map96_Write
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map94_Write
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map93_Sram
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map92_Write
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map91_Sram
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map90_Sync_Prg_Banks
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map89_Write
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map88_Write
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map87_Sram
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map86_Sram
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map83_Write
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map82_Sram
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map80_Sram
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map79_Apu
<LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map78_Write
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map77_Write
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map76_Write
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map75_Write
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map73_Write
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map72_Write
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map71_Write
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map70_Write
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map69_Write
<LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map68_Write
<LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map67_Write
<LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map66_Write
<LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map65_Write
<LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map64_Write
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map62_Write
<LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map61_Write
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map60_Write
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map58_Write
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map57_Write
<LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map51_Set_CPU_Banks
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map50_Init
<LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map50_Apu
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map48_Write
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map46_Set_ROM_Banks
<LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map45_Set_CPU_Bank4
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map45_Set_CPU_Bank5
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map45_Set_CPU_Bank6
<LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map45_Set_CPU_Bank7
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map42_Write
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map41_Write
<LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map41_Sram
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map40_Write
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map34_Write
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map34_Sram
<LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map33_Write
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map32_Write
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map26_Write
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map25_Write
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map25_Sync_Vrom
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map24_Write
<LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map23_Write
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map22_Write
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map21_Write
<LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map18_Write
<LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map17_Apu
<LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map16_Write
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map15_Write
<LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map13_Write
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map11_Write
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map10_Write
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map9_Write
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map8_Write
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map7_Write
<LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map3_Write
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map2_Write
<LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map1_Write
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfoNES_Cycle
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chk_mounted
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_register
<LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map255_Write
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map252_Write
<LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map251_Set_Banks
<LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map249_Write
<LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map248_Sram
<LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map248_Set_CPU_Banks
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map248_Set_PPU_Banks
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map246_Sram
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map245_Write
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_etento
</UL>

<P><STRONG><a name="[12b]"></a>clust2sect</STRONG> (ARM, 48 bytes, Stack size 0 bytes, ff.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_lseek
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_rename
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkdir
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_write
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_next
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_sdi
</UL>

<P><STRONG><a name="[126]"></a>get_fat</STRONG> (ARM, 372 bytes, Stack size 24 bytes, ff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 520 + Unknown Stack Size
<LI>Call Chain = get_fat &rArr; move_window &rArr; disk_write &rArr; Write_Mult_Block &rArr; CMD25 &rArr; Chk_CMD_End &rArr; Uart_Printf &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
</UL>
<BR>[Called By]<UL><LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_lseek
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_truncate
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_getfree
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_next
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_sdi
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_chain
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;remove_chain
</UL>

<P><STRONG><a name="[127]"></a>put_fat</STRONG> (ARM, 508 bytes, Stack size 32 bytes, ff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 528 + Unknown Stack Size
<LI>Call Chain = put_fat &rArr; move_window &rArr; disk_write &rArr; Write_Mult_Block &rArr; CMD25 &rArr; Chk_CMD_End &rArr; Uart_Printf &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
</UL>
<BR>[Called By]<UL><LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_truncate
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_chain
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;remove_chain
</UL>

<P><STRONG><a name="[12f]"></a>gen_numname</STRONG> (ARM, 320 bytes, Stack size 40 bytes, ff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = gen_numname &rArr; mem_cpy
</UL>
<BR>[Calls]<UL><LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_cpy
</UL>
<BR>[Called By]<UL><LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_register
</UL>

<P><STRONG><a name="[10f]"></a>f_mount</STRONG> (ARM, 76 bytes, Stack size 0 bytes, ff.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Main
</UL>

<P><STRONG><a name="[144]"></a>get_fattime</STRONG> (ARM, 8 bytes, Stack size 0 bytes, ff.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkdir
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_sync
</UL>

<P><STRONG><a name="[143]"></a>f_open</STRONG> (ARM, 616 bytes, Stack size 88 bytes, ff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 760 + Unknown Stack Size
<LI>Call Chain = f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; disk_write &rArr; Write_Mult_Block &rArr; CMD25 &rArr; Chk_CMD_End &rArr; Uart_Printf &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fattime
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chk_mounted
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;follow_path
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_register
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;remove_chain
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
</UL>
<BR>[Called By]<UL><LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadRomImage
</UL>

<P><STRONG><a name="[145]"></a>f_read</STRONG> (ARM, 768 bytes, Stack size 64 bytes, ff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 584 + Unknown Stack Size
<LI>Call Chain = f_read &rArr; get_fat &rArr; move_window &rArr; disk_write &rArr; Write_Mult_Block &rArr; CMD25 &rArr; Chk_CMD_End &rArr; Uart_Printf &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fat
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clust2sect
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;validate
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_cpy
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_write
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_read
</UL>
<BR>[Called By]<UL><LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadRomImage
</UL>

<P><STRONG><a name="[146]"></a>f_write</STRONG> (ARM, 904 bytes, Stack size 64 bytes, ff.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clust2sect
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;validate
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_chain
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_cpy
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_write
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_read
</UL>

<P><STRONG><a name="[147]"></a>f_sync</STRONG> (ARM, 340 bytes, Stack size 24 bytes, ff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 536 + Unknown Stack Size
<LI>Call Chain = f_sync &rArr; sync &rArr; move_window &rArr; disk_write &rArr; Write_Mult_Block &rArr; CMD25 &rArr; Chk_CMD_End &rArr; Uart_Printf &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fattime
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;validate
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sync
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_write
</UL>
<BR>[Called By]<UL><LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_close
</UL>

<P><STRONG><a name="[148]"></a>f_close</STRONG> (ARM, 44 bytes, Stack size 16 bytes, ff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 552 + Unknown Stack Size
<LI>Call Chain = f_close &rArr; f_sync &rArr; sync &rArr; move_window &rArr; disk_write &rArr; Write_Mult_Block &rArr; CMD25 &rArr; Chk_CMD_End &rArr; Uart_Printf &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_sync
</UL>
<BR>[Called By]<UL><LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadRomImage
</UL>

<P><STRONG><a name="[149]"></a>f_lseek</STRONG> (ARM, 744 bytes, Stack size 40 bytes, ff.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fat
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clust2sect
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;validate
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_chain
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_write
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_read
</UL>

<P><STRONG><a name="[f4]"></a>f_opendir</STRONG> (ARM, 220 bytes, Stack size 32 bytes, ff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 680 + Unknown Stack Size
<LI>Call Chain = f_opendir &rArr; follow_path &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; disk_write &rArr; Write_Mult_Block &rArr; CMD25 &rArr; Chk_CMD_End &rArr; Uart_Printf &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chk_mounted
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;follow_path
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_sdi
</UL>
<BR>[Called By]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scan_files
</UL>

<P><STRONG><a name="[f6]"></a>f_readdir</STRONG> (ARM, 172 bytes, Stack size 32 bytes, ff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 648 + Unknown Stack Size
<LI>Call Chain = f_readdir &rArr; dir_read &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; disk_write &rArr; Write_Mult_Block &rArr; CMD25 &rArr; Chk_CMD_End &rArr; Uart_Printf &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;validate
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fileinfo
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_read
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_next
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_sdi
</UL>
<BR>[Called By]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scan_files
</UL>

<P><STRONG><a name="[14a]"></a>f_stat</STRONG> (ARM, 124 bytes, Stack size 72 bytes, ff.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chk_mounted
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;follow_path
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fileinfo
</UL>

<P><STRONG><a name="[14b]"></a>f_getfree</STRONG> (ARM, 464 bytes, Stack size 56 bytes, ff.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fat
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chk_mounted
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
</UL>

<P><STRONG><a name="[14c]"></a>f_truncate</STRONG> (ARM, 292 bytes, Stack size 16 bytes, ff.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;put_fat
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fat
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;validate
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;remove_chain
</UL>

<P><STRONG><a name="[14d]"></a>f_unlink</STRONG> (ARM, 340 bytes, Stack size 104 bytes, ff.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chk_mounted
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;follow_path
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_remove
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_read
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_sdi
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;remove_chain
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sync
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_cpy
</UL>

<P><STRONG><a name="[14e]"></a>f_mkdir</STRONG> (ARM, 696 bytes, Stack size 88 bytes, ff.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fattime
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clust2sect
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chk_mounted
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;follow_path
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_register
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_chain
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;remove_chain
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sync
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_set
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_cpy
</UL>

<P><STRONG><a name="[14f]"></a>f_chmod</STRONG> (ARM, 164 bytes, Stack size 80 bytes, ff.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chk_mounted
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;follow_path
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sync
</UL>

<P><STRONG><a name="[150]"></a>f_utime</STRONG> (ARM, 176 bytes, Stack size 72 bytes, ff.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chk_mounted
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;follow_path
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sync
</UL>

<P><STRONG><a name="[151]"></a>f_rename</STRONG> (ARM, 524 bytes, Stack size 136 bytes, ff.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clust2sect
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chk_mounted
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;follow_path
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_remove
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_register
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sync
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_cpy
</UL>

<P><STRONG><a name="[141]"></a>disk_initialize</STRONG> (ARM, 52 bytes, Stack size 0 bytes, diskio.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chk_mounted
</UL>

<P><STRONG><a name="[140]"></a>disk_status</STRONG> (ARM, 52 bytes, Stack size 0 bytes, diskio.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;validate
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chk_mounted
</UL>

<P><STRONG><a name="[122]"></a>disk_read</STRONG> (ARM, 116 bytes, Stack size 24 bytes, diskio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 472 + Unknown Stack Size
<LI>Call Chain = disk_read &rArr; Read_Mult_Block &rArr; CMD12 &rArr; Chk_CMD_End &rArr; Uart_Printf &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Mult_Block
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_One_Block
</UL>
<BR>[Called By]<UL><LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_lseek
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_write
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chk_mounted
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_fs
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
</UL>

<P><STRONG><a name="[121]"></a>disk_write</STRONG> (ARM, 116 bytes, Stack size 24 bytes, diskio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 472 + Unknown Stack Size
<LI>Call Chain = disk_write &rArr; Write_Mult_Block &rArr; CMD25 &rArr; Chk_CMD_End &rArr; Uart_Printf &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_Mult_Block
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_One_Block
</UL>
<BR>[Called By]<UL><LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_lseek
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_sync
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_write
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sync
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
</UL>

<P><STRONG><a name="[125]"></a>disk_ioctl</STRONG> (ARM, 92 bytes, Stack size 0 bytes, diskio.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sync
</UL>

<P><STRONG><a name="[156]"></a>Chk_CMD_End</STRONG> (ARM, 288 bytes, Stack size 16 bytes, sd_mmc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 416 + Unknown Stack Size
<LI>Call Chain = Chk_CMD_End &rArr; Uart_Printf &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart_Printf
</UL>
<BR>[Called By]<UL><LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CMD38
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CMD33
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CMD32
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CMD25
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CMD24
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CMD12
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CMD18
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CMD0
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CMD1
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CMD8
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ACMD41
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CMD2
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CMD3
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CMD9
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CMD7
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CMD13
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ACMD6
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CMD55
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CMD17
</UL>

<P><STRONG><a name="[157]"></a>CMD17</STRONG> (ARM, 64 bytes, Stack size 8 bytes, sd_mmc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 424 + Unknown Stack Size
<LI>Call Chain = CMD17 &rArr; Chk_CMD_End &rArr; Uart_Printf &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chk_CMD_End
</UL>
<BR>[Called By]<UL><LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_One_Block
</UL>

<P><STRONG><a name="[152]"></a>Read_One_Block</STRONG> (ARM, 212 bytes, Stack size 24 bytes, sd_mmc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 448 + Unknown Stack Size
<LI>Call Chain = Read_One_Block &rArr; CMD17 &rArr; Chk_CMD_End &rArr; Uart_Printf &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CMD17
</UL>
<BR>[Called By]<UL><LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Test_SDI
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_read
</UL>

<P><STRONG><a name="[158]"></a>CMD55</STRONG> (ARM, 76 bytes, Stack size 8 bytes, sd_mmc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 424 + Unknown Stack Size
<LI>Call Chain = CMD55 &rArr; Chk_CMD_End &rArr; Uart_Printf &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chk_CMD_End
</UL>
<BR>[Called By]<UL><LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ACMD41
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ACMD6
</UL>

<P><STRONG><a name="[159]"></a>ACMD6</STRONG> (ARM, 160 bytes, Stack size 16 bytes, sd_mmc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 440 + Unknown Stack Size
<LI>Call Chain = ACMD6 &rArr; CMD55 &rArr; Chk_CMD_End &rArr; Uart_Printf &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CMD55
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chk_CMD_End
</UL>
<BR>[Called By]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_bus_Width
</UL>

<P><STRONG><a name="[15a]"></a>Set_bus_Width</STRONG> (ARM, 48 bytes, Stack size 16 bytes, sd_mmc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 456 + Unknown Stack Size
<LI>Call Chain = Set_bus_Width &rArr; ACMD6 &rArr; CMD55 &rArr; Chk_CMD_End &rArr; Uart_Printf &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ACMD6
</UL>
<BR>[Called By]<UL><LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDinit
</UL>

<P><STRONG><a name="[15b]"></a>CMD13</STRONG> (ARM, 88 bytes, Stack size 8 bytes, sd_mmc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 424 + Unknown Stack Size
<LI>Call Chain = CMD13 &rArr; Chk_CMD_End &rArr; Uart_Printf &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chk_CMD_End
</UL>
<BR>[Called By]<UL><LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDinit
</UL>

<P><STRONG><a name="[15c]"></a>CMD7</STRONG> (ARM, 180 bytes, Stack size 16 bytes, sd_mmc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 432 + Unknown Stack Size
<LI>Call Chain = CMD7 &rArr; Chk_CMD_End &rArr; Uart_Printf &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chk_CMD_End
</UL>
<BR>[Called By]<UL><LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Card_sel_desel
</UL>

<P><STRONG><a name="[15d]"></a>Card_sel_desel</STRONG> (ARM, 48 bytes, Stack size 16 bytes, sd_mmc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 448 + Unknown Stack Size
<LI>Call Chain = Card_sel_desel &rArr; CMD7 &rArr; Chk_CMD_End &rArr; Uart_Printf &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CMD7
</UL>
<BR>[Called By]<UL><LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDinit
</UL>

<P><STRONG><a name="[15e]"></a>CMD9</STRONG> (ARM, 116 bytes, Stack size 16 bytes, sd_mmc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 432 + Unknown Stack Size
<LI>Call Chain = CMD9 &rArr; Chk_CMD_End &rArr; Uart_Printf &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chk_CMD_End
</UL>
<BR>[Called By]<UL><LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDinit
</UL>

<P><STRONG><a name="[15f]"></a>CMD3</STRONG> (ARM, 144 bytes, Stack size 16 bytes, sd_mmc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 432 + Unknown Stack Size
<LI>Call Chain = CMD3 &rArr; Chk_CMD_End &rArr; Uart_Printf &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chk_CMD_End
</UL>
<BR>[Called By]<UL><LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDinit
</UL>

<P><STRONG><a name="[160]"></a>CMD2</STRONG> (ARM, 348 bytes, Stack size 8 bytes, sd_mmc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 424 + Unknown Stack Size
<LI>Call Chain = CMD2 &rArr; Chk_CMD_End &rArr; Uart_Printf &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chk_CMD_End
</UL>
<BR>[Called By]<UL><LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDinit
</UL>

<P><STRONG><a name="[161]"></a>ACMD41</STRONG> (ARM, 172 bytes, Stack size 16 bytes, sd_mmc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 440 + Unknown Stack Size
<LI>Call Chain = ACMD41 &rArr; CMD55 &rArr; Chk_CMD_End &rArr; Uart_Printf &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CMD55
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chk_CMD_End
</UL>
<BR>[Called By]<UL><LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDinit
</UL>

<P><STRONG><a name="[162]"></a>CMD8</STRONG> (ARM, 104 bytes, Stack size 8 bytes, sd_mmc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 424 + Unknown Stack Size
<LI>Call Chain = CMD8 &rArr; Chk_CMD_End &rArr; Uart_Printf &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chk_CMD_End
</UL>
<BR>[Called By]<UL><LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDinit
</UL>

<P><STRONG><a name="[163]"></a>CMD1</STRONG> (ARM, 100 bytes, Stack size 8 bytes, sd_mmc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 424 + Unknown Stack Size
<LI>Call Chain = CMD1 &rArr; Chk_CMD_End &rArr; Uart_Printf &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chk_CMD_End
</UL>
<BR>[Called By]<UL><LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDinit
</UL>

<P><STRONG><a name="[164]"></a>CMD0</STRONG> (ARM, 52 bytes, Stack size 8 bytes, sd_mmc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 424 + Unknown Stack Size
<LI>Call Chain = CMD0 &rArr; Chk_CMD_End &rArr; Uart_Printf &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chk_CMD_End
</UL>
<BR>[Called By]<UL><LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDinit
</UL>

<P><STRONG><a name="[10e]"></a>SDinit</STRONG> (ARM, 1656 bytes, Stack size 16 bytes, sd_mmc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 472 + Unknown Stack Size
<LI>Call Chain = SDinit &rArr; Set_bus_Width &rArr; ACMD6 &rArr; CMD55 &rArr; Chk_CMD_End &rArr; Uart_Printf &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CMD0
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CMD1
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CMD8
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ACMD41
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CMD2
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CMD3
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CMD9
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Card_sel_desel
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CMD13
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_bus_Width
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart_Printf
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Main
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Test_SDI
</UL>

<P><STRONG><a name="[167]"></a>Test_SDI</STRONG> (ARM, 252 bytes, Stack size 8 bytes, sd_mmc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDinit
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_One_Block
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart_Printf
</UL>

<P><STRONG><a name="[168]"></a>CMD18</STRONG> (ARM, 64 bytes, Stack size 8 bytes, sd_mmc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 424 + Unknown Stack Size
<LI>Call Chain = CMD18 &rArr; Chk_CMD_End &rArr; Uart_Printf &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chk_CMD_End
</UL>
<BR>[Called By]<UL><LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Mult_Block
</UL>

<P><STRONG><a name="[169]"></a>CMD12</STRONG> (ARM, 72 bytes, Stack size 8 bytes, sd_mmc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 424 + Unknown Stack Size
<LI>Call Chain = CMD12 &rArr; Chk_CMD_End &rArr; Uart_Printf &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chk_CMD_End
</UL>
<BR>[Called By]<UL><LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_Mult_Block
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Read_Mult_Block
</UL>

<P><STRONG><a name="[16a]"></a>CMD24</STRONG> (ARM, 188 bytes, Stack size 8 bytes, sd_mmc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 424 + Unknown Stack Size
<LI>Call Chain = CMD24 &rArr; Chk_CMD_End &rArr; Uart_Printf &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chk_CMD_End
</UL>
<BR>[Called By]<UL><LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_One_Block
</UL>

<P><STRONG><a name="[16b]"></a>CMD25</STRONG> (ARM, 64 bytes, Stack size 8 bytes, sd_mmc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 424 + Unknown Stack Size
<LI>Call Chain = CMD25 &rArr; Chk_CMD_End &rArr; Uart_Printf &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chk_CMD_End
</UL>
<BR>[Called By]<UL><LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Write_Mult_Block
</UL>

<P><STRONG><a name="[16c]"></a>CMD32</STRONG> (ARM, 64 bytes, Stack size 8 bytes, sd_mmc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chk_CMD_End
</UL>
<BR>[Called By]<UL><LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Erase_Block
</UL>

<P><STRONG><a name="[166]"></a>CMD33</STRONG> (ARM, 64 bytes, Stack size 8 bytes, sd_mmc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 424 + Unknown Stack Size
<LI>Call Chain = CMD33 &rArr; Chk_CMD_End &rArr; Uart_Printf &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chk_CMD_End
</UL>
<BR>[Called By]<UL><LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Erase_Block
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sd_mmc.o(.text)
</UL>
<P><STRONG><a name="[16d]"></a>CMD38</STRONG> (ARM, 60 bytes, Stack size 8 bytes, sd_mmc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chk_CMD_End
</UL>
<BR>[Called By]<UL><LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Erase_Block
</UL>

<P><STRONG><a name="[153]"></a>Read_Mult_Block</STRONG> (ARM, 248 bytes, Stack size 24 bytes, sd_mmc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 448 + Unknown Stack Size
<LI>Call Chain = Read_Mult_Block &rArr; CMD12 &rArr; Chk_CMD_End &rArr; Uart_Printf &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CMD12
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CMD18
</UL>
<BR>[Called By]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_read
</UL>

<P><STRONG><a name="[154]"></a>Write_One_Block</STRONG> (ARM, 228 bytes, Stack size 24 bytes, sd_mmc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 448 + Unknown Stack Size
<LI>Call Chain = Write_One_Block &rArr; CMD24 &rArr; Chk_CMD_End &rArr; Uart_Printf &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CMD24
</UL>
<BR>[Called By]<UL><LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_write
</UL>

<P><STRONG><a name="[155]"></a>Write_Mult_Block</STRONG> (ARM, 284 bytes, Stack size 24 bytes, sd_mmc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 448 + Unknown Stack Size
<LI>Call Chain = Write_Mult_Block &rArr; CMD25 &rArr; Chk_CMD_End &rArr; Uart_Printf &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CMD25
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CMD12
</UL>
<BR>[Called By]<UL><LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_write
</UL>

<P><STRONG><a name="[16e]"></a>Erase_Block</STRONG> (ARM, 88 bytes, Stack size 16 bytes, sd_mmc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CMD38
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CMD33
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CMD32
</UL>

<P><STRONG><a name="[165]"></a>Delay</STRONG> (ARM, 220 bytes, Stack size 16 bytes, 2440lib.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + Unknown Stack Size
<LI>Call Chain = Delay
</UL>
<BR>[Calls]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Beep
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDinit
</UL>

<P><STRONG><a name="[2cd]"></a>Port_Init0</STRONG> (ARM, 160 bytes, Stack size 0 bytes, 2440lib.o(.text), UNUSED)

<P><STRONG><a name="[100]"></a>Port_Init</STRONG> (ARM, 160 bytes, Stack size 0 bytes, 2440lib.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Main
</UL>

<P><STRONG><a name="[104]"></a>Uart_Init</STRONG> (ARM, 380 bytes, Stack size 48 bytes, 2440lib.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = Uart_Init &rArr; __aeabi_d2iz
</UL>
<BR>[Calls]<UL><LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Main
</UL>

<P><STRONG><a name="[174]"></a>Uart_SendByte</STRONG> (ARM, 264 bytes, Stack size 0 bytes, 2440lib.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart_GetIntNum_GJ
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart_GetString
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart_SendString
</UL>

<P><STRONG><a name="[173]"></a>Uart_SendString</STRONG> (ARM, 36 bytes, Stack size 4 bytes, 2440lib.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = Uart_SendString
</UL>
<BR>[Calls]<UL><LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart_SendByte
</UL>
<BR>[Called By]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart_Printf
</UL>

<P><STRONG><a name="[fc]"></a>Uart_Printf</STRONG> (ARM, 60 bytes, Stack size 280 bytes, 2440lib.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 400 + Unknown Stack Size
<LI>Call Chain = Uart_Printf &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart_SendString
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__c89vsprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfoNES_Main
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadRomImage
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfoNES_ReadRom
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Print
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUZZER_PWM_Test
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart_GetString
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_interrupt
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_interrupt
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MoveViewPort
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Open_Touchpanel
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearMemory
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Main
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HaltUndef
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HaltSwi
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HaltPabort
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HaltDabort
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Test_SDI
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDinit
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chk_CMD_End
</UL>

<P><STRONG><a name="[176]"></a>uart_interrupt</STRONG> (ARM, 560 bytes, Stack size 32 bytes, 2440lib.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearSubPending
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearPending
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart_Printf
</UL>

<P><STRONG><a name="[108]"></a>Uart1_irq_init</STRONG> (ARM, 72 bytes, Stack size 8 bytes, 2440lib.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Uart1_irq_init
</UL>
<BR>[Calls]<UL><LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearSubPending
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearPending
</UL>
<BR>[Called By]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Main
</UL>

<P><STRONG><a name="[179]"></a>uart0_interrupt</STRONG> (ARM, 688 bytes, Stack size 32 bytes, 2440lib.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearSubPending
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearPending
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart_Printf
</UL>

<P><STRONG><a name="[107]"></a>Uart0_irq_init</STRONG> (ARM, 72 bytes, Stack size 8 bytes, 2440lib.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Uart0_irq_init
</UL>
<BR>[Calls]<UL><LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearSubPending
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearPending
</UL>
<BR>[Called By]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Main
</UL>

<P><STRONG><a name="[105]"></a>Uart_Select</STRONG> (ARM, 12 bytes, Stack size 0 bytes, 2440lib.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Main
</UL>

<P><STRONG><a name="[2ce]"></a>Uart_TxEmpty</STRONG> (ARM, 96 bytes, Stack size 0 bytes, 2440lib.o(.text), UNUSED)

<P><STRONG><a name="[17b]"></a>Uart_Getch</STRONG> (ARM, 152 bytes, Stack size 0 bytes, 2440lib.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUZZER_PWM_Test
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart_GetIntNum_GJ
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart_GetString
</UL>

<P><STRONG><a name="[1cc]"></a>Uart_GetKey</STRONG> (ARM, 164 bytes, Stack size 0 bytes, 2440lib.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MoveViewPort
</UL>

<P><STRONG><a name="[17a]"></a>Uart_GetString</STRONG> (ARM, 96 bytes, Stack size 16 bytes, 2440lib.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart_SendByte
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart_Printf
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart_Getch
</UL>
<BR>[Called By]<UL><LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart_GetIntNum
</UL>

<P><STRONG><a name="[17c]"></a>Uart_GetIntNum</STRONG> (ARM, 360 bytes, Stack size 64 bytes, 2440lib.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart_GetString
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_ctype_table
</UL>

<P><STRONG><a name="[17f]"></a>Uart_GetIntNum_GJ</STRONG> (ARM, 168 bytes, Stack size 32 bytes, 2440lib.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart_SendByte
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart_Getch
</UL>

<P><STRONG><a name="[10a]"></a>Led_Display</STRONG> (ARM, 36 bytes, Stack size 0 bytes, 2440lib.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Main
</UL>

<P><STRONG><a name="[180]"></a>Buzzer_Freq_Set</STRONG> (ARM, 208 bytes, Stack size 8 bytes, 2440lib.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUZZER_PWM_Test
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Beep
</UL>

<P><STRONG><a name="[182]"></a>Buzzer_Stop</STRONG> (ARM, 56 bytes, Stack size 0 bytes, 2440lib.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUZZER_PWM_Test
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Beep
</UL>

<P><STRONG><a name="[181]"></a>Beep</STRONG> (ARM, 36 bytes, Stack size 16 bytes, 2440lib.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Buzzer_Stop
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Buzzer_Freq_Set
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delay
</UL>

<P><STRONG><a name="[183]"></a>BUZZER_PWM_Test</STRONG> (ARM, 156 bytes, Stack size 16 bytes, 2440lib.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Buzzer_Stop
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Buzzer_Freq_Set
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart_Printf
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart_Getch
</UL>

<P><STRONG><a name="[184]"></a>Timer_Start</STRONG> (ARM, 80 bytes, Stack size 8 bytes, 2440lib.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>

<P><STRONG><a name="[185]"></a>Timer_Stop</STRONG> (ARM, 56 bytes, Stack size 8 bytes, 2440lib.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>

<P><STRONG><a name="[102]"></a>ChangeMPllValue</STRONG> (ARM, 24 bytes, Stack size 0 bytes, 2440lib.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Main
</UL>

<P><STRONG><a name="[103]"></a>ChangeClockDivider</STRONG> (ARM, 448 bytes, Stack size 24 bytes, 2440lib.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24 + Unknown Stack Size
<LI>Call Chain = ChangeClockDivider
</UL>
<BR>[Calls]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MMU_SetAsyncBusMode
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MMU_SetFastBusMode
</UL>
<BR>[Called By]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Main
</UL>

<P><STRONG><a name="[2cf]"></a>ChangeUPllValue</STRONG> (ARM, 24 bytes, Stack size 0 bytes, 2440lib.o(.text), UNUSED)

<P><STRONG><a name="[2d0]"></a>malloc</STRONG> (ARM, 104 bytes, Stack size 0 bytes, 2440lib.o(.text), UNUSED)

<P><STRONG><a name="[2d1]"></a>free</STRONG> (ARM, 12 bytes, Stack size 0 bytes, 2440lib.o(.text), UNUSED)

<P><STRONG><a name="[16f]"></a>__aeabi_i2d</STRONG> (ARM, 0 bytes, Stack size 0 bytes, dflt_noclz.o(x$fpl$dflt))
<BR><BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AdcTsAuto
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart_Init
</UL>

<P><STRONG><a name="[2d2]"></a>_dflt</STRONG> (ARM, 88 bytes, Stack size 0 bytes, dflt_noclz.o(x$fpl$dflt), UNUSED)

<P><STRONG><a name="[2d3]"></a>__dflt_normalise</STRONG> (ARM, 0 bytes, Stack size unknown bytes, dflt_noclz.o(x$fpl$dflt), UNUSED)

<P><STRONG><a name="[2d4]"></a>__I$use$fp</STRONG> (ARM, 0 bytes, Stack size 32 bytes, usenofp.o(x$fpl$usenofp), UNUSED)

<P><STRONG><a name="[170]"></a>__aeabi_ddiv</STRONG> (ARM, 0 bytes, Stack size 32 bytes, ddiv.o(x$fpl$ddiv))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __aeabi_ddiv
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AdcTsAuto
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart_Init
</UL>

<P><STRONG><a name="[188]"></a>_ddiv</STRONG> (ARM, 584 bytes, Stack size 32 bytes, ddiv.o(x$fpl$ddiv), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dretinf
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
</UL>

<P><STRONG><a name="[189]"></a>__fpl_dretinf</STRONG> (ARM, 16 bytes, Stack size 0 bytes, dretinf.o(x$fpl$dretinf), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dmul
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ddiv
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dadd
</UL>

<P><STRONG><a name="[18a]"></a>__fpl_dnaninf</STRONG> (ARM, 184 bytes, Stack size 16 bytes, dnaninf.o(x$fpl$dnaninf), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dmul
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dfix
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ddiv
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsub
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dadd
</UL>

<P><STRONG><a name="[171]"></a>__aeabi_dadd</STRONG> (ARM, 0 bytes, Stack size 16 bytes, daddsub_noclz.o(x$fpl$dadd))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart_Init
</UL>

<P><STRONG><a name="[18b]"></a>_dadd</STRONG> (ARM, 336 bytes, Stack size 16 bytes, daddsub_noclz.o(x$fpl$dadd), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dretinf
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsub1
</UL>

<P><STRONG><a name="[1b7]"></a>__aeabi_dsub</STRONG> (ARM, 0 bytes, Stack size 32 bytes, daddsub_noclz.o(x$fpl$dsub))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __aeabi_dsub
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AdcTsAuto
</UL>

<P><STRONG><a name="[18d]"></a>_dsub</STRONG> (ARM, 568 bytes, Stack size 32 bytes, daddsub_noclz.o(x$fpl$dsub), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dadd1
</UL>

<P><STRONG><a name="[172]"></a>__aeabi_d2iz</STRONG> (ARM, 0 bytes, Stack size 32 bytes, dfix.o(x$fpl$dfix))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __aeabi_d2iz
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AdcTsAuto
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart_Init
</UL>

<P><STRONG><a name="[18f]"></a>_dfix</STRONG> (ARM, 112 bytes, Stack size 32 bytes, dfix.o(x$fpl$dfix), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
</UL>

<P><STRONG><a name="[175]"></a>__c89vsprintf</STRONG> (ARM, 56 bytes, Stack size 16 bytes, c89vsprintf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120 + Unknown Stack Size
<LI>Call Chain = __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sputc
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char_common
</UL>
<BR>[Called By]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart_Printf
</UL>

<P><STRONG><a name="[c9]"></a>_printf_charcount</STRONG> (ARM, 68 bytes, Stack size 0 bytes, _printf_charcount.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_n
</UL>

<P><STRONG><a name="[d3]"></a>_printf_int_dec</STRONG> (ARM, 164 bytes, Stack size 24 bytes, _printf_dec.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = _printf_int_dec &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_udiv10
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_common
<LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_truncate_unsigned
<LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_truncate_signed
</UL>
<BR>[Called By]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_u
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_d
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_i
</UL>

<P><STRONG><a name="[191]"></a>_printf_truncate_signed</STRONG> (ARM, 36 bytes, Stack size 0 bytes, _printf_truncate.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec
</UL>

<P><STRONG><a name="[192]"></a>_printf_truncate_unsigned</STRONG> (ARM, 32 bytes, Stack size 0 bytes, _printf_truncate.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_hex
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_oct
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec
</UL>

<P><STRONG><a name="[193]"></a>__rt_udiv10</STRONG> (ARM, 44 bytes, Stack size 0 bytes, rtudiv10.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec_real
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec
</UL>

<P><STRONG><a name="[194]"></a>_printf_int_common</STRONG> (ARM, 296 bytes, Stack size 32 bytes, _printf_intcommon.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
</UL>
<BR>[Called By]<UL><LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_longlong_hex
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_longlong_oct
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_longlong_dec
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec
</UL>

<P><STRONG><a name="[cd]"></a>_printf_fp_dec</STRONG> (ARM, 4 bytes, Stack size 0 bytes, printf1.o(x$fpl$printf1))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = _printf_fp_dec &rArr; _printf_fp_dec_real &rArr; _fp_digits &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec_real
</UL>
<BR>[Called By]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_g
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_e
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_f
</UL>

<P><STRONG><a name="[2d5]"></a>__lib_sel_fp_printf</STRONG> (ARM, 4 bytes, Stack size 0 bytes, _printf_fp_dec.o(.text), UNUSED)

<P><STRONG><a name="[195]"></a>_printf_fp_dec_real</STRONG> (ARM, 952 bytes, Stack size 104 bytes, _printf_fp_dec.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = _printf_fp_dec_real &rArr; _fp_digits &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_udiv10
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_locale
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_fpclassify
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_infnan
</UL>
<BR>[Called By]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec
</UL>

<P><STRONG><a name="[19f]"></a>_get_lc_numeric</STRONG> (ARM, 68 bytes, Stack size 8 bytes, lc_numeric_c.o(locale$$code), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
</UL>

<P><STRONG><a name="[1a0]"></a>strcmp</STRONG> (ARM, 156 bytes, Stack size 4 bytes, strcmp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = strcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_menu
<LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_get_lc_ctype
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_get_lc_numeric
</UL>

<P><STRONG><a name="[197]"></a>_btod_etento</STRONG> (ARM, 308 bytes, Stack size 72 bytes, bigflt0.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_emul
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_ediv
</UL>
<BR>[Called By]<UL><LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[19a]"></a>_btod_emul</STRONG> (ARM, 48 bytes, Stack size 24 bytes, btod.o(CL$$btod_emul))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__btod_mult_common
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_e2e
</UL>
<BR>[Called By]<UL><LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_etento
</UL>

<P><STRONG><a name="[1a1]"></a>__btod_mult_common</STRONG> (ARM, 612 bytes, Stack size 16 bytes, btod.o(CL$$btod_mult_common))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __btod_mult_common
</UL>
<BR>[Called By]<UL><LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_emul
</UL>

<P><STRONG><a name="[1a2]"></a>_e2e</STRONG> (ARM, 220 bytes, Stack size 24 bytes, btod.o(CL$$btod_e2e))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _e2e
</UL>
<BR>[Called By]<UL><LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_emul
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_ediv
</UL>

<P><STRONG><a name="[199]"></a>_btod_ediv</STRONG> (ARM, 48 bytes, Stack size 24 bytes, btod.o(CL$$btod_ediv))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _btod_ediv &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_e2e
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__btod_div_common
</UL>
<BR>[Called By]<UL><LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_etento
</UL>

<P><STRONG><a name="[1a3]"></a>__btod_div_common</STRONG> (ARM, 712 bytes, Stack size 24 bytes, btod.o(CL$$btod_div_common))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __btod_div_common
</UL>
<BR>[Called By]<UL><LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_ediv
</UL>

<P><STRONG><a name="[198]"></a>_btod_d2e</STRONG> (ARM, 56 bytes, Stack size 0 bytes, btod.o(CL$$btod_d2e))
<BR><BR>[Calls]<UL><LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_d2e_norm_op1
</UL>
<BR>[Called By]<UL><LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[1a4]"></a>_d2e_norm_op1</STRONG> (ARM, 104 bytes, Stack size 0 bytes, btod.o(CL$$btod_d2e_norm_op1))
<BR><BR>[Calls]<UL><LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_d2e_denorm_low
</UL>
<BR>[Called By]<UL><LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_d2e
</UL>

<P><STRONG><a name="[1a5]"></a>_d2e_denorm_low</STRONG> (ARM, 84 bytes, Stack size 0 bytes, btod.o(CL$$btod_d2e_denorm_low))
<BR><BR>[Called By]<UL><LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_d2e_norm_op1
</UL>

<P><STRONG><a name="[19b]"></a>_ll_udiv10</STRONG> (ARM, 152 bytes, Stack size 12 bytes, lludiv10.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = _ll_udiv10
</UL>
<BR>[Called By]<UL><LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_longlong_dec
</UL>

<P><STRONG><a name="[19c]"></a>__ARM_fpclassify</STRONG> (ARM, 48 bytes, Stack size 0 bytes, fpclassify.o(i.__ARM_fpclassify))
<BR><BR>[Called By]<UL><LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec_real
</UL>

<P><STRONG><a name="[19d]"></a>_printf_fp_infnan</STRONG> (ARM, 204 bytes, Stack size 24 bytes, _printf_fp_infnan.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _printf_fp_infnan &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
</UL>
<BR>[Called By]<UL><LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec_real
</UL>

<P><STRONG><a name="[19e]"></a>__rt_locale</STRONG> (ARM, 12 bytes, Stack size 0 bytes, rt_locale.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec_real
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_ctype_table
</UL>

<P><STRONG><a name="[1a6]"></a>_printf_lcs_common</STRONG> (ARM, 36 bytes, Stack size 8 bytes, _printf_wchar.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = _printf_lcs_common &rArr; _printf_wctomb &rArr; _wcrtomb &rArr; __rt_ctype_table
</UL>
<BR>[Calls]<UL><LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_wc (Weak Reference)
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_wctomb
</UL>
<BR>[Called By]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_wstring
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_wchar
</UL>

<P><STRONG><a name="[e7]"></a>_printf_wchar</STRONG> (ARM, 28 bytes, Stack size 0 bytes, _printf_wchar.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = _printf_wchar &rArr; _printf_lcs_common &rArr; _printf_wctomb &rArr; _wcrtomb &rArr; __rt_ctype_table
</UL>
<BR>[Calls]<UL><LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_lcs_common
</UL>
<BR>[Called By]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_lc
</UL>

<P><STRONG><a name="[e9]"></a>_printf_wstring</STRONG> (ARM, 12 bytes, Stack size 0 bytes, _printf_wchar.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = _printf_wstring &rArr; _printf_lcs_common &rArr; _printf_wctomb &rArr; _wcrtomb &rArr; __rt_ctype_table
</UL>
<BR>[Calls]<UL><LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_lcs_common
</UL>
<BR>[Called By]<UL><LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_ls
</UL>

<P><STRONG><a name="[1a8]"></a>_printf_wctomb</STRONG> (ARM, 316 bytes, Stack size 56 bytes, _printf_wctomb.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = _printf_wctomb &rArr; _wcrtomb &rArr; __rt_ctype_table
</UL>
<BR>[Calls]<UL><LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_wcrtomb
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
</UL>
<BR>[Called By]<UL><LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_lcs_common
</UL>

<P><STRONG><a name="[1a9]"></a>_wcrtomb</STRONG> (ARM, 108 bytes, Stack size 16 bytes, _wcrtomb.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _wcrtomb &rArr; __rt_ctype_table
</UL>
<BR>[Calls]<UL><LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_ctype_table
</UL>
<BR>[Called By]<UL><LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_wctomb
</UL>

<P><STRONG><a name="[17e]"></a>__rt_ctype_table</STRONG> (ARM, 20 bytes, Stack size 8 bytes, rt_ctype_table.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __rt_ctype_table
</UL>
<BR>[Calls]<UL><LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_locale
</UL>
<BR>[Called By]<UL><LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart_GetIntNum
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_wcrtomb
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strtol
</UL>

<P><STRONG><a name="[6]"></a>_get_lc_ctype</STRONG> (ARM, 68 bytes, Stack size 8 bytes, lc_ctype_c.o(locale$$code))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = _get_lc_ctype &rArr; strcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rt_ctype_table.o(.text)
</UL>
<P><STRONG><a name="[db]"></a>_printf_longlong_dec</STRONG> (ARM, 164 bytes, Stack size 24 bytes, _printf_longlong_dec.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = _printf_longlong_dec &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_common
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ll_udiv10
</UL>
<BR>[Called By]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_llu
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_lld
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_lli
</UL>

<P><STRONG><a name="[1aa]"></a>_printf_longlong_oct</STRONG> (ARM, 112 bytes, Stack size 8 bytes, _printf_oct_int_ll.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _printf_longlong_oct &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_common
</UL>
<BR>[Called By]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_ll_oct
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_oct
</UL>

<P><STRONG><a name="[d7]"></a>_printf_int_oct</STRONG> (ARM, 40 bytes, Stack size 8 bytes, _printf_oct_int_ll.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _printf_int_oct &rArr; _printf_longlong_oct &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_longlong_oct
<LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_truncate_unsigned
</UL>
<BR>[Called By]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_o
</UL>

<P><STRONG><a name="[df]"></a>_printf_ll_oct</STRONG> (ARM, 16 bytes, Stack size 0 bytes, _printf_oct_int_ll.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _printf_ll_oct &rArr; _printf_longlong_oct &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_longlong_oct
</UL>
<BR>[Called By]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_llo
</UL>

<P><STRONG><a name="[1ab]"></a>_printf_longlong_hex</STRONG> (ARM, 136 bytes, Stack size 16 bytes, _printf_hex_int_ll_ptr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _printf_longlong_hex &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_common
</UL>
<BR>[Called By]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_hex_ptr
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_ll_hex
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_hex
</UL>

<P><STRONG><a name="[d9]"></a>_printf_int_hex</STRONG> (ARM, 48 bytes, Stack size 16 bytes, _printf_hex_int_ll_ptr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = _printf_int_hex &rArr; _printf_longlong_hex &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_longlong_hex
<LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_truncate_unsigned
</UL>
<BR>[Called By]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_x
</UL>

<P><STRONG><a name="[e1]"></a>_printf_ll_hex</STRONG> (ARM, 16 bytes, Stack size 0 bytes, _printf_hex_int_ll_ptr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _printf_ll_hex &rArr; _printf_longlong_hex &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_longlong_hex
</UL>
<BR>[Called By]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_llx
</UL>

<P><STRONG><a name="[cb]"></a>_printf_hex_ptr</STRONG> (ARM, 32 bytes, Stack size 0 bytes, _printf_hex_int_ll_ptr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _printf_hex_ptr &rArr; _printf_longlong_hex &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_longlong_hex
</UL>
<BR>[Called By]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_p
</UL>

<P><STRONG><a name="[190]"></a>_printf_char_common</STRONG> (ARM, 60 bytes, Stack size 64 bytes, _printf_char_common.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__printf
</UL>
<BR>[Called By]<UL><LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__c89vsprintf
</UL>

<P><STRONG><a name="[1ac]"></a>__printf</STRONG> (ARM, 644 bytes, Stack size 40 bytes, __printf_flags_ss_wp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40 + Unknown Stack Size
<LI>Call Chain = __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_percent
</UL>
<BR>[Called By]<UL><LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char_common
</UL>

<P><STRONG><a name="[5]"></a>_sputc</STRONG> (ARM, 16 bytes, Stack size 0 bytes, _sputc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__c89vsprintf
</UL>
<BR>[Address Reference Count : 2]<UL><LI> __2sprintf.o(.text)
<LI> c89vsprintf.o(.text)
</UL>
<P><STRONG><a name="[177]"></a>ClearSubPending</STRONG> (ARM, 32 bytes, Stack size 0 bytes, 2440lib.o(i.ClearSubPending))
<BR><BR>[Called By]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_interrupt
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_interrupt
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart1_irq_init
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart0_irq_init
</UL>

<P><STRONG><a name="[178]"></a>ClearPending</STRONG> (ARM, 48 bytes, Stack size 0 bytes, keyscan.o(i.ClearPending))
<BR><BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AdcTsAuto
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_interrupt
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_interrupt
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart1_irq_init
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart0_irq_init
</UL>

<P><STRONG><a name="[f5]"></a>strlen</STRONG> (ARM, 96 bytes, Stack size 0 bytes, strlen.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart_GetIntNum
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scan_files
</UL>

<P><STRONG><a name="[17d]"></a>atoi</STRONG> (ARM, 44 bytes, Stack size 16 bytes, atoi.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strtol
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart_GetIntNum
</UL>

<P><STRONG><a name="[1ae]"></a>__aeabi_errno_addr</STRONG> (ARM, 12 bytes, Stack size 0 bytes, rt_errno_addr.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_strtoul
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strtol
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
</UL>

<P><STRONG><a name="[2d6]"></a>__errno</STRONG> (ARM, 0 bytes, Stack size 0 bytes, rt_errno_addr.o(.text), UNUSED)

<P><STRONG><a name="[2d7]"></a>__rt_errno_addr</STRONG> (ARM, 0 bytes, Stack size 0 bytes, rt_errno_addr.o(.text), UNUSED)

<P><STRONG><a name="[1af]"></a>strtol</STRONG> (ARM, 184 bytes, Stack size 32 bytes, strtol.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_strtoul
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_ctype_table
</UL>
<BR>[Called By]<UL><LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atoi
</UL>

<P><STRONG><a name="[1b0]"></a>_strtoul</STRONG> (ARM, 236 bytes, Stack size 40 bytes, _strtoul.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_chval
</UL>
<BR>[Called By]<UL><LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strtol
</UL>

<P><STRONG><a name="[1b1]"></a>_chval</STRONG> (ARM, 32 bytes, Stack size 0 bytes, _chval.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_strtoul
</UL>

<P><STRONG><a name="[2d8]"></a>EnterCritical</STRONG> (ARM, 0 bytes, Stack size unknown bytes, 2440slib.o(C$$code), UNUSED)

<P><STRONG><a name="[2d9]"></a>ExitCritical</STRONG> (ARM, 0 bytes, Stack size unknown bytes, 2440slib.o(C$$code), UNUSED)

<P><STRONG><a name="[1c9]"></a>SET_IF</STRONG> (ARM, 0 bytes, Stack size unknown bytes, 2440slib.o(C$$code), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_MoveViewPort
</UL>

<P><STRONG><a name="[2da]"></a>WR_IF</STRONG> (ARM, 0 bytes, Stack size unknown bytes, 2440slib.o(C$$code), UNUSED)

<P><STRONG><a name="[1ca]"></a>CLR_IF</STRONG> (ARM, 0 bytes, Stack size unknown bytes, 2440slib.o(C$$code), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_MoveViewPort
</UL>

<P><STRONG><a name="[2db]"></a>outportw</STRONG> (ARM, 4 bytes, Stack size unknown bytes, 2440slib.o(C$$code), UNUSED)

<P><STRONG><a name="[2dc]"></a>inportw</STRONG> (ARM, 4 bytes, Stack size unknown bytes, 2440slib.o(C$$code), UNUSED)

<P><STRONG><a name="[1c5]"></a>MMU_EnableICache</STRONG> (ARM, 0 bytes, Stack size unknown bytes, 2440slib.o(C$$code))
<BR><BR>[Called By]<UL><LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChangeRomCacheStatus
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MMU_Init
</UL>

<P><STRONG><a name="[1ba]"></a>MMU_DisableICache</STRONG> (ARM, 0 bytes, Stack size unknown bytes, 2440slib.o(C$$code))
<BR><BR>[Called By]<UL><LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChangeRomCacheStatus
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MMU_Init
</UL>

<P><STRONG><a name="[1c6]"></a>MMU_EnableDCache</STRONG> (ARM, 0 bytes, Stack size unknown bytes, 2440slib.o(C$$code))
<BR><BR>[Called By]<UL><LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChangeRomCacheStatus
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MMU_Init
</UL>

<P><STRONG><a name="[1b9]"></a>MMU_DisableDCache</STRONG> (ARM, 0 bytes, Stack size unknown bytes, 2440slib.o(C$$code))
<BR><BR>[Called By]<UL><LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChangeRomCacheStatus
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MMU_Init
</UL>

<P><STRONG><a name="[1c3]"></a>MMU_EnableAlignFault</STRONG> (ARM, 0 bytes, Stack size unknown bytes, 2440slib.o(C$$code))
<BR><BR>[Called By]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MMU_Init
</UL>

<P><STRONG><a name="[2dd]"></a>MMU_DisableAlignFault</STRONG> (ARM, 0 bytes, Stack size unknown bytes, 2440slib.o(C$$code), UNUSED)

<P><STRONG><a name="[1c4]"></a>MMU_EnableMMU</STRONG> (ARM, 0 bytes, Stack size unknown bytes, 2440slib.o(C$$code))
<BR><BR>[Called By]<UL><LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChangeRomCacheStatus
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MMU_Init
</UL>

<P><STRONG><a name="[1bd]"></a>MMU_DisableMMU</STRONG> (ARM, 0 bytes, Stack size unknown bytes, 2440slib.o(C$$code))
<BR><BR>[Called By]<UL><LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChangeRomCacheStatus
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MMU_Init
</UL>

<P><STRONG><a name="[187]"></a>MMU_SetFastBusMode</STRONG> (ARM, 0 bytes, Stack size unknown bytes, 2440slib.o(C$$code))
<BR><BR>[Called By]<UL><LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChangeClockDivider
</UL>

<P><STRONG><a name="[186]"></a>MMU_SetAsyncBusMode</STRONG> (ARM, 0 bytes, Stack size unknown bytes, 2440slib.o(C$$code))
<BR><BR>[Called By]<UL><LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChangeClockDivider
</UL>

<P><STRONG><a name="[1c0]"></a>MMU_SetTTBase</STRONG> (ARM, 0 bytes, Stack size unknown bytes, 2440slib.o(C$$code))
<BR><BR>[Called By]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MMU_Init
</UL>

<P><STRONG><a name="[1c1]"></a>MMU_SetDomain</STRONG> (ARM, 0 bytes, Stack size unknown bytes, 2440slib.o(C$$code))
<BR><BR>[Called By]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MMU_Init
</UL>

<P><STRONG><a name="[2de]"></a>MMU_InvalidateIDCache</STRONG> (ARM, 0 bytes, Stack size unknown bytes, 2440slib.o(C$$code), UNUSED)

<P><STRONG><a name="[1bc]"></a>MMU_InvalidateICache</STRONG> (ARM, 0 bytes, Stack size unknown bytes, 2440slib.o(C$$code))
<BR><BR>[Called By]<UL><LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChangeRomCacheStatus
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MMU_Init
</UL>

<P><STRONG><a name="[2df]"></a>MMU_InvalidateICacheMVA</STRONG> (ARM, 0 bytes, Stack size unknown bytes, 2440slib.o(C$$code), UNUSED)

<P><STRONG><a name="[2e0]"></a>MMU_PrefetchICacheMVA</STRONG> (ARM, 0 bytes, Stack size unknown bytes, 2440slib.o(C$$code), UNUSED)

<P><STRONG><a name="[2e1]"></a>MMU_InvalidateDCache</STRONG> (ARM, 0 bytes, Stack size unknown bytes, 2440slib.o(C$$code), UNUSED)

<P><STRONG><a name="[2e2]"></a>MMU_InvalidateDCacheMVA</STRONG> (ARM, 0 bytes, Stack size unknown bytes, 2440slib.o(C$$code), UNUSED)

<P><STRONG><a name="[2e3]"></a>MMU_CleanDCacheMVA</STRONG> (ARM, 0 bytes, Stack size unknown bytes, 2440slib.o(C$$code), UNUSED)

<P><STRONG><a name="[2e4]"></a>MMU_CleanInvalidateDCacheMVA</STRONG> (ARM, 0 bytes, Stack size unknown bytes, 2440slib.o(C$$code), UNUSED)

<P><STRONG><a name="[2e5]"></a>MMU_CleanDCacheIndex</STRONG> (ARM, 0 bytes, Stack size unknown bytes, 2440slib.o(C$$code), UNUSED)

<P><STRONG><a name="[1bb]"></a>MMU_CleanInvalidateDCacheIndex</STRONG> (ARM, 0 bytes, Stack size unknown bytes, 2440slib.o(C$$code))
<BR><BR>[Called By]<UL><LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChangeRomCacheStatus
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MMU_Init
</UL>

<P><STRONG><a name="[2e6]"></a>MMU_WaitForInterrupt</STRONG> (ARM, 0 bytes, Stack size unknown bytes, 2440slib.o(C$$code), UNUSED)

<P><STRONG><a name="[1be]"></a>MMU_InvalidateTLB</STRONG> (ARM, 0 bytes, Stack size unknown bytes, 2440slib.o(C$$code))
<BR><BR>[Called By]<UL><LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChangeRomCacheStatus
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MMU_Init
</UL>

<P><STRONG><a name="[2e7]"></a>MMU_InvalidateITLB</STRONG> (ARM, 0 bytes, Stack size unknown bytes, 2440slib.o(C$$code), UNUSED)

<P><STRONG><a name="[2e8]"></a>MMU_InvalidateITLBMVA</STRONG> (ARM, 0 bytes, Stack size unknown bytes, 2440slib.o(C$$code), UNUSED)

<P><STRONG><a name="[2e9]"></a>MMU_InvalidateDTLB</STRONG> (ARM, 0 bytes, Stack size unknown bytes, 2440slib.o(C$$code), UNUSED)

<P><STRONG><a name="[2ea]"></a>MMU_InvalidateDTLBMVA</STRONG> (ARM, 0 bytes, Stack size unknown bytes, 2440slib.o(C$$code), UNUSED)

<P><STRONG><a name="[2eb]"></a>MMU_SetDCacheLockdownBase</STRONG> (ARM, 0 bytes, Stack size unknown bytes, 2440slib.o(C$$code), UNUSED)

<P><STRONG><a name="[2ec]"></a>MMU_SetICacheLockdownBase</STRONG> (ARM, 0 bytes, Stack size unknown bytes, 2440slib.o(C$$code), UNUSED)

<P><STRONG><a name="[2ed]"></a>MMU_SetDTLBLockdown</STRONG> (ARM, 0 bytes, Stack size unknown bytes, 2440slib.o(C$$code), UNUSED)

<P><STRONG><a name="[2ee]"></a>MMU_SetITLBLockdown</STRONG> (ARM, 0 bytes, Stack size unknown bytes, 2440slib.o(C$$code), UNUSED)

<P><STRONG><a name="[1c2]"></a>MMU_SetProcessId</STRONG> (ARM, 0 bytes, Stack size unknown bytes, 2440slib.o(C$$code))
<BR><BR>[Called By]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MMU_Init
</UL>

<P><STRONG><a name="[13a]"></a>ff_convert</STRONG> (ARM, 188 bytes, Stack size 24 bytes, cc936.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = ff_convert
</UL>
<BR>[Called By]<UL><LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fileinfo
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_name
</UL>

<P><STRONG><a name="[12e]"></a>ff_wtoupper</STRONG> (ARM, 108 bytes, Stack size 0 bytes, cc936.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_name
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmp_lfn
</UL>

<P><STRONG><a name="[f7]"></a>__2sprintf</STRONG> (ARM, 64 bytes, Stack size 32 bytes, __2sprintf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136 + Unknown Stack Size
<LI>Call Chain = __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sputc
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char_common
</UL>
<BR>[Called By]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scan_files
</UL>

<P><STRONG><a name="[f8]"></a>strstr</STRONG> (ARM, 68 bytes, Stack size 8 bytes, strstr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = strstr
</UL>
<BR>[Called By]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scan_files
</UL>

<P><STRONG><a name="[f9]"></a>__aeabi_memset</STRONG> (ARM, 16 bytes, Stack size 0 bytes, aeabi_memset.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_menu
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scan_files
</UL>

<P><STRONG><a name="[1b5]"></a>__aeabi_memclr</STRONG> (ARM, 0 bytes, Stack size 0 bytes, rt_memclr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfoNES_ReadRom
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncpy
</UL>

<P><STRONG><a name="[1b3]"></a>__rt_memclr</STRONG> (ARM, 64 bytes, Stack size 0 bytes, rt_memclr.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset_w
</UL>

<P><STRONG><a name="[1b2]"></a>_memset</STRONG> (ARM, 0 bytes, Stack size unknown bytes, rt_memclr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memset
</UL>

<P><STRONG><a name="[1e3]"></a>__aeabi_memclr4</STRONG> (ARM, 0 bytes, Stack size 4 bytes, rt_memclr_w.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = __aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_Main
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_menu
</UL>

<P><STRONG><a name="[2ef]"></a>__aeabi_memclr8</STRONG> (ARM, 0 bytes, Stack size 4 bytes, rt_memclr_w.o(.text), UNUSED)

<P><STRONG><a name="[2f0]"></a>__rt_memclr_w</STRONG> (ARM, 84 bytes, Stack size 4 bytes, rt_memclr_w.o(.text), UNUSED)

<P><STRONG><a name="[1b4]"></a>_memset_w</STRONG> (ARM, 0 bytes, Stack size unknown bytes, rt_memclr_w.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_memclr
</UL>

<P><STRONG><a name="[fa]"></a>strncpy</STRONG> (ARM, 104 bytes, Stack size 8 bytes, strncpy.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = strncpy
</UL>
<BR>[Calls]<UL><LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_Main
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_menu
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;scan_files
</UL>

<P><STRONG><a name="[8]"></a>AdcTsAuto</STRONG> (ARM, 1424 bytes, Stack size 56 bytes, touchpanel.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = AdcTsAuto &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearPending
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchpanel.o(.text)
</UL>
<P><STRONG><a name="[106]"></a>Open_Touchpanel</STRONG> (ARM, 80 bytes, Stack size 8 bytes, touchpanel.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 408 + Unknown Stack Size
<LI>Call Chain = Open_Touchpanel &rArr; Uart_Printf &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart_Printf
</UL>
<BR>[Called By]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Main
</UL>

<P><STRONG><a name="[2f1]"></a>close_Touchpanel</STRONG> (ARM, 40 bytes, Stack size 0 bytes, touchpanel.o(.text), UNUSED)

<P><STRONG><a name="[1b6]"></a>__aeabi_dmul</STRONG> (ARM, 0 bytes, Stack size 32 bytes, dmul.o(x$fpl$dmul))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __aeabi_dmul
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AdcTsAuto
</UL>

<P><STRONG><a name="[1b8]"></a>_dmul</STRONG> (ARM, 364 bytes, Stack size 32 bytes, dmul.o(x$fpl$dmul), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dretinf
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
</UL>

<P><STRONG><a name="[1bf]"></a>MMU_SetMTT</STRONG> (ARM, 64 bytes, Stack size 20 bytes, mmu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = MMU_SetMTT
</UL>
<BR>[Called By]<UL><LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChangeRomCacheStatus
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MMU_Init
</UL>

<P><STRONG><a name="[109]"></a>MMU_Init</STRONG> (ARM, 420 bytes, Stack size 16 bytes, mmu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36 + Unknown Stack Size
<LI>Call Chain = MMU_Init &rArr; MMU_SetMTT
</UL>
<BR>[Calls]<UL><LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MMU_SetTTBase
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MMU_SetProcessId
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MMU_SetDomain
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MMU_InvalidateTLB
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MMU_InvalidateICache
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MMU_EnableMMU
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MMU_EnableICache
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MMU_EnableDCache
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MMU_EnableAlignFault
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MMU_DisableMMU
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MMU_DisableICache
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MMU_DisableDCache
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MMU_CleanInvalidateDCacheIndex
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MMU_SetMTT
</UL>
<BR>[Called By]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Main
</UL>

<P><STRONG><a name="[1c7]"></a>ChangeRomCacheStatus</STRONG> (ARM, 136 bytes, Stack size 16 bytes, mmu.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MMU_InvalidateTLB
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MMU_InvalidateICache
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MMU_EnableMMU
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MMU_EnableICache
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MMU_EnableDCache
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MMU_DisableMMU
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MMU_DisableICache
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MMU_DisableDCache
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MMU_CleanInvalidateDCacheIndex
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MMU_SetMTT
</UL>

<P><STRONG><a name="[1df]"></a>Lcd_Init</STRONG> (ARM, 184 bytes, Stack size 0 bytes, lcd_tft.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_TFT_Init
</UL>

<P><STRONG><a name="[1e1]"></a>Lcd_EnvidOnOff</STRONG> (ARM, 60 bytes, Stack size 0 bytes, lcd_tft.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_TFT_Init
</UL>

<P><STRONG><a name="[1e0]"></a>Lcd_PowerEnable</STRONG> (ARM, 100 bytes, Stack size 0 bytes, lcd_tft.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_TFT_Init
</UL>

<P><STRONG><a name="[1c8]"></a>Lcd_MoveViewPort</STRONG> (ARM, 104 bytes, Stack size 16 bytes, lcd_tft.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SET_IF
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLR_IF
</UL>
<BR>[Called By]<UL><LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MoveViewPort
</UL>

<P><STRONG><a name="[1cb]"></a>MoveViewPort</STRONG> (ARM, 256 bytes, Stack size 16 bytes, lcd_tft.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_MoveViewPort
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart_Printf
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart_GetKey
</UL>

<P><STRONG><a name="[1d7]"></a>triangle_up</STRONG> (ARM, 88 bytes, Stack size 20 bytes, lcd_tft.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = triangle_up
</UL>
<BR>[Called By]<UL><LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Glib_Buttom
</UL>

<P><STRONG><a name="[2f2]"></a>triangle_up2</STRONG> (ARM, 280 bytes, Stack size 20 bytes, lcd_tft.o(.text), UNUSED)

<P><STRONG><a name="[1d9]"></a>triangle_down</STRONG> (ARM, 88 bytes, Stack size 20 bytes, lcd_tft.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = triangle_down
</UL>
<BR>[Called By]<UL><LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Glib_Buttom
</UL>

<P><STRONG><a name="[2f3]"></a>triangle_down2</STRONG> (ARM, 88 bytes, Stack size 20 bytes, lcd_tft.o(.text), UNUSED)

<P><STRONG><a name="[1d8]"></a>triangle_left</STRONG> (ARM, 88 bytes, Stack size 20 bytes, lcd_tft.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = triangle_left
</UL>
<BR>[Called By]<UL><LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Glib_Buttom
</UL>

<P><STRONG><a name="[1d5]"></a>triangle_right</STRONG> (ARM, 88 bytes, Stack size 20 bytes, lcd_tft.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = triangle_right
</UL>
<BR>[Called By]<UL><LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Glib_Buttom
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Glib_start
</UL>

<P><STRONG><a name="[1d2]"></a>Glib_circle</STRONG> (ARM, 124 bytes, Stack size 28 bytes, lcd_tft.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = Glib_circle
</UL>
<BR>[Called By]<UL><LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Glib_start
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Glib_quit
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Glib_pulse
</UL>

<P><STRONG><a name="[1ce]"></a>PutPixel</STRONG> (ARM, 44 bytes, Stack size 8 bytes, lcd_tft.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = PutPixel
</UL>
<BR>[Called By]<UL><LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfoNES_LoadLine
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_PutHZ
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_PutASCII
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Glib_Line
</UL>

<P><STRONG><a name="[111]"></a>Lcd_ClearScr</STRONG> (ARM, 72 bytes, Stack size 8 bytes, lcd_tft.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Lcd_ClearScr
</UL>
<BR>[Called By]<UL><LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_Main
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;process_key
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_TFT_Init
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Main
</UL>

<P><STRONG><a name="[1e4]"></a>Lcd_Clear</STRONG> (ARM, 80 bytes, Stack size 24 bytes, lcd_tft.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Lcd_Clear
</UL>
<BR>[Called By]<UL><LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_menu
</UL>

<P><STRONG><a name="[1cd]"></a>Glib_Line</STRONG> (ARM, 644 bytes, Stack size 36 bytes, lcd_tft.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PutPixel
</UL>
<BR>[Called By]<UL><LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Glib_gezi
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Glib_FilledRectangle
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Glib_Rectangle
</UL>

<P><STRONG><a name="[1cf]"></a>Glib_Rectangle</STRONG> (ARM, 124 bytes, Stack size 28 bytes, lcd_tft.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Glib_Line
</UL>

<P><STRONG><a name="[1d0]"></a>Glib_FilledRectangle</STRONG> (ARM, 72 bytes, Stack size 32 bytes, lcd_tft.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Glib_Line
</UL>
<BR>[Called By]<UL><LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Glib_quit
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Glib_pulse
</UL>

<P><STRONG><a name="[1da]"></a>Paint_Bmp</STRONG> (ARM, 140 bytes, Stack size 32 bytes, lcd_tft.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Paint_Bmp
</UL>
<BR>[Called By]<UL><LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Glib_Buttom
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_menu
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Glib_logo
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Glib_Buttom2
</UL>

<P><STRONG><a name="[1d1]"></a>Glib_pulse</STRONG> (ARM, 92 bytes, Stack size 8 bytes, lcd_tft.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Glib_FilledRectangle
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Glib_circle
</UL>

<P><STRONG><a name="[1d3]"></a>Glib_quit</STRONG> (ARM, 64 bytes, Stack size 8 bytes, lcd_tft.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Glib_FilledRectangle
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Glib_circle
</UL>

<P><STRONG><a name="[1d4]"></a>Glib_start</STRONG> (ARM, 56 bytes, Stack size 8 bytes, lcd_tft.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = Glib_start &rArr; Glib_circle
</UL>
<BR>[Calls]<UL><LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Glib_circle
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;triangle_right
</UL>
<BR>[Called By]<UL><LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Glib_Buttom
</UL>

<P><STRONG><a name="[1d6]"></a>Glib_Buttom</STRONG> (ARM, 204 bytes, Stack size 8 bytes, lcd_tft.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = Glib_Buttom &rArr; Glib_start &rArr; Glib_circle
</UL>
<BR>[Calls]<UL><LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Glib_start
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Paint_Bmp
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;triangle_right
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;triangle_left
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;triangle_down
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;triangle_up
</UL>
<BR>[Called By]<UL><LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_Main
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;process_key
</UL>

<P><STRONG><a name="[112]"></a>Glib_Buttom2</STRONG> (ARM, 36 bytes, Stack size 8 bytes, lcd_tft.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = Glib_Buttom2 &rArr; Paint_Bmp
</UL>
<BR>[Calls]<UL><LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Paint_Bmp
</UL>
<BR>[Called By]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Main
</UL>

<P><STRONG><a name="[110]"></a>Glib_logo</STRONG> (ARM, 36 bytes, Stack size 8 bytes, lcd_tft.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = Glib_logo &rArr; Paint_Bmp
</UL>
<BR>[Calls]<UL><LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Paint_Bmp
</UL>
<BR>[Called By]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Main
</UL>

<P><STRONG><a name="[1db]"></a>Glib_gezi</STRONG> (ARM, 196 bytes, Stack size 12 bytes, lcd_tft.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Glib_Line
</UL>

<P><STRONG><a name="[1e5]"></a>set_cursor</STRONG> (ARM, 20 bytes, Stack size 0 bytes, lcd_tft.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_menu
</UL>

<P><STRONG><a name="[1dc]"></a>Lcd_PutASCII</STRONG> (ARM, 124 bytes, Stack size 40 bytes, lcd_tft.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = Lcd_PutASCII &rArr; PutPixel
</UL>
<BR>[Calls]<UL><LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PutPixel
</UL>
<BR>[Called By]<UL><LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_printf
</UL>

<P><STRONG><a name="[1dd]"></a>Lcd_PutHZ</STRONG> (ARM, 232 bytes, Stack size 40 bytes, lcd_tft.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = Lcd_PutHZ &rArr; PutPixel
</UL>
<BR>[Calls]<UL><LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PutPixel
</UL>
<BR>[Called By]<UL><LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_printf
</UL>

<P><STRONG><a name="[1de]"></a>Lcd_printf</STRONG> (ARM, 232 bytes, Stack size 60 bytes, lcd_tft.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = Lcd_printf &rArr; Lcd_PutHZ &rArr; PutPixel
</UL>
<BR>[Calls]<UL><LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_PutHZ
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_PutASCII
</UL>
<BR>[Called By]<UL><LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_menu
</UL>

<P><STRONG><a name="[10d]"></a>Lcd_TFT_Init</STRONG> (ARM, 40 bytes, Stack size 4 bytes, lcd_tft.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = Lcd_TFT_Init &rArr; Lcd_ClearScr
</UL>
<BR>[Calls]<UL><LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_PowerEnable
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_EnvidOnOff
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_Init
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_ClearScr
</UL>
<BR>[Called By]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Main
</UL>

<P><STRONG><a name="[115]"></a>display_menu</STRONG> (ARM, 2460 bytes, Stack size 592 bytes, menu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 700 + Unknown Stack Size
<LI>Call Chain = display_menu &rArr; Lcd_printf &rArr; Lcd_PutHZ &rArr; PutPixel
</UL>
<BR>[Calls]<UL><LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_printf
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_cursor
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Paint_Bmp
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_Clear
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncpy
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Main
</UL>

<P><STRONG><a name="[114]"></a>process_key</STRONG> (ARM, 360 bytes, Stack size 24 bytes, menu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1392 + Unknown Stack Size
<LI>Call Chain = process_key &rArr; App_Main &rArr; InfoNES_Load &rArr; LoadRomImage &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; disk_write &rArr; Write_Mult_Block &rArr; CMD25 &rArr; Chk_CMD_End &rArr; Uart_Printf &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_Main
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Glib_Buttom
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_ClearScr
</UL>
<BR>[Called By]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Main
</UL>

<P><STRONG><a name="[113]"></a>ReadMenuKey</STRONG> (ARM, 188 bytes, Stack size 0 bytes, menu.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Main
</UL>

<P><STRONG><a name="[1e2]"></a>__aeabi_memcpy4</STRONG> (ARM, 0 bytes, Stack size 8 bytes, rt_memcpy_w.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_menu
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
</UL>

<P><STRONG><a name="[2f4]"></a>__aeabi_memcpy8</STRONG> (ARM, 0 bytes, Stack size 8 bytes, rt_memcpy_w.o(.text), UNUSED)

<P><STRONG><a name="[2f5]"></a>__rt_memcpy_w</STRONG> (ARM, 100 bytes, Stack size 8 bytes, rt_memcpy_w.o(.text), UNUSED)

<P><STRONG><a name="[2f6]"></a>_memcpy_lastbytes_aligned</STRONG> (ARM, 0 bytes, Stack size unknown bytes, rt_memcpy_w.o(.text), UNUSED)

<P><STRONG><a name="[1e7]"></a>Print</STRONG> (ARM, 96 bytes, Stack size 16 bytes, infones_system.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart_Printf
</UL>

<P><STRONG><a name="[2f7]"></a>SysTickIntHandler</STRONG> (ARM, 80 bytes, Stack size 0 bytes, infones_system.o(.text), UNUSED)

<P><STRONG><a name="[205]"></a>InfoNES_Menu</STRONG> (ARM, 8 bytes, Stack size 0 bytes, infones_system.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfoNES_Main
</UL>

<P><STRONG><a name="[1e8]"></a>InfoNES_ReadRom</STRONG> (ARM, 236 bytes, Stack size 16 bytes, infones_system.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 416 + Unknown Stack Size
<LI>Call Chain = InfoNES_ReadRom &rArr; Uart_Printf &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart_Printf
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadRomImage
</UL>

<P><STRONG><a name="[1eb]"></a>LoadRomImage</STRONG> (ARM, 452 bytes, Stack size 568 bytes, infones_system.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1328 + Unknown Stack Size
<LI>Call Chain = LoadRomImage &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; disk_write &rArr; Write_Mult_Block &rArr; CMD25 &rArr; Chk_CMD_End &rArr; Uart_Printf &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_close
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfoNES_ReadRom
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart_Printf
</UL>
<BR>[Called By]<UL><LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfoNES_Load
</UL>

<P><STRONG><a name="[1e6]"></a>App_Main</STRONG> (ARM, 132 bytes, Stack size 32 bytes, infones_system.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1368 + Unknown Stack Size
<LI>Call Chain = App_Main &rArr; InfoNES_Load &rArr; LoadRomImage &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; disk_write &rArr; Write_Mult_Block &rArr; CMD25 &rArr; Chk_CMD_End &rArr; Uart_Printf &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfoNES_Main
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfoNES_Load
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Glib_Buttom
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_ClearScr
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncpy
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;process_key
</UL>

<P><STRONG><a name="[1f9]"></a>InfoNES_ReleaseRom</STRONG> (ARM, 4 bytes, Stack size 0 bytes, infones_system.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfoNES_Load
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfoNES_Fin
</UL>

<P><STRONG><a name="[1ef]"></a>InfoNES_LoadFrame</STRONG> (ARM, 4 bytes, Stack size 0 bytes, infones_system.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfoNES_LoadLine
</UL>

<P><STRONG><a name="[1ee]"></a>InfoNES_LoadLine</STRONG> (ARM, 100 bytes, Stack size 8 bytes, infones_system.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = InfoNES_LoadLine &rArr; PutPixel
</UL>
<BR>[Calls]<UL><LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfoNES_LoadFrame
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PutPixel
</UL>
<BR>[Called By]<UL><LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfoNES_HSync
</UL>

<P><STRONG><a name="[1f0]"></a>InfoNES_PadState</STRONG> (ARM, 156 bytes, Stack size 16 bytes, infones_system.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = InfoNES_PadState &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfoNES_HSync
</UL>

<P><STRONG><a name="[1f1]"></a>InfoNES_MemoryCopy</STRONG> (ARM, 36 bytes, Stack size 16 bytes, infones_system.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = InfoNES_MemoryCopy &rArr; memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfoNES_DrawLine
<LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;K6502_Write(unsigned short, unsigned char)
</UL>

<P><STRONG><a name="[1f3]"></a>InfoNES_MemorySet</STRONG> (ARM, 36 bytes, Stack size 16 bytes, infones_system.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24 + Unknown Stack Size
<LI>Call Chain = InfoNES_MemorySet &rArr; memset
</UL>
<BR>[Calls]<UL><LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memset
</UL>
<BR>[Called By]<UL><LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfoNES_DrawLine
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfoNES_Reset
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfoNES_SetupPPU
</UL>

<P><STRONG><a name="[2f8]"></a>InfoNES_DebugPrint</STRONG> (ARM, 4 bytes, Stack size 0 bytes, infones_system.o(.text), UNUSED)

<P><STRONG><a name="[204]"></a>InfoNES_Wait</STRONG> (ARM, 4 bytes, Stack size 0 bytes, infones_system.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfoNES_Cycle
</UL>

<P><STRONG><a name="[2f9]"></a>InfoNES_SoundInit</STRONG> (ARM, 4 bytes, Stack size 0 bytes, infones_system.o(.text), UNUSED)

<P><STRONG><a name="[2fa]"></a>InfoNES_SoundOpen</STRONG> (ARM, 12 bytes, Stack size 0 bytes, infones_system.o(.text), UNUSED)

<P><STRONG><a name="[2fb]"></a>InfoNES_SoundClose</STRONG> (ARM, 4 bytes, Stack size 0 bytes, infones_system.o(.text), UNUSED)

<P><STRONG><a name="[2fc]"></a>InfoNES_SoundOutput</STRONG> (ARM, 16 bytes, Stack size 8 bytes, infones_system.o(.text), UNUSED)

<P><STRONG><a name="[1fd]"></a>InfoNES_MessageBox</STRONG> (ARM, 4 bytes, Stack size 0 bytes, infones_system.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfoNES_Reset
</UL>

<P><STRONG><a name="[1e9]"></a>__aeabi_memcpy</STRONG> (ARM, 0 bytes, Stack size 0 bytes, rt_memcpy.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfoNES_ReadRom
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcpy
</UL>

<P><STRONG><a name="[1f5]"></a>__rt_memcpy</STRONG> (ARM, 212 bytes, Stack size 0 bytes, rt_memcpy.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>

<P><STRONG><a name="[2fd]"></a>_memcpy_lastbytes</STRONG> (ARM, 0 bytes, Stack size unknown bytes, rt_memcpy.o(.text), UNUSED)

<P><STRONG><a name="[1ea]"></a>memcmp</STRONG> (ARM, 176 bytes, Stack size 0 bytes, memcmp.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfoNES_ReadRom
</UL>

<P><STRONG><a name="[1f6]"></a>InfoNES_Init</STRONG> (ARM, 144 bytes, Stack size 8 bytes, infones.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = InfoNES_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;K6502_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfoNES_Main
</UL>

<P><STRONG><a name="[1f8]"></a>InfoNES_Fin</STRONG> (ARM, 12 bytes, Stack size 8 bytes, infones.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = InfoNES_Fin
</UL>
<BR>[Calls]<UL><LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfoNES_ReleaseRom
</UL>
<BR>[Called By]<UL><LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfoNES_Main
</UL>

<P><STRONG><a name="[1fb]"></a>InfoNES_Mirroring</STRONG> (ARM, 112 bytes, Stack size 0 bytes, infones.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map236_Write
<LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map234_Set_Banks
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map233_Write
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map231_Write
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map230_Write
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map229_Write
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map228_Write
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map227_Write
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map226_Write
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map225_Write
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map222_Init
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map202_WriteSub
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map200_Write
<LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map191_Apu
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map187_Write
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map183_Write
<LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map182_Write
<LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map135_Apu
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map134_Apu
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map119_Write
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map118_Write
<LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map116_Write
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map115_Write
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map114_Write
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map112_Write
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map109_Apu
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map105_Write
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map100_Write
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map97_Write
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map96_Init
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map95_Write
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map91_Init
<LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map90_Sync_Mirror
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map89_Write
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map88_Write
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map83_Write
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map82_Init
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map82_Sram
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map80_Sram
<LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map78_Write
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map75_Write
<LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map74_Write
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map71_Write
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map70_Write
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map69_Write
<LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map68_SyncMirror
<LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map67_Write
<LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map65_Write
<LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map64_Write
<LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map61_Write
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map60_Write
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map58_Write
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map57_Write
<LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map51_Set_CPU_Banks
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map49_Write
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map48_Write
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map46_Init
<LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map45_Write
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map44_Write
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map42_Write
<LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map41_Sram
<LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map33_Write
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map32_Write
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map26_Write
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map25_Write
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map24_Write
<LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map23_Write
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map22_Write
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map21_Write
<LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map18_Write
<LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map17_Apu
<LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map16_Write
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map15_Write
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map11_Init
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map10_Write
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map9_Write
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map7_Write
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map4_Write
<LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map1_Write
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfoNES_SetupPPU
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map255_Init
<LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map255_Write
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map251_Init
<LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map249_Write
<LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map248_Write
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map245_Write
</UL>

<P><STRONG><a name="[1fa]"></a>InfoNES_SetupPPU</STRONG> (ARM, 388 bytes, Stack size 8 bytes, infones.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32 + Unknown Stack Size
<LI>Call Chain = InfoNES_SetupPPU &rArr; InfoNES_MemorySet &rArr; memset
</UL>
<BR>[Calls]<UL><LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfoNES_MemorySet
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfoNES_Mirroring
</UL>
<BR>[Called By]<UL><LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfoNES_Reset
</UL>

<P><STRONG><a name="[1fc]"></a>InfoNES_Reset</STRONG> (ARM, 412 bytes, Stack size 8 bytes, infones.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48 + Unknown Stack Size
<LI>Call Chain = InfoNES_Reset &rArr; K6502_Reset &rArr; K6502_ReadW(unsigned short) &rArr; K6502_Read(unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfoNES_MessageBox
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfoNES_MemorySet
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;K6502_Reset
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfoNES_SetupPPU
</UL>
<BR>[Called By]<UL><LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfoNES_Load
</UL>

<P><STRONG><a name="[1ec]"></a>InfoNES_Load</STRONG> (ARM, 64 bytes, Stack size 8 bytes, infones.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 1336 + Unknown Stack Size
<LI>Call Chain = InfoNES_Load &rArr; LoadRomImage &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; disk_write &rArr; Write_Mult_Block &rArr; CMD25 &rArr; Chk_CMD_End &rArr; Uart_Printf &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfoNES_ReleaseRom
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadRomImage
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfoNES_Reset
</UL>
<BR>[Called By]<UL><LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_Main
</UL>

<P><STRONG><a name="[201]"></a>InfoNES_GetSprHitY</STRONG> (ARM, 564 bytes, Stack size 8 bytes, infones.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = InfoNES_GetSprHitY
</UL>
<BR>[Called By]<UL><LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfoNES_HSync
</UL>

<P><STRONG><a name="[1ff]"></a>InfoNES_DrawLine</STRONG> (ARM, 2096 bytes, Stack size 608 bytes, infones.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 632 + Unknown Stack Size
<LI>Call Chain = InfoNES_DrawLine &rArr; InfoNES_MemorySet &rArr; memset
</UL>
<BR>[Calls]<UL><LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfoNES_MemorySet
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfoNES_MemoryCopy
</UL>
<BR>[Called By]<UL><LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfoNES_HSync
</UL>

<P><STRONG><a name="[200]"></a>InfoNES_HSync</STRONG> (ARM, 816 bytes, Stack size 8 bytes, infones.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 640 + Unknown Stack Size
<LI>Call Chain = InfoNES_HSync &rArr; InfoNES_DrawLine &rArr; InfoNES_MemorySet &rArr; memset
</UL>
<BR>[Calls]<UL><LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfoNES_PadState
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfoNES_LoadLine
<LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfoNES_DrawLine
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfoNES_GetSprHitY
</UL>
<BR>[Called By]<UL><LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfoNES_Cycle
</UL>

<P><STRONG><a name="[202]"></a>InfoNES_Cycle</STRONG> (ARM, 336 bytes, Stack size 8 bytes, infones.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 648 + Unknown Stack Size
<LI>Call Chain = InfoNES_Cycle &rArr; InfoNES_HSync &rArr; InfoNES_DrawLine &rArr; InfoNES_MemorySet &rArr; memset
</UL>
<BR>[Calls]<UL><LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfoNES_Wait
<LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;K6502_Step
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfoNES_HSync
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfoNES_Main
</UL>

<P><STRONG><a name="[1ed]"></a>InfoNES_Main</STRONG> (ARM, 68 bytes, Stack size 8 bytes, infones.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 656 + Unknown Stack Size
<LI>Call Chain = InfoNES_Main &rArr; InfoNES_Cycle &rArr; InfoNES_HSync &rArr; InfoNES_DrawLine &rArr; InfoNES_MemorySet &rArr; memset
</UL>
<BR>[Calls]<UL><LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfoNES_Menu
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart_Printf
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfoNES_Cycle
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfoNES_Fin
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfoNES_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;App_Main
</UL>

<P><STRONG><a name="[1f7]"></a>K6502_Init</STRONG> (ARM, 868 bytes, Stack size 0 bytes, k6502.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfoNES_Init
</UL>

<P><STRONG><a name="[1fe]"></a>K6502_Reset</STRONG> (ARM, 120 bytes, Stack size 8 bytes, k6502.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = K6502_Reset &rArr; K6502_ReadW(unsigned short) &rArr; K6502_Read(unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;K6502_ReadW(unsigned short)
</UL>
<BR>[Called By]<UL><LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfoNES_Reset
</UL>

<P><STRONG><a name="[20e]"></a>K6502_Set_Int_Wiring</STRONG> (ARM, 20 bytes, Stack size 0 bytes, k6502.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map243_Init
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map242_Init
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map241_Init
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map240_Init
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map236_Init
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map234_Init
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map233_Init
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map232_Init
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map231_Init
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map230_Init
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map229_Init
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map228_Init
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map227_Init
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map226_Init
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map225_Init
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map222_Init
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map202_Init
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map201_Init
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map200_Init
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map194_Init
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map193_Init
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map191_Init
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map189_Init
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map187_Init
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map185_Init
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map183_Init
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map182_Init
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map181_Init
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map180_Init
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map160_Init
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map151_Init
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map140_Init
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map135_Init
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map134_Init
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map133_Init
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map122_Init
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map119_Init
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map118_Init
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map117_Init
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map116_Init
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map115_Init
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map114_Init
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map113_Init
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map112_Init
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map110_Init
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map109_Init
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map108_Init
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map107_Init
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map105_Init
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map101_Init
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map100_Init
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map99_Init
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map97_Init
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map96_Init
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map95_Init
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map94_Init
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map93_Init
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map92_Init
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map91_Init
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map90_Init
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map89_Init
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map88_Init
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map87_Init
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map86_Init
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map83_Init
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map82_Init
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map80_Init
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map79_Init
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map78_Init
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map77_Init
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map76_Init
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map75_Init
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map74_Init
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map73_Init
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map72_Init
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map71_Init
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map70_Init
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map69_Init
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map68_Init
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map67_Init
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map66_Init
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map65_Init
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map64_Init
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map62_Init
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map61_Init
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map60_Init
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map58_Init
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map57_Init
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map51_Init
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map50_Init
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map49_Init
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map48_Init
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map47_Init
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map46_Init
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map45_Init
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map44_Init
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map43_Init
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map42_Init
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map41_Init
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map40_Init
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map34_Init
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map33_Init
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map32_Init
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map26_Init
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map25_Init
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map24_Init
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map23_Init
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map22_Init
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map21_Init
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map18_Init
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map17_Init
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map16_Init
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map15_Init
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map13_Init
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map11_Init
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map10_Init
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map9_Init
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map8_Init
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map7_Init
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map4_Init
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map3_Init
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map2_Init
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map1_Init
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map0_Init
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map255_Init
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map252_Init
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map251_Init
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map249_Init
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map248_Init
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map246_Init
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map245_Init
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map244_Init
</UL>

<P><STRONG><a name="[203]"></a>K6502_Step</STRONG> (ARM, 28484 bytes, Stack size 48 bytes, k6502.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = K6502_Step &rArr; K6502_Write(unsigned short, unsigned char) &rArr; InfoNES_MemoryCopy &rArr; memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;K6502_ReadZpW(unsigned char)
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;K6502_ReadZp(unsigned char)
<LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;K6502_ReadW(unsigned short)
<LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;K6502_ReadIY()
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;K6502_ReadAbsY()
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;K6502_ReadAbsX()
<LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;K6502_Write(unsigned short, unsigned char)
<LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;K6502_Read(unsigned short)
</UL>
<BR>[Called By]<UL><LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfoNES_Cycle
</UL>

<P><STRONG><a name="[1f2]"></a>memcpy</STRONG> (ARM, 12 bytes, Stack size 8 bytes, memcpy.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfoNES_MemoryCopy
</UL>

<P><STRONG><a name="[1f4]"></a>memset</STRONG> (ARM, 28 bytes, Stack size 8 bytes, memset.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = memset
</UL>
<BR>[Calls]<UL><LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfoNES_MemorySet
</UL>

<P><STRONG><a name="[11]"></a>Map0_RenderScreen</STRONG> (ARM, 4 bytes, Stack size 0 bytes, infones_mapper.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> infones_mapper.o(.text)
</UL>
<P><STRONG><a name="[10]"></a>Map0_PPU</STRONG> (ARM, 4 bytes, Stack size 0 bytes, infones_mapper.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> infones_mapper.o(.text)
</UL>
<P><STRONG><a name="[f]"></a>Map0_HSync</STRONG> (ARM, 4 bytes, Stack size 0 bytes, infones_mapper.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> infones_mapper.o(.text)
</UL>
<P><STRONG><a name="[e]"></a>Map0_VSync</STRONG> (ARM, 4 bytes, Stack size 0 bytes, infones_mapper.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> infones_mapper.o(.text)
</UL>
<P><STRONG><a name="[d]"></a>Map0_ReadApu</STRONG> (ARM, 12 bytes, Stack size 0 bytes, infones_mapper.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> infones_mapper.o(.text)
</UL>
<P><STRONG><a name="[c]"></a>Map0_Apu</STRONG> (ARM, 4 bytes, Stack size 0 bytes, infones_mapper.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> infones_mapper.o(.text)
</UL>
<P><STRONG><a name="[b]"></a>Map0_Sram</STRONG> (ARM, 4 bytes, Stack size 0 bytes, infones_mapper.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> infones_mapper.o(.text)
</UL>
<P><STRONG><a name="[14]"></a>Map0_Write</STRONG> (ARM, 4 bytes, Stack size 0 bytes, infones_mapper.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> infones_mapper.o(.text)
</UL>
<P><STRONG><a name="[32]"></a>Map0_Init</STRONG> (ARM, 448 bytes, Stack size 8 bytes, infones_mapper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Map0_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;K6502_Set_Int_Wiring
</UL>
<BR>[Address Reference Count : 2]<UL><LI> infones_mapper.o(.text)
<LI> infones_mapper.o(.data)
</UL>
<P><STRONG><a name="[20f]"></a>Map1_set_ROM_banks</STRONG> (ARM, 248 bytes, Stack size 8 bytes, infones_mapper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = Map1_set_ROM_banks
</UL>
<BR>[Calls]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map1_Init
<LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map1_Write
</UL>

<P><STRONG><a name="[a]"></a>Map1_Write</STRONG> (ARM, 1876 bytes, Stack size 24 bytes, infones_mapper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32 + Unknown Stack Size
<LI>Call Chain = Map1_Write &rArr; Map1_set_ROM_banks
</UL>
<BR>[Calls]<UL><LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map1_set_ROM_banks
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfoNES_Mirroring
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Address Reference Count : 1]<UL><LI> infones_mapper.o(.text)
</UL>
<P><STRONG><a name="[3f]"></a>Map1_Init</STRONG> (ARM, 432 bytes, Stack size 8 bytes, infones_mapper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + Unknown Stack Size
<LI>Call Chain = Map1_Init &rArr; Map1_set_ROM_banks
</UL>
<BR>[Calls]<UL><LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map1_set_ROM_banks
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;K6502_Set_Int_Wiring
</UL>
<BR>[Address Reference Count : 2]<UL><LI> infones_mapper.o(.text)
<LI> infones_mapper.o(.data)
</UL>
<P><STRONG><a name="[210]"></a>Map2_Write</STRONG> (ARM, 88 bytes, Stack size 16 bytes, infones_mapper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Map2_Write &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Address Reference Count : 1]<UL><LI> infones_mapper.o(.text)
</UL>
<P><STRONG><a name="[40]"></a>Map2_Init</STRONG> (ARM, 248 bytes, Stack size 8 bytes, infones_mapper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Map2_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;K6502_Set_Int_Wiring
</UL>
<BR>[Address Reference Count : 2]<UL><LI> infones_mapper.o(.text)
<LI> infones_mapper.o(.data)
</UL>
<P><STRONG><a name="[211]"></a>Map3_Write</STRONG> (ARM, 392 bytes, Stack size 16 bytes, infones_mapper.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>

<P><STRONG><a name="[41]"></a>Map3_Init</STRONG> (ARM, 368 bytes, Stack size 8 bytes, infones_mapper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Map3_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;K6502_Set_Int_Wiring
</UL>
<BR>[Address Reference Count : 2]<UL><LI> infones_mapper.o(.text)
<LI> infones_mapper.o(.data)
</UL>
<P><STRONG><a name="[212]"></a>Map4_Set_PPU_Banks</STRONG> (ARM, 924 bytes, Stack size 8 bytes, infones_mapper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = Map4_Set_PPU_Banks
</UL>
<BR>[Calls]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map4_Init
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map4_Write
</UL>

<P><STRONG><a name="[213]"></a>Map4_Set_CPU_Banks</STRONG> (ARM, 348 bytes, Stack size 8 bytes, infones_mapper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = Map4_Set_CPU_Banks
</UL>
<BR>[Calls]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map4_Init
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map4_Write
</UL>

<P><STRONG><a name="[12]"></a>Map4_HSync</STRONG> (ARM, 264 bytes, Stack size 0 bytes, infones_mapper.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> infones_mapper.o(.text)
</UL>
<P><STRONG><a name="[214]"></a>Map4_Write</STRONG> (ARM, 764 bytes, Stack size 16 bytes, infones_mapper.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map4_Set_CPU_Banks
<LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map4_Set_PPU_Banks
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfoNES_Mirroring
</UL>

<P><STRONG><a name="[42]"></a>Map4_Init</STRONG> (ARM, 400 bytes, Stack size 8 bytes, infones_mapper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + Unknown Stack Size
<LI>Call Chain = Map4_Init &rArr; Map4_Set_CPU_Banks
</UL>
<BR>[Calls]<UL><LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map4_Set_CPU_Banks
<LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map4_Set_PPU_Banks
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;K6502_Set_Int_Wiring
</UL>
<BR>[Address Reference Count : 2]<UL><LI> infones_mapper.o(.text)
<LI> infones_mapper.o(.data)
</UL>
<P><STRONG><a name="[215]"></a>Map7_Write</STRONG> (ARM, 168 bytes, Stack size 16 bytes, infones_mapper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Map7_Write &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfoNES_Mirroring
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Address Reference Count : 1]<UL><LI> infones_mapper.o(.text)
</UL>
<P><STRONG><a name="[43]"></a>Map7_Init</STRONG> (ARM, 216 bytes, Stack size 8 bytes, infones_mapper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Map7_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;K6502_Set_Int_Wiring
</UL>
<BR>[Address Reference Count : 2]<UL><LI> infones_mapper.o(.text)
<LI> infones_mapper.o(.data)
</UL>
<P><STRONG><a name="[216]"></a>Map8_Write</STRONG> (ARM, 316 bytes, Stack size 24 bytes, infones_mapper.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>

<P><STRONG><a name="[44]"></a>Map8_Init</STRONG> (ARM, 368 bytes, Stack size 8 bytes, infones_mapper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Map8_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;K6502_Set_Int_Wiring
</UL>
<BR>[Address Reference Count : 2]<UL><LI> infones_mapper.o(.text)
<LI> infones_mapper.o(.data)
</UL>
<P><STRONG><a name="[13]"></a>Map9_PPU</STRONG> (ARM, 632 bytes, Stack size 0 bytes, infones_mapper.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> infones_mapper.o(.text)
</UL>
<P><STRONG><a name="[217]"></a>Map9_Write</STRONG> (ARM, 764 bytes, Stack size 16 bytes, infones_mapper.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfoNES_Mirroring
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>

<P><STRONG><a name="[45]"></a>Map9_Init</STRONG> (ARM, 368 bytes, Stack size 8 bytes, infones_mapper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Map9_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;K6502_Set_Int_Wiring
</UL>
<BR>[Address Reference Count : 2]<UL><LI> infones_mapper.o(.text)
<LI> infones_mapper.o(.data)
</UL>
<P><STRONG><a name="[2fe]"></a>Map10_PPU</STRONG> (ARM, 632 bytes, Stack size 0 bytes, infones_mapper.o(.text), UNUSED)

<P><STRONG><a name="[218]"></a>Map10_Write</STRONG> (ARM, 792 bytes, Stack size 16 bytes, infones_mapper.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfoNES_Mirroring
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>

<P><STRONG><a name="[46]"></a>Map10_Init</STRONG> (ARM, 352 bytes, Stack size 8 bytes, infones_mapper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Map10_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;K6502_Set_Int_Wiring
</UL>
<BR>[Address Reference Count : 2]<UL><LI> infones_mapper.o(.text)
<LI> infones_mapper.o(.data)
</UL>
<P><STRONG><a name="[219]"></a>Map11_Write</STRONG> (ARM, 632 bytes, Stack size 24 bytes, infones_mapper.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>

<P><STRONG><a name="[47]"></a>Map11_Init</STRONG> (ARM, 280 bytes, Stack size 8 bytes, infones_mapper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Map11_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfoNES_Mirroring
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;K6502_Set_Int_Wiring
</UL>
<BR>[Address Reference Count : 2]<UL><LI> infones_mapper.o(.text)
<LI> infones_mapper.o(.data)
</UL>
<P><STRONG><a name="[21a]"></a>Map13_Write</STRONG> (ARM, 320 bytes, Stack size 16 bytes, infones_mapper.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>

<P><STRONG><a name="[48]"></a>Map13_Init</STRONG> (ARM, 284 bytes, Stack size 8 bytes, infones_mapper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Map13_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;K6502_Set_Int_Wiring
</UL>
<BR>[Address Reference Count : 2]<UL><LI> infones_mapper.o(.text)
<LI> infones_mapper.o(.data)
</UL>
<P><STRONG><a name="[21b]"></a>Map15_Write</STRONG> (ARM, 532 bytes, Stack size 16 bytes, infones_mapper.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfoNES_Mirroring
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>

<P><STRONG><a name="[49]"></a>Map15_Init</STRONG> (ARM, 216 bytes, Stack size 8 bytes, infones_mapper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Map15_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;K6502_Set_Int_Wiring
</UL>
<BR>[Address Reference Count : 2]<UL><LI> infones_mapper.o(.text)
<LI> infones_mapper.o(.data)
</UL>
<P><STRONG><a name="[2ff]"></a>Map16_HSync</STRONG> (ARM, 88 bytes, Stack size 0 bytes, infones_mapper.o(.text), UNUSED)

<P><STRONG><a name="[21c]"></a>Map16_Write</STRONG> (ARM, 812 bytes, Stack size 16 bytes, infones_mapper.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfoNES_Mirroring
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>

<P><STRONG><a name="[4a]"></a>Map16_Init</STRONG> (ARM, 288 bytes, Stack size 8 bytes, infones_mapper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Map16_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;K6502_Set_Int_Wiring
</UL>
<BR>[Address Reference Count : 2]<UL><LI> infones_mapper.o(.text)
<LI> infones_mapper.o(.data)
</UL>
<P><STRONG><a name="[16]"></a>Map17_HSync</STRONG> (ARM, 92 bytes, Stack size 0 bytes, infones_mapper.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> infones_mapper.o(.text)
</UL>
<P><STRONG><a name="[15]"></a>Map17_Apu</STRONG> (ARM, 1048 bytes, Stack size 16 bytes, infones_mapper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Map17_Apu &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfoNES_Mirroring
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Address Reference Count : 1]<UL><LI> infones_mapper.o(.text)
</UL>
<P><STRONG><a name="[4b]"></a>Map17_Init</STRONG> (ARM, 332 bytes, Stack size 8 bytes, infones_mapper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Map17_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;K6502_Set_Int_Wiring
</UL>
<BR>[Address Reference Count : 2]<UL><LI> infones_mapper.o(.text)
<LI> infones_mapper.o(.data)
</UL>
<P><STRONG><a name="[300]"></a>Map18_HSync</STRONG> (ARM, 88 bytes, Stack size 0 bytes, infones_mapper.o(.text), UNUSED)

<P><STRONG><a name="[17]"></a>Map18_Write</STRONG> (ARM, 2388 bytes, Stack size 16 bytes, infones_mapper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Map18_Write &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfoNES_Mirroring
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Address Reference Count : 1]<UL><LI> infones_mapper.o(.text)
</UL>
<P><STRONG><a name="[4c]"></a>Map18_Init</STRONG> (ARM, 308 bytes, Stack size 8 bytes, infones_mapper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Map18_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;K6502_Set_Int_Wiring
</UL>
<BR>[Address Reference Count : 2]<UL><LI> infones_mapper.o(.text)
<LI> infones_mapper.o(.data)
</UL>
<P><STRONG><a name="[301]"></a>Map21_HSync</STRONG> (ARM, 148 bytes, Stack size 0 bytes, infones_mapper.o(.text), UNUSED)

<P><STRONG><a name="[21d]"></a>Map21_Write</STRONG> (ARM, 2344 bytes, Stack size 16 bytes, infones_mapper.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfoNES_Mirroring
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>

<P><STRONG><a name="[4d]"></a>Map21_Init</STRONG> (ARM, 312 bytes, Stack size 8 bytes, infones_mapper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Map21_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;K6502_Set_Int_Wiring
</UL>
<BR>[Address Reference Count : 2]<UL><LI> infones_mapper.o(.text)
<LI> infones_mapper.o(.data)
</UL>
<P><STRONG><a name="[21e]"></a>Map22_Write</STRONG> (ARM, 824 bytes, Stack size 16 bytes, infones_mapper.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfoNES_Mirroring
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>

<P><STRONG><a name="[4e]"></a>Map22_Init</STRONG> (ARM, 304 bytes, Stack size 8 bytes, infones_mapper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Map22_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;K6502_Set_Int_Wiring
</UL>
<BR>[Address Reference Count : 2]<UL><LI> infones_mapper.o(.text)
<LI> infones_mapper.o(.data)
</UL>
<P><STRONG><a name="[18]"></a>Map23_Write</STRONG> (ARM, 2348 bytes, Stack size 16 bytes, infones_mapper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Map23_Write &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfoNES_Mirroring
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Address Reference Count : 1]<UL><LI> infones_mapper.o(.text)
</UL>
<P><STRONG><a name="[4f]"></a>Map23_Init</STRONG> (ARM, 404 bytes, Stack size 8 bytes, infones_mapper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Map23_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;K6502_Set_Int_Wiring
</UL>
<BR>[Address Reference Count : 2]<UL><LI> infones_mapper.o(.text)
<LI> infones_mapper.o(.data)
</UL>
<P><STRONG><a name="[302]"></a>Map23_HSync</STRONG> (ARM, 148 bytes, Stack size 0 bytes, infones_mapper.o(.text), UNUSED)

<P><STRONG><a name="[303]"></a>Map24_HSync</STRONG> (ARM, 88 bytes, Stack size 0 bytes, infones_mapper.o(.text), UNUSED)

<P><STRONG><a name="[21f]"></a>Map24_Write</STRONG> (ARM, 948 bytes, Stack size 16 bytes, infones_mapper.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfoNES_Mirroring
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>

<P><STRONG><a name="[50]"></a>Map24_Init</STRONG> (ARM, 248 bytes, Stack size 8 bytes, infones_mapper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Map24_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;K6502_Set_Int_Wiring
</UL>
<BR>[Address Reference Count : 2]<UL><LI> infones_mapper.o(.text)
<LI> infones_mapper.o(.data)
</UL>
<P><STRONG><a name="[19]"></a>Map25_HSync</STRONG> (ARM, 76 bytes, Stack size 0 bytes, infones_mapper.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> infones_mapper.o(.text)
</UL>
<P><STRONG><a name="[220]"></a>Map25_Sync_Vrom</STRONG> (ARM, 96 bytes, Stack size 16 bytes, infones_mapper.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map25_Write
</UL>

<P><STRONG><a name="[221]"></a>Map25_Write</STRONG> (ARM, 776 bytes, Stack size 16 bytes, infones_mapper.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map25_Sync_Vrom
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfoNES_Mirroring
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>

<P><STRONG><a name="[51]"></a>Map25_Init</STRONG> (ARM, 280 bytes, Stack size 8 bytes, infones_mapper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Map25_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;K6502_Set_Int_Wiring
</UL>
<BR>[Address Reference Count : 2]<UL><LI> infones_mapper.o(.text)
<LI> infones_mapper.o(.data)
</UL>
<P><STRONG><a name="[1b]"></a>Map26_HSync</STRONG> (ARM, 100 bytes, Stack size 0 bytes, infones_mapper.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> infones_mapper.o(.text)
</UL>
<P><STRONG><a name="[1a]"></a>Map26_Write</STRONG> (ARM, 1120 bytes, Stack size 16 bytes, infones_mapper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Map26_Write &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfoNES_Mirroring
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Address Reference Count : 1]<UL><LI> infones_mapper.o(.text)
</UL>
<P><STRONG><a name="[52]"></a>Map26_Init</STRONG> (ARM, 324 bytes, Stack size 8 bytes, infones_mapper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Map26_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;K6502_Set_Int_Wiring
</UL>
<BR>[Address Reference Count : 2]<UL><LI> infones_mapper.o(.text)
<LI> infones_mapper.o(.data)
</UL>
<P><STRONG><a name="[222]"></a>Map32_Write</STRONG> (ARM, 292 bytes, Stack size 16 bytes, infones_mapper.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfoNES_Mirroring
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>

<P><STRONG><a name="[53]"></a>Map32_Init</STRONG> (ARM, 316 bytes, Stack size 8 bytes, infones_mapper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Map32_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;K6502_Set_Int_Wiring
</UL>
<BR>[Address Reference Count : 2]<UL><LI> infones_mapper.o(.text)
<LI> infones_mapper.o(.data)
</UL>
<P><STRONG><a name="[223]"></a>Map33_Write</STRONG> (ARM, 900 bytes, Stack size 16 bytes, infones_mapper.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfoNES_Mirroring
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>

<P><STRONG><a name="[54]"></a>Map33_Init</STRONG> (ARM, 376 bytes, Stack size 8 bytes, infones_mapper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Map33_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;K6502_Set_Int_Wiring
</UL>
<BR>[Address Reference Count : 2]<UL><LI> infones_mapper.o(.text)
<LI> infones_mapper.o(.data)
</UL>
<P><STRONG><a name="[304]"></a>Map33_HSync</STRONG> (ARM, 164 bytes, Stack size 0 bytes, infones_mapper.o(.text), UNUSED)

<P><STRONG><a name="[224]"></a>Map34_Sram</STRONG> (ARM, 448 bytes, Stack size 16 bytes, infones_mapper.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>

<P><STRONG><a name="[225]"></a>Map34_Write</STRONG> (ARM, 140 bytes, Stack size 16 bytes, infones_mapper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Map34_Write &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Address Reference Count : 1]<UL><LI> infones_mapper.o(.text)
</UL>
<P><STRONG><a name="[55]"></a>Map34_Init</STRONG> (ARM, 356 bytes, Stack size 8 bytes, infones_mapper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Map34_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;K6502_Set_Int_Wiring
</UL>
<BR>[Address Reference Count : 2]<UL><LI> infones_mapper.o(.text)
<LI> infones_mapper.o(.data)
</UL>
<P><STRONG><a name="[305]"></a>Map40_HSync</STRONG> (ARM, 56 bytes, Stack size 0 bytes, infones_mapper.o(.text), UNUSED)

<P><STRONG><a name="[226]"></a>Map40_Write</STRONG> (ARM, 168 bytes, Stack size 16 bytes, infones_mapper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Map40_Write &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Address Reference Count : 1]<UL><LI> infones_mapper.o(.text)
</UL>
<P><STRONG><a name="[56]"></a>Map40_Init</STRONG> (ARM, 300 bytes, Stack size 8 bytes, infones_mapper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Map40_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;K6502_Set_Int_Wiring
</UL>
<BR>[Address Reference Count : 2]<UL><LI> infones_mapper.o(.text)
<LI> infones_mapper.o(.data)
</UL>
<P><STRONG><a name="[227]"></a>Map41_Sram</STRONG> (ARM, 204 bytes, Stack size 16 bytes, infones_mapper.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfoNES_Mirroring
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>

<P><STRONG><a name="[228]"></a>Map41_Write</STRONG> (ARM, 272 bytes, Stack size 16 bytes, infones_mapper.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>

<P><STRONG><a name="[57]"></a>Map41_Init</STRONG> (ARM, 272 bytes, Stack size 8 bytes, infones_mapper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Map41_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;K6502_Set_Int_Wiring
</UL>
<BR>[Address Reference Count : 2]<UL><LI> infones_mapper.o(.text)
<LI> infones_mapper.o(.data)
</UL>
<P><STRONG><a name="[306]"></a>Map42_HSync</STRONG> (ARM, 92 bytes, Stack size 0 bytes, infones_mapper.o(.text), UNUSED)

<P><STRONG><a name="[229]"></a>Map42_Write</STRONG> (ARM, 196 bytes, Stack size 16 bytes, infones_mapper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Map42_Write &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfoNES_Mirroring
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Address Reference Count : 1]<UL><LI> infones_mapper.o(.text)
</UL>
<P><STRONG><a name="[58]"></a>Map42_Init</STRONG> (ARM, 344 bytes, Stack size 8 bytes, infones_mapper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Map42_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;K6502_Set_Int_Wiring
</UL>
<BR>[Address Reference Count : 2]<UL><LI> infones_mapper.o(.text)
<LI> infones_mapper.o(.data)
</UL>
<P><STRONG><a name="[307]"></a>Map43_HSync</STRONG> (ARM, 84 bytes, Stack size 0 bytes, infones_mapper.o(.text), UNUSED)

<P><STRONG><a name="[308]"></a>Map43_ReadApu</STRONG> (ARM, 48 bytes, Stack size 0 bytes, infones_mapper.o(.text), UNUSED)

<P><STRONG><a name="[309]"></a>Map43_Apu</STRONG> (ARM, 228 bytes, Stack size 0 bytes, infones_mapper.o(.text), UNUSED)

<P><STRONG><a name="[22a]"></a>Map43_Write</STRONG> (ARM, 60 bytes, Stack size 0 bytes, infones_mapper.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> infones_mapper.o(.text)
</UL>
<P><STRONG><a name="[59]"></a>Map43_Init</STRONG> (ARM, 304 bytes, Stack size 8 bytes, infones_mapper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Map43_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;K6502_Set_Int_Wiring
</UL>
<BR>[Address Reference Count : 2]<UL><LI> infones_mapper.o(.text)
<LI> infones_mapper.o(.data)
</UL>
<P><STRONG><a name="[22b]"></a>Map44_Set_PPU_Banks</STRONG> (ARM, 1120 bytes, Stack size 8 bytes, infones_mapper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = Map44_Set_PPU_Banks
</UL>
<BR>[Calls]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map44_Init
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map44_Write
</UL>

<P><STRONG><a name="[22c]"></a>Map44_Set_CPU_Banks</STRONG> (ARM, 460 bytes, Stack size 8 bytes, infones_mapper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = Map44_Set_CPU_Banks
</UL>
<BR>[Calls]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map44_Init
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map44_Write
</UL>

<P><STRONG><a name="[30a]"></a>Map44_HSync</STRONG> (ARM, 132 bytes, Stack size 0 bytes, infones_mapper.o(.text), UNUSED)

<P><STRONG><a name="[22d]"></a>Map44_Write</STRONG> (ARM, 700 bytes, Stack size 16 bytes, infones_mapper.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map44_Set_CPU_Banks
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map44_Set_PPU_Banks
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfoNES_Mirroring
</UL>

<P><STRONG><a name="[5a]"></a>Map44_Init</STRONG> (ARM, 384 bytes, Stack size 8 bytes, infones_mapper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + Unknown Stack Size
<LI>Call Chain = Map44_Init &rArr; Map44_Set_CPU_Banks
</UL>
<BR>[Calls]<UL><LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map44_Set_CPU_Banks
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map44_Set_PPU_Banks
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;K6502_Set_Int_Wiring
</UL>
<BR>[Address Reference Count : 2]<UL><LI> infones_mapper.o(.text)
<LI> infones_mapper.o(.data)
</UL>
<P><STRONG><a name="[1e]"></a>Map45_HSync</STRONG> (ARM, 132 bytes, Stack size 0 bytes, infones_mapper.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> infones_mapper.o(.text)
</UL>
<P><STRONG><a name="[22e]"></a>Map45_Set_PPU_Banks</STRONG> (ARM, 1088 bytes, Stack size 24 bytes, infones_mapper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24 + Unknown Stack Size
<LI>Call Chain = Map45_Set_PPU_Banks
</UL>
<BR>[Calls]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map45_Write
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map45_Sram
</UL>

<P><STRONG><a name="[22f]"></a>Map45_Set_CPU_Bank7</STRONG> (ARM, 96 bytes, Stack size 8 bytes, infones_mapper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Map45_Set_CPU_Bank7 &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map45_Sram
</UL>

<P><STRONG><a name="[230]"></a>Map45_Set_CPU_Bank6</STRONG> (ARM, 96 bytes, Stack size 8 bytes, infones_mapper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Map45_Set_CPU_Bank6 &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map45_Write
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map45_Sram
</UL>

<P><STRONG><a name="[231]"></a>Map45_Set_CPU_Bank5</STRONG> (ARM, 96 bytes, Stack size 8 bytes, infones_mapper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Map45_Set_CPU_Bank5 &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map45_Write
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map45_Sram
</UL>

<P><STRONG><a name="[232]"></a>Map45_Set_CPU_Bank4</STRONG> (ARM, 96 bytes, Stack size 8 bytes, infones_mapper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Map45_Set_CPU_Bank4 &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map45_Write
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map45_Sram
</UL>

<P><STRONG><a name="[1d]"></a>Map45_Sram</STRONG> (ARM, 128 bytes, Stack size 16 bytes, infones_mapper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40 + Unknown Stack Size
<LI>Call Chain = Map45_Sram &rArr; Map45_Set_PPU_Banks
</UL>
<BR>[Calls]<UL><LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map45_Set_CPU_Bank4
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map45_Set_CPU_Bank5
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map45_Set_CPU_Bank6
<LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map45_Set_CPU_Bank7
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map45_Set_PPU_Banks
</UL>
<BR>[Address Reference Count : 1]<UL><LI> infones_mapper.o(.text)
</UL>
<P><STRONG><a name="[1c]"></a>Map45_Write</STRONG> (ARM, 1332 bytes, Stack size 16 bytes, infones_mapper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40 + Unknown Stack Size
<LI>Call Chain = Map45_Write &rArr; Map45_Set_PPU_Banks
</UL>
<BR>[Calls]<UL><LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map45_Set_CPU_Bank4
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map45_Set_CPU_Bank5
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map45_Set_CPU_Bank6
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map45_Set_PPU_Banks
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfoNES_Mirroring
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Address Reference Count : 1]<UL><LI> infones_mapper.o(.text)
</UL>
<P><STRONG><a name="[5b]"></a>Map45_Init</STRONG> (ARM, 712 bytes, Stack size 8 bytes, infones_mapper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Map45_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;K6502_Set_Int_Wiring
</UL>
<BR>[Address Reference Count : 2]<UL><LI> infones_mapper.o(.text)
<LI> infones_mapper.o(.data)
</UL>
<P><STRONG><a name="[233]"></a>Map46_Set_ROM_Banks</STRONG> (ARM, 768 bytes, Stack size 8 bytes, infones_mapper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Map46_Set_ROM_Banks &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map46_Init
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map46_Write
<LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map46_Sram
</UL>

<P><STRONG><a name="[234]"></a>Map46_Sram</STRONG> (ARM, 44 bytes, Stack size 16 bytes, infones_mapper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Map46_Sram &rArr; Map46_Set_ROM_Banks &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map46_Set_ROM_Banks
</UL>
<BR>[Address Reference Count : 1]<UL><LI> infones_mapper.o(.text)
</UL>
<P><STRONG><a name="[235]"></a>Map46_Write</STRONG> (ARM, 44 bytes, Stack size 16 bytes, infones_mapper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Map46_Write &rArr; Map46_Set_ROM_Banks &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map46_Set_ROM_Banks
</UL>
<BR>[Address Reference Count : 1]<UL><LI> infones_mapper.o(.text)
</UL>
<P><STRONG><a name="[5c]"></a>Map46_Init</STRONG> (ARM, 176 bytes, Stack size 8 bytes, infones_mapper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Map46_Init &rArr; Map46_Set_ROM_Banks &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map46_Set_ROM_Banks
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfoNES_Mirroring
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;K6502_Set_Int_Wiring
</UL>
<BR>[Address Reference Count : 2]<UL><LI> infones_mapper.o(.text)
<LI> infones_mapper.o(.data)
</UL>
<P><STRONG><a name="[236]"></a>Map47_Set_PPU_Banks</STRONG> (ARM, 1128 bytes, Stack size 8 bytes, infones_mapper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = Map47_Set_PPU_Banks
</UL>
<BR>[Calls]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map47_Init
<LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map47_Write
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map47_Sram
</UL>

<P><STRONG><a name="[237]"></a>Map47_Set_CPU_Banks</STRONG> (ARM, 460 bytes, Stack size 8 bytes, infones_mapper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = Map47_Set_CPU_Banks
</UL>
<BR>[Calls]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map47_Init
<LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map47_Write
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map47_Sram
</UL>

<P><STRONG><a name="[30b]"></a>Map47_HSync</STRONG> (ARM, 120 bytes, Stack size 0 bytes, infones_mapper.o(.text), UNUSED)

<P><STRONG><a name="[238]"></a>Map47_Sram</STRONG> (ARM, 52 bytes, Stack size 16 bytes, infones_mapper.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map47_Set_CPU_Banks
<LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map47_Set_PPU_Banks
</UL>

<P><STRONG><a name="[239]"></a>Map47_Write</STRONG> (ARM, 596 bytes, Stack size 16 bytes, infones_mapper.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map47_Set_CPU_Banks
<LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map47_Set_PPU_Banks
</UL>

<P><STRONG><a name="[5d]"></a>Map47_Init</STRONG> (ARM, 384 bytes, Stack size 8 bytes, infones_mapper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + Unknown Stack Size
<LI>Call Chain = Map47_Init &rArr; Map47_Set_CPU_Banks
</UL>
<BR>[Calls]<UL><LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map47_Set_CPU_Banks
<LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map47_Set_PPU_Banks
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;K6502_Set_Int_Wiring
</UL>
<BR>[Address Reference Count : 2]<UL><LI> infones_mapper.o(.text)
<LI> infones_mapper.o(.data)
</UL>
<P><STRONG><a name="[30c]"></a>Map48_HSync</STRONG> (ARM, 128 bytes, Stack size 0 bytes, infones_mapper.o(.text), UNUSED)

<P><STRONG><a name="[23a]"></a>Map48_Write</STRONG> (ARM, 792 bytes, Stack size 16 bytes, infones_mapper.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfoNES_Mirroring
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>

<P><STRONG><a name="[5e]"></a>Map48_Init</STRONG> (ARM, 332 bytes, Stack size 8 bytes, infones_mapper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Map48_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;K6502_Set_Int_Wiring
</UL>
<BR>[Address Reference Count : 2]<UL><LI> infones_mapper.o(.text)
<LI> infones_mapper.o(.data)
</UL>
<P><STRONG><a name="[1f]"></a>Map49_HSync</STRONG> (ARM, 132 bytes, Stack size 0 bytes, infones_mapper.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> infones_mapper.o(.text)
</UL>
<P><STRONG><a name="[23b]"></a>Map49_Set_PPU_Banks</STRONG> (ARM, 1080 bytes, Stack size 8 bytes, infones_mapper.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map49_Write
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map49_Sram
</UL>

<P><STRONG><a name="[23c]"></a>Map49_Set_CPU_Banks</STRONG> (ARM, 544 bytes, Stack size 24 bytes, infones_mapper.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map49_Write
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map49_Sram
</UL>

<P><STRONG><a name="[23d]"></a>Map49_Sram</STRONG> (ARM, 48 bytes, Stack size 16 bytes, infones_mapper.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map49_Set_CPU_Banks
<LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map49_Set_PPU_Banks
</UL>

<P><STRONG><a name="[23e]"></a>Map49_Write</STRONG> (ARM, 568 bytes, Stack size 16 bytes, infones_mapper.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map49_Set_CPU_Banks
<LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map49_Set_PPU_Banks
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfoNES_Mirroring
</UL>

<P><STRONG><a name="[5f]"></a>Map49_Init</STRONG> (ARM, 396 bytes, Stack size 8 bytes, infones_mapper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Map49_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;K6502_Set_Int_Wiring
</UL>
<BR>[Address Reference Count : 2]<UL><LI> infones_mapper.o(.text)
<LI> infones_mapper.o(.data)
</UL>
<P><STRONG><a name="[30d]"></a>Map50_HSync</STRONG> (ARM, 48 bytes, Stack size 0 bytes, infones_mapper.o(.text), UNUSED)

<P><STRONG><a name="[23f]"></a>Map50_Apu</STRONG> (ARM, 124 bytes, Stack size 16 bytes, infones_mapper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Map50_Apu &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Address Reference Count : 1]<UL><LI> infones_mapper.o(.text)
</UL>
<P><STRONG><a name="[60]"></a>Map50_Init</STRONG> (ARM, 396 bytes, Stack size 8 bytes, infones_mapper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Map50_Init &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;K6502_Set_Int_Wiring
</UL>
<BR>[Address Reference Count : 2]<UL><LI> infones_mapper.o(.text)
<LI> infones_mapper.o(.data)
</UL>
<P><STRONG><a name="[240]"></a>Map51_Set_CPU_Banks</STRONG> (ARM, 1068 bytes, Stack size 8 bytes, infones_mapper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Map51_Set_CPU_Banks &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfoNES_Mirroring
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map51_Init
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map51_Write
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map51_Sram
</UL>

<P><STRONG><a name="[241]"></a>Map51_Sram</STRONG> (ARM, 52 bytes, Stack size 16 bytes, infones_mapper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Map51_Sram &rArr; Map51_Set_CPU_Banks &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map51_Set_CPU_Banks
</UL>
<BR>[Address Reference Count : 1]<UL><LI> infones_mapper.o(.text)
</UL>
<P><STRONG><a name="[242]"></a>Map51_Write</STRONG> (ARM, 80 bytes, Stack size 16 bytes, infones_mapper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Map51_Write &rArr; Map51_Set_CPU_Banks &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map51_Set_CPU_Banks
</UL>
<BR>[Address Reference Count : 1]<UL><LI> infones_mapper.o(.text)
</UL>
<P><STRONG><a name="[61]"></a>Map51_Init</STRONG> (ARM, 204 bytes, Stack size 8 bytes, infones_mapper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Map51_Init &rArr; Map51_Set_CPU_Banks &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map51_Set_CPU_Banks
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;K6502_Set_Int_Wiring
</UL>
<BR>[Address Reference Count : 2]<UL><LI> infones_mapper.o(.text)
<LI> infones_mapper.o(.data)
</UL>
<P><STRONG><a name="[20]"></a>Map57_Write</STRONG> (ARM, 1484 bytes, Stack size 16 bytes, infones_mapper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Map57_Write &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfoNES_Mirroring
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Address Reference Count : 1]<UL><LI> infones_mapper.o(.text)
</UL>
<P><STRONG><a name="[62]"></a>Map57_Init</STRONG> (ARM, 280 bytes, Stack size 8 bytes, infones_mapper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Map57_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;K6502_Set_Int_Wiring
</UL>
<BR>[Address Reference Count : 2]<UL><LI> infones_mapper.o(.text)
<LI> infones_mapper.o(.data)
</UL>
<P><STRONG><a name="[243]"></a>Map58_Write</STRONG> (ARM, 804 bytes, Stack size 16 bytes, infones_mapper.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfoNES_Mirroring
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>

<P><STRONG><a name="[63]"></a>Map58_Init</STRONG> (ARM, 268 bytes, Stack size 8 bytes, infones_mapper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Map58_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;K6502_Set_Int_Wiring
</UL>
<BR>[Address Reference Count : 2]<UL><LI> infones_mapper.o(.text)
<LI> infones_mapper.o(.data)
</UL>
<P><STRONG><a name="[244]"></a>Map60_Write</STRONG> (ARM, 824 bytes, Stack size 16 bytes, infones_mapper.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfoNES_Mirroring
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>

<P><STRONG><a name="[64]"></a>Map60_Init</STRONG> (ARM, 272 bytes, Stack size 8 bytes, infones_mapper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Map60_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;K6502_Set_Int_Wiring
</UL>
<BR>[Address Reference Count : 2]<UL><LI> infones_mapper.o(.text)
<LI> infones_mapper.o(.data)
</UL>
<P><STRONG><a name="[245]"></a>Map61_Write</STRONG> (ARM, 512 bytes, Stack size 16 bytes, infones_mapper.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfoNES_Mirroring
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>

<P><STRONG><a name="[65]"></a>Map61_Init</STRONG> (ARM, 248 bytes, Stack size 8 bytes, infones_mapper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Map61_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;K6502_Set_Int_Wiring
</UL>
<BR>[Address Reference Count : 2]<UL><LI> infones_mapper.o(.text)
<LI> infones_mapper.o(.data)
</UL>
<P><STRONG><a name="[246]"></a>Map62_Write</STRONG> (ARM, 564 bytes, Stack size 16 bytes, infones_mapper.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>

<P><STRONG><a name="[66]"></a>Map62_Init</STRONG> (ARM, 272 bytes, Stack size 8 bytes, infones_mapper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Map62_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;K6502_Set_Int_Wiring
</UL>
<BR>[Address Reference Count : 2]<UL><LI> infones_mapper.o(.text)
<LI> infones_mapper.o(.data)
</UL>
<P><STRONG><a name="[21]"></a>Map64_Write</STRONG> (ARM, 1264 bytes, Stack size 16 bytes, infones_mapper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Map64_Write &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfoNES_Mirroring
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Address Reference Count : 1]<UL><LI> infones_mapper.o(.text)
</UL>
<P><STRONG><a name="[67]"></a>Map64_Init</STRONG> (ARM, 368 bytes, Stack size 8 bytes, infones_mapper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Map64_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;K6502_Set_Int_Wiring
</UL>
<BR>[Address Reference Count : 2]<UL><LI> infones_mapper.o(.text)
<LI> infones_mapper.o(.data)
</UL>
<P><STRONG><a name="[22]"></a>Map65_HSync</STRONG> (ARM, 92 bytes, Stack size 0 bytes, infones_mapper.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> infones_mapper.o(.text)
</UL>
<P><STRONG><a name="[247]"></a>Map65_Write</STRONG> (ARM, 876 bytes, Stack size 16 bytes, infones_mapper.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfoNES_Mirroring
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>

<P><STRONG><a name="[68]"></a>Map65_Init</STRONG> (ARM, 440 bytes, Stack size 8 bytes, infones_mapper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Map65_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;K6502_Set_Int_Wiring
</UL>
<BR>[Address Reference Count : 2]<UL><LI> infones_mapper.o(.text)
<LI> infones_mapper.o(.data)
</UL>
<P><STRONG><a name="[248]"></a>Map66_Write</STRONG> (ARM, 368 bytes, Stack size 24 bytes, infones_mapper.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>

<P><STRONG><a name="[69]"></a>Map66_Init</STRONG> (ARM, 268 bytes, Stack size 8 bytes, infones_mapper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Map66_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;K6502_Set_Int_Wiring
</UL>
<BR>[Address Reference Count : 2]<UL><LI> infones_mapper.o(.text)
<LI> infones_mapper.o(.data)
</UL>
<P><STRONG><a name="[30e]"></a>Map67_HSync</STRONG> (ARM, 124 bytes, Stack size 0 bytes, infones_mapper.o(.text), UNUSED)

<P><STRONG><a name="[249]"></a>Map67_Write</STRONG> (ARM, 696 bytes, Stack size 16 bytes, infones_mapper.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfoNES_Mirroring
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>

<P><STRONG><a name="[6a]"></a>Map67_Init</STRONG> (ARM, 484 bytes, Stack size 8 bytes, infones_mapper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Map67_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;K6502_Set_Int_Wiring
</UL>
<BR>[Address Reference Count : 2]<UL><LI> infones_mapper.o(.text)
<LI> infones_mapper.o(.data)
</UL>
<P><STRONG><a name="[24a]"></a>Map68_SyncMirror</STRONG> (ARM, 628 bytes, Stack size 8 bytes, infones_mapper.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfoNES_Mirroring
</UL>
<BR>[Called By]<UL><LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map68_Write
</UL>

<P><STRONG><a name="[24b]"></a>Map68_Write</STRONG> (ARM, 572 bytes, Stack size 16 bytes, infones_mapper.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map68_SyncMirror
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>

<P><STRONG><a name="[6b]"></a>Map68_Init</STRONG> (ARM, 280 bytes, Stack size 8 bytes, infones_mapper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Map68_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;K6502_Set_Int_Wiring
</UL>
<BR>[Address Reference Count : 2]<UL><LI> infones_mapper.o(.text)
<LI> infones_mapper.o(.data)
</UL>
<P><STRONG><a name="[30f]"></a>Map69_HSync</STRONG> (ARM, 80 bytes, Stack size 0 bytes, infones_mapper.o(.text), UNUSED)

<P><STRONG><a name="[24c]"></a>Map69_Write</STRONG> (ARM, 644 bytes, Stack size 16 bytes, infones_mapper.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfoNES_Mirroring
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>

<P><STRONG><a name="[6c]"></a>Map69_Init</STRONG> (ARM, 324 bytes, Stack size 8 bytes, infones_mapper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Map69_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;K6502_Set_Int_Wiring
</UL>
<BR>[Address Reference Count : 2]<UL><LI> infones_mapper.o(.text)
<LI> infones_mapper.o(.data)
</UL>
<P><STRONG><a name="[24d]"></a>Map70_Write</STRONG> (ARM, 344 bytes, Stack size 24 bytes, infones_mapper.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfoNES_Mirroring
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>

<P><STRONG><a name="[6d]"></a>Map70_Init</STRONG> (ARM, 248 bytes, Stack size 8 bytes, infones_mapper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Map70_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;K6502_Set_Int_Wiring
</UL>
<BR>[Address Reference Count : 2]<UL><LI> infones_mapper.o(.text)
<LI> infones_mapper.o(.data)
</UL>
<P><STRONG><a name="[24e]"></a>Map71_Write</STRONG> (ARM, 220 bytes, Stack size 16 bytes, infones_mapper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Map71_Write &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfoNES_Mirroring
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Address Reference Count : 1]<UL><LI> infones_mapper.o(.text)
</UL>
<P><STRONG><a name="[6e]"></a>Map71_Init</STRONG> (ARM, 248 bytes, Stack size 8 bytes, infones_mapper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Map71_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;K6502_Set_Int_Wiring
</UL>
<BR>[Address Reference Count : 2]<UL><LI> infones_mapper.o(.text)
<LI> infones_mapper.o(.data)
</UL>
<P><STRONG><a name="[24f]"></a>Map72_Write</STRONG> (ARM, 336 bytes, Stack size 16 bytes, infones_mapper.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>

<P><STRONG><a name="[6f]"></a>Map72_Init</STRONG> (ARM, 304 bytes, Stack size 8 bytes, infones_mapper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Map72_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;K6502_Set_Int_Wiring
</UL>
<BR>[Address Reference Count : 2]<UL><LI> infones_mapper.o(.text)
<LI> infones_mapper.o(.data)
</UL>
<P><STRONG><a name="[310]"></a>Map73_HSync</STRONG> (ARM, 88 bytes, Stack size 0 bytes, infones_mapper.o(.text), UNUSED)

<P><STRONG><a name="[250]"></a>Map73_Write</STRONG> (ARM, 340 bytes, Stack size 16 bytes, infones_mapper.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>

<P><STRONG><a name="[70]"></a>Map73_Init</STRONG> (ARM, 268 bytes, Stack size 8 bytes, infones_mapper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Map73_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;K6502_Set_Int_Wiring
</UL>
<BR>[Address Reference Count : 2]<UL><LI> infones_mapper.o(.text)
<LI> infones_mapper.o(.data)
</UL>
<P><STRONG><a name="[251]"></a>Map74_Set_PPU_Banks</STRONG> (ARM, 1068 bytes, Stack size 8 bytes, infones_mapper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = Map74_Set_PPU_Banks
</UL>
<BR>[Calls]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map74_Init
<LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map74_Write
</UL>

<P><STRONG><a name="[252]"></a>Map74_Set_CPU_Banks</STRONG> (ARM, 348 bytes, Stack size 8 bytes, infones_mapper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = Map74_Set_CPU_Banks
</UL>
<BR>[Calls]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map74_Init
<LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map74_Write
</UL>

<P><STRONG><a name="[23]"></a>Map74_HSync</STRONG> (ARM, 264 bytes, Stack size 0 bytes, infones_mapper.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> infones_mapper.o(.text)
</UL>
<P><STRONG><a name="[253]"></a>Map74_Write</STRONG> (ARM, 764 bytes, Stack size 16 bytes, infones_mapper.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map74_Set_CPU_Banks
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map74_Set_PPU_Banks
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfoNES_Mirroring
</UL>

<P><STRONG><a name="[71]"></a>Map74_Init</STRONG> (ARM, 412 bytes, Stack size 8 bytes, infones_mapper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + Unknown Stack Size
<LI>Call Chain = Map74_Init &rArr; Map74_Set_CPU_Banks
</UL>
<BR>[Calls]<UL><LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map74_Set_CPU_Banks
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map74_Set_PPU_Banks
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;K6502_Set_Int_Wiring
</UL>
<BR>[Address Reference Count : 2]<UL><LI> infones_mapper.o(.text)
<LI> infones_mapper.o(.data)
</UL>
<P><STRONG><a name="[254]"></a>Map75_Write</STRONG> (ARM, 980 bytes, Stack size 16 bytes, infones_mapper.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfoNES_Mirroring
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>

<P><STRONG><a name="[72]"></a>Map75_Init</STRONG> (ARM, 324 bytes, Stack size 8 bytes, infones_mapper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Map75_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;K6502_Set_Int_Wiring
</UL>
<BR>[Address Reference Count : 2]<UL><LI> infones_mapper.o(.text)
<LI> infones_mapper.o(.data)
</UL>
<P><STRONG><a name="[255]"></a>Map76_Write</STRONG> (ARM, 644 bytes, Stack size 16 bytes, infones_mapper.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>

<P><STRONG><a name="[73]"></a>Map76_Init</STRONG> (ARM, 304 bytes, Stack size 8 bytes, infones_mapper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Map76_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;K6502_Set_Int_Wiring
</UL>
<BR>[Address Reference Count : 2]<UL><LI> infones_mapper.o(.text)
<LI> infones_mapper.o(.data)
</UL>
<P><STRONG><a name="[256]"></a>Map77_Write</STRONG> (ARM, 220 bytes, Stack size 24 bytes, infones_mapper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Map77_Write &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Address Reference Count : 1]<UL><LI> infones_mapper.o(.text)
</UL>
<P><STRONG><a name="[74]"></a>Map77_Init</STRONG> (ARM, 228 bytes, Stack size 8 bytes, infones_mapper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Map77_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;K6502_Set_Int_Wiring
</UL>
<BR>[Address Reference Count : 2]<UL><LI> infones_mapper.o(.text)
<LI> infones_mapper.o(.data)
</UL>
<P><STRONG><a name="[257]"></a>Map78_Write</STRONG> (ARM, 356 bytes, Stack size 24 bytes, infones_mapper.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfoNES_Mirroring
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>

<P><STRONG><a name="[75]"></a>Map78_Init</STRONG> (ARM, 304 bytes, Stack size 8 bytes, infones_mapper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Map78_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;K6502_Set_Int_Wiring
</UL>
<BR>[Address Reference Count : 2]<UL><LI> infones_mapper.o(.text)
<LI> infones_mapper.o(.data)
</UL>
<P><STRONG><a name="[258]"></a>Map79_Apu</STRONG> (ARM, 364 bytes, Stack size 24 bytes, infones_mapper.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>

<P><STRONG><a name="[76]"></a>Map79_Init</STRONG> (ARM, 272 bytes, Stack size 8 bytes, infones_mapper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Map79_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;K6502_Set_Int_Wiring
</UL>
<BR>[Address Reference Count : 2]<UL><LI> infones_mapper.o(.text)
<LI> infones_mapper.o(.data)
</UL>
<P><STRONG><a name="[259]"></a>Map80_Sram</STRONG> (ARM, 676 bytes, Stack size 16 bytes, infones_mapper.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfoNES_Mirroring
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>

<P><STRONG><a name="[77]"></a>Map80_Init</STRONG> (ARM, 304 bytes, Stack size 8 bytes, infones_mapper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Map80_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;K6502_Set_Int_Wiring
</UL>
<BR>[Address Reference Count : 2]<UL><LI> infones_mapper.o(.text)
<LI> infones_mapper.o(.data)
</UL>
<P><STRONG><a name="[24]"></a>Map82_Sram</STRONG> (ARM, 1064 bytes, Stack size 16 bytes, infones_mapper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Map82_Sram &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfoNES_Mirroring
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Address Reference Count : 1]<UL><LI> infones_mapper.o(.text)
</UL>
<P><STRONG><a name="[78]"></a>Map82_Init</STRONG> (ARM, 312 bytes, Stack size 8 bytes, infones_mapper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Map82_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfoNES_Mirroring
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;K6502_Set_Int_Wiring
</UL>
<BR>[Address Reference Count : 2]<UL><LI> infones_mapper.o(.text)
<LI> infones_mapper.o(.data)
</UL>
<P><STRONG><a name="[26]"></a>Map83_HSync</STRONG> (ARM, 80 bytes, Stack size 0 bytes, infones_mapper.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> infones_mapper.o(.text)
</UL>
<P><STRONG><a name="[311]"></a>Map83_ReadApu</STRONG> (ARM, 36 bytes, Stack size 0 bytes, infones_mapper.o(.text), UNUSED)

<P><STRONG><a name="[312]"></a>Map83_Apu</STRONG> (ARM, 64 bytes, Stack size 0 bytes, infones_mapper.o(.text), UNUSED)

<P><STRONG><a name="[25]"></a>Map83_Write</STRONG> (ARM, 2768 bytes, Stack size 16 bytes, infones_mapper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24 + Unknown Stack Size
<LI>Call Chain = Map83_Write &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfoNES_Mirroring
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Address Reference Count : 1]<UL><LI> infones_mapper.o(.text)
</UL>
<P><STRONG><a name="[79]"></a>Map83_Init</STRONG> (ARM, 516 bytes, Stack size 8 bytes, infones_mapper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Map83_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;K6502_Set_Int_Wiring
</UL>
<BR>[Address Reference Count : 2]<UL><LI> infones_mapper.o(.text)
<LI> infones_mapper.o(.data)
</UL>
<P><STRONG><a name="[25a]"></a>Map86_Sram</STRONG> (ARM, 380 bytes, Stack size 24 bytes, infones_mapper.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>

<P><STRONG><a name="[7a]"></a>Map86_Init</STRONG> (ARM, 272 bytes, Stack size 8 bytes, infones_mapper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Map86_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;K6502_Set_Int_Wiring
</UL>
<BR>[Address Reference Count : 2]<UL><LI> infones_mapper.o(.text)
<LI> infones_mapper.o(.data)
</UL>
<P><STRONG><a name="[25b]"></a>Map87_Sram</STRONG> (ARM, 256 bytes, Stack size 16 bytes, infones_mapper.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>

<P><STRONG><a name="[7b]"></a>Map87_Init</STRONG> (ARM, 272 bytes, Stack size 8 bytes, infones_mapper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Map87_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;K6502_Set_Int_Wiring
</UL>
<BR>[Address Reference Count : 2]<UL><LI> infones_mapper.o(.text)
<LI> infones_mapper.o(.data)
</UL>
<P><STRONG><a name="[25c]"></a>Map88_Write</STRONG> (ARM, 648 bytes, Stack size 16 bytes, infones_mapper.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfoNES_Mirroring
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>

<P><STRONG><a name="[7c]"></a>Map88_Init</STRONG> (ARM, 304 bytes, Stack size 8 bytes, infones_mapper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Map88_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;K6502_Set_Int_Wiring
</UL>
<BR>[Address Reference Count : 2]<UL><LI> infones_mapper.o(.text)
<LI> infones_mapper.o(.data)
</UL>
<P><STRONG><a name="[25d]"></a>Map89_Write</STRONG> (ARM, 520 bytes, Stack size 24 bytes, infones_mapper.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfoNES_Mirroring
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>

<P><STRONG><a name="[7d]"></a>Map89_Init</STRONG> (ARM, 304 bytes, Stack size 8 bytes, infones_mapper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Map89_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;K6502_Set_Int_Wiring
</UL>
<BR>[Address Reference Count : 2]<UL><LI> infones_mapper.o(.text)
<LI> infones_mapper.o(.data)
</UL>
<P><STRONG><a name="[29]"></a>Map90_HSync</STRONG> (ARM, 140 bytes, Stack size 0 bytes, infones_mapper.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> infones_mapper.o(.text)
</UL>
<P><STRONG><a name="[28]"></a>Map90_ReadApu</STRONG> (ARM, 48 bytes, Stack size 0 bytes, infones_mapper.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> infones_mapper.o(.text)
</UL>
<P><STRONG><a name="[27]"></a>Map90_Apu</STRONG> (ARM, 64 bytes, Stack size 0 bytes, infones_mapper.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> infones_mapper.o(.text)
</UL>
<P><STRONG><a name="[25e]"></a>Map90_Sync_Mirror</STRONG> (ARM, 400 bytes, Stack size 24 bytes, infones_mapper.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfoNES_Mirroring
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map90_Write
</UL>

<P><STRONG><a name="[25f]"></a>Map90_Sync_Chr_Banks</STRONG> (ARM, 1776 bytes, Stack size 40 bytes, infones_mapper.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map90_Write
</UL>

<P><STRONG><a name="[260]"></a>Map90_Sync_Prg_Banks</STRONG> (ARM, 1000 bytes, Stack size 8 bytes, infones_mapper.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map90_Write
</UL>

<P><STRONG><a name="[261]"></a>Map90_Write</STRONG> (ARM, 860 bytes, Stack size 16 bytes, infones_mapper.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map90_Sync_Prg_Banks
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map90_Sync_Chr_Banks
<LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map90_Sync_Mirror
</UL>

<P><STRONG><a name="[7e]"></a>Map90_Init</STRONG> (ARM, 496 bytes, Stack size 8 bytes, infones_mapper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Map90_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;K6502_Set_Int_Wiring
</UL>
<BR>[Address Reference Count : 2]<UL><LI> infones_mapper.o(.text)
<LI> infones_mapper.o(.data)
</UL>
<P><STRONG><a name="[262]"></a>Map91_Sram</STRONG> (ARM, 584 bytes, Stack size 16 bytes, infones_mapper.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>

<P><STRONG><a name="[7f]"></a>Map91_Init</STRONG> (ARM, 348 bytes, Stack size 8 bytes, infones_mapper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Map91_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfoNES_Mirroring
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;K6502_Set_Int_Wiring
</UL>
<BR>[Address Reference Count : 2]<UL><LI> infones_mapper.o(.text)
<LI> infones_mapper.o(.data)
</UL>
<P><STRONG><a name="[263]"></a>Map92_Write</STRONG> (ARM, 780 bytes, Stack size 24 bytes, infones_mapper.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>

<P><STRONG><a name="[80]"></a>Map92_Init</STRONG> (ARM, 304 bytes, Stack size 8 bytes, infones_mapper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Map92_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;K6502_Set_Int_Wiring
</UL>
<BR>[Address Reference Count : 2]<UL><LI> infones_mapper.o(.text)
<LI> infones_mapper.o(.data)
</UL>
<P><STRONG><a name="[264]"></a>Map93_Sram</STRONG> (ARM, 100 bytes, Stack size 16 bytes, infones_mapper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Map93_Sram &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Address Reference Count : 1]<UL><LI> infones_mapper.o(.text)
</UL>
<P><STRONG><a name="[81]"></a>Map93_Init</STRONG> (ARM, 304 bytes, Stack size 8 bytes, infones_mapper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Map93_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;K6502_Set_Int_Wiring
</UL>
<BR>[Address Reference Count : 2]<UL><LI> infones_mapper.o(.text)
<LI> infones_mapper.o(.data)
</UL>
<P><STRONG><a name="[265]"></a>Map94_Write</STRONG> (ARM, 120 bytes, Stack size 16 bytes, infones_mapper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Map94_Write &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Address Reference Count : 1]<UL><LI> infones_mapper.o(.text)
</UL>
<P><STRONG><a name="[82]"></a>Map94_Init</STRONG> (ARM, 248 bytes, Stack size 8 bytes, infones_mapper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Map94_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;K6502_Set_Int_Wiring
</UL>
<BR>[Address Reference Count : 2]<UL><LI> infones_mapper.o(.text)
<LI> infones_mapper.o(.data)
</UL>
<P><STRONG><a name="[266]"></a>Map95_Set_PPU_Banks</STRONG> (ARM, 764 bytes, Stack size 8 bytes, infones_mapper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = Map95_Set_PPU_Banks
</UL>
<BR>[Calls]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map95_Init
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map95_Write
</UL>

<P><STRONG><a name="[267]"></a>Map95_Set_CPU_Banks</STRONG> (ARM, 348 bytes, Stack size 8 bytes, infones_mapper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = Map95_Set_CPU_Banks
</UL>
<BR>[Calls]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map95_Init
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map95_Write
</UL>

<P><STRONG><a name="[268]"></a>Map95_Write</STRONG> (ARM, 460 bytes, Stack size 16 bytes, infones_mapper.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map95_Set_CPU_Banks
<LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map95_Set_PPU_Banks
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfoNES_Mirroring
</UL>

<P><STRONG><a name="[83]"></a>Map95_Init</STRONG> (ARM, 324 bytes, Stack size 8 bytes, infones_mapper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + Unknown Stack Size
<LI>Call Chain = Map95_Init &rArr; Map95_Set_CPU_Banks
</UL>
<BR>[Calls]<UL><LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map95_Set_CPU_Banks
<LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map95_Set_PPU_Banks
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;K6502_Set_Int_Wiring
</UL>
<BR>[Address Reference Count : 2]<UL><LI> infones_mapper.o(.text)
<LI> infones_mapper.o(.data)
</UL>
<P><STRONG><a name="[26a]"></a>Map96_Set_Banks</STRONG> (ARM, 320 bytes, Stack size 0 bytes, infones_mapper.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map96_Init
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map96_Write
<LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map96_PPU
</UL>

<P><STRONG><a name="[269]"></a>Map96_PPU</STRONG> (ARM, 44 bytes, Stack size 4 bytes, infones_mapper.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map96_Set_Banks
</UL>

<P><STRONG><a name="[26b]"></a>Map96_Write</STRONG> (ARM, 360 bytes, Stack size 16 bytes, infones_mapper.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map96_Set_Banks
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>

<P><STRONG><a name="[84]"></a>Map96_Init</STRONG> (ARM, 244 bytes, Stack size 8 bytes, infones_mapper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Map96_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map96_Set_Banks
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfoNES_Mirroring
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;K6502_Set_Int_Wiring
</UL>
<BR>[Address Reference Count : 2]<UL><LI> infones_mapper.o(.text)
<LI> infones_mapper.o(.data)
</UL>
<P><STRONG><a name="[26c]"></a>Map97_Write</STRONG> (ARM, 132 bytes, Stack size 16 bytes, infones_mapper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Map97_Write &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfoNES_Mirroring
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Address Reference Count : 1]<UL><LI> infones_mapper.o(.text)
</UL>
<P><STRONG><a name="[85]"></a>Map97_Init</STRONG> (ARM, 304 bytes, Stack size 8 bytes, infones_mapper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Map97_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;K6502_Set_Int_Wiring
</UL>
<BR>[Address Reference Count : 2]<UL><LI> infones_mapper.o(.text)
<LI> infones_mapper.o(.data)
</UL>
<P><STRONG><a name="[313]"></a>Map99_ReadApu</STRONG> (ARM, 36 bytes, Stack size 0 bytes, infones_mapper.o(.text), UNUSED)

<P><STRONG><a name="[26d]"></a>Map99_Apu</STRONG> (ARM, 700 bytes, Stack size 16 bytes, infones_mapper.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>

<P><STRONG><a name="[86]"></a>Map99_Init</STRONG> (ARM, 460 bytes, Stack size 8 bytes, infones_mapper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Map99_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;K6502_Set_Int_Wiring
</UL>
<BR>[Address Reference Count : 2]<UL><LI> infones_mapper.o(.text)
<LI> infones_mapper.o(.data)
</UL>
<P><STRONG><a name="[26e]"></a>Map100_Set_PPU_Banks</STRONG> (ARM, 376 bytes, Stack size 8 bytes, infones_mapper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Map100_Set_PPU_Banks &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map100_Init
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map100_Write
</UL>

<P><STRONG><a name="[2b]"></a>Map100_HSync</STRONG> (ARM, 132 bytes, Stack size 0 bytes, infones_mapper.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> infones_mapper.o(.text)
</UL>
<P><STRONG><a name="[26f]"></a>Map100_Set_CPU_Banks</STRONG> (ARM, 184 bytes, Stack size 8 bytes, infones_mapper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Map100_Set_CPU_Banks &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map100_Write
</UL>

<P><STRONG><a name="[2a]"></a>Map100_Write</STRONG> (ARM, 1068 bytes, Stack size 16 bytes, infones_mapper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Map100_Write &rArr; Map100_Set_CPU_Banks &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map100_Set_CPU_Banks
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map100_Set_PPU_Banks
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfoNES_Mirroring
</UL>
<BR>[Address Reference Count : 1]<UL><LI> infones_mapper.o(.text)
</UL>
<P><STRONG><a name="[87]"></a>Map100_Init</STRONG> (ARM, 620 bytes, Stack size 8 bytes, infones_mapper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Map100_Init &rArr; Map100_Set_PPU_Banks &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map100_Set_PPU_Banks
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;K6502_Set_Int_Wiring
</UL>
<BR>[Address Reference Count : 2]<UL><LI> infones_mapper.o(.text)
<LI> infones_mapper.o(.data)
</UL>
<P><STRONG><a name="[270]"></a>Map101_Write</STRONG> (ARM, 236 bytes, Stack size 16 bytes, infones_mapper.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>

<P><STRONG><a name="[88]"></a>Map101_Init</STRONG> (ARM, 268 bytes, Stack size 8 bytes, infones_mapper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Map101_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;K6502_Set_Int_Wiring
</UL>
<BR>[Address Reference Count : 2]<UL><LI> infones_mapper.o(.text)
<LI> infones_mapper.o(.data)
</UL>
<P><STRONG><a name="[2d]"></a>Map105_HSync</STRONG> (ARM, 100 bytes, Stack size 0 bytes, infones_mapper.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> infones_mapper.o(.text)
</UL>
<P><STRONG><a name="[2c]"></a>Map105_Write</STRONG> (ARM, 1324 bytes, Stack size 16 bytes, infones_mapper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Map105_Write &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfoNES_Mirroring
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Address Reference Count : 1]<UL><LI> infones_mapper.o(.text)
</UL>
<P><STRONG><a name="[89]"></a>Map105_Init</STRONG> (ARM, 292 bytes, Stack size 8 bytes, infones_mapper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Map105_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;K6502_Set_Int_Wiring
</UL>
<BR>[Address Reference Count : 2]<UL><LI> infones_mapper.o(.text)
<LI> infones_mapper.o(.data)
</UL>
<P><STRONG><a name="[271]"></a>Map107_Write</STRONG> (ARM, 624 bytes, Stack size 16 bytes, infones_mapper.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>

<P><STRONG><a name="[8a]"></a>Map107_Init</STRONG> (ARM, 304 bytes, Stack size 8 bytes, infones_mapper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Map107_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;K6502_Set_Int_Wiring
</UL>
<BR>[Address Reference Count : 2]<UL><LI> infones_mapper.o(.text)
<LI> infones_mapper.o(.data)
</UL>
<P><STRONG><a name="[272]"></a>Map108_Write</STRONG> (ARM, 56 bytes, Stack size 16 bytes, infones_mapper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Map108_Write &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Address Reference Count : 1]<UL><LI> infones_mapper.o(.text)
</UL>
<P><STRONG><a name="[8b]"></a>Map108_Init</STRONG> (ARM, 304 bytes, Stack size 8 bytes, infones_mapper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Map108_Init &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;K6502_Set_Int_Wiring
</UL>
<BR>[Address Reference Count : 2]<UL><LI> infones_mapper.o(.text)
<LI> infones_mapper.o(.data)
</UL>
<P><STRONG><a name="[273]"></a>Map109_Set_PPU_Banks</STRONG> (ARM, 552 bytes, Stack size 8 bytes, infones_mapper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Map109_Set_PPU_Banks &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map109_Init
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map109_Apu
</UL>

<P><STRONG><a name="[274]"></a>Map109_Apu</STRONG> (ARM, 468 bytes, Stack size 16 bytes, infones_mapper.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map109_Set_PPU_Banks
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfoNES_Mirroring
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>

<P><STRONG><a name="[8c]"></a>Map109_Init</STRONG> (ARM, 280 bytes, Stack size 8 bytes, infones_mapper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Map109_Init &rArr; Map109_Set_PPU_Banks &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map109_Set_PPU_Banks
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;K6502_Set_Int_Wiring
</UL>
<BR>[Address Reference Count : 2]<UL><LI> infones_mapper.o(.text)
<LI> infones_mapper.o(.data)
</UL>
<P><STRONG><a name="[275]"></a>Map110_Apu</STRONG> (ARM, 2080 bytes, Stack size 16 bytes, infones_mapper.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>

<P><STRONG><a name="[8d]"></a>Map110_Init</STRONG> (ARM, 292 bytes, Stack size 8 bytes, infones_mapper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Map110_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;K6502_Set_Int_Wiring
</UL>
<BR>[Address Reference Count : 2]<UL><LI> infones_mapper.o(.text)
<LI> infones_mapper.o(.data)
</UL>
<P><STRONG><a name="[276]"></a>Map112_Set_PPU_Banks</STRONG> (ARM, 836 bytes, Stack size 8 bytes, infones_mapper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = Map112_Set_PPU_Banks
</UL>
<BR>[Calls]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map112_Init
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map112_Write
</UL>

<P><STRONG><a name="[277]"></a>Map112_Set_CPU_Banks</STRONG> (ARM, 348 bytes, Stack size 8 bytes, infones_mapper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = Map112_Set_CPU_Banks
</UL>
<BR>[Calls]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map112_Init
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map112_Write
</UL>

<P><STRONG><a name="[314]"></a>Map112_HSync</STRONG> (ARM, 132 bytes, Stack size 0 bytes, infones_mapper.o(.text), UNUSED)

<P><STRONG><a name="[278]"></a>Map112_Write</STRONG> (ARM, 688 bytes, Stack size 16 bytes, infones_mapper.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map112_Set_CPU_Banks
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map112_Set_PPU_Banks
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfoNES_Mirroring
</UL>

<P><STRONG><a name="[8e]"></a>Map112_Init</STRONG> (ARM, 376 bytes, Stack size 8 bytes, infones_mapper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + Unknown Stack Size
<LI>Call Chain = Map112_Init &rArr; Map112_Set_CPU_Banks
</UL>
<BR>[Calls]<UL><LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map112_Set_CPU_Banks
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map112_Set_PPU_Banks
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;K6502_Set_Int_Wiring
</UL>
<BR>[Address Reference Count : 2]<UL><LI> infones_mapper.o(.text)
<LI> infones_mapper.o(.data)
</UL>
<P><STRONG><a name="[279]"></a>Map113_Apu</STRONG> (ARM, 480 bytes, Stack size 24 bytes, infones_mapper.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>

<P><STRONG><a name="[27a]"></a>Map113_Write</STRONG> (ARM, 452 bytes, Stack size 24 bytes, infones_mapper.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>

<P><STRONG><a name="[8f]"></a>Map113_Init</STRONG> (ARM, 272 bytes, Stack size 8 bytes, infones_mapper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Map113_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;K6502_Set_Int_Wiring
</UL>
<BR>[Address Reference Count : 2]<UL><LI> infones_mapper.o(.text)
<LI> infones_mapper.o(.data)
</UL>
<P><STRONG><a name="[27b]"></a>Map114_Set_PPU_Banks</STRONG> (ARM, 764 bytes, Stack size 8 bytes, infones_mapper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = Map114_Set_PPU_Banks
</UL>
<BR>[Calls]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map114_Init
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map114_Write
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map114_Sram
</UL>

<P><STRONG><a name="[27c]"></a>Map114_Set_CPU_Banks</STRONG> (ARM, 500 bytes, Stack size 8 bytes, infones_mapper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = Map114_Set_CPU_Banks
</UL>
<BR>[Calls]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map114_Init
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map114_Write
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map114_Sram
</UL>

<P><STRONG><a name="[2e]"></a>Map114_HSync</STRONG> (ARM, 132 bytes, Stack size 0 bytes, infones_mapper.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> infones_mapper.o(.text)
</UL>
<P><STRONG><a name="[27d]"></a>Map114_Sram</STRONG> (ARM, 268 bytes, Stack size 16 bytes, infones_mapper.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map114_Set_CPU_Banks
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map114_Set_PPU_Banks
</UL>

<P><STRONG><a name="[27e]"></a>Map114_Write</STRONG> (ARM, 664 bytes, Stack size 16 bytes, infones_mapper.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map114_Set_CPU_Banks
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map114_Set_PPU_Banks
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfoNES_Mirroring
</UL>

<P><STRONG><a name="[90]"></a>Map114_Init</STRONG> (ARM, 376 bytes, Stack size 8 bytes, infones_mapper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + Unknown Stack Size
<LI>Call Chain = Map114_Init &rArr; Map114_Set_CPU_Banks
</UL>
<BR>[Calls]<UL><LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map114_Set_CPU_Banks
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map114_Set_PPU_Banks
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;K6502_Set_Int_Wiring
</UL>
<BR>[Address Reference Count : 2]<UL><LI> infones_mapper.o(.text)
<LI> infones_mapper.o(.data)
</UL>
<P><STRONG><a name="[27f]"></a>Map115_Set_PPU_Banks</STRONG> (ARM, 940 bytes, Stack size 8 bytes, infones_mapper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Map115_Set_PPU_Banks &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map115_Init
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map115_Write
<LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map115_Sram
</UL>

<P><STRONG><a name="[280]"></a>Map115_Set_CPU_Banks</STRONG> (ARM, 628 bytes, Stack size 8 bytes, infones_mapper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Map115_Set_CPU_Banks &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map115_Init
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map115_Write
<LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map115_Sram
</UL>

<P><STRONG><a name="[315]"></a>Map115_HSync</STRONG> (ARM, 132 bytes, Stack size 0 bytes, infones_mapper.o(.text), UNUSED)

<P><STRONG><a name="[281]"></a>Map115_Sram</STRONG> (ARM, 88 bytes, Stack size 16 bytes, infones_mapper.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map115_Set_CPU_Banks
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map115_Set_PPU_Banks
</UL>

<P><STRONG><a name="[282]"></a>Map115_Write</STRONG> (ARM, 736 bytes, Stack size 16 bytes, infones_mapper.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map115_Set_CPU_Banks
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map115_Set_PPU_Banks
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfoNES_Mirroring
</UL>

<P><STRONG><a name="[91]"></a>Map115_Init</STRONG> (ARM, 504 bytes, Stack size 8 bytes, infones_mapper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Map115_Init &rArr; Map115_Set_CPU_Banks &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map115_Set_CPU_Banks
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map115_Set_PPU_Banks
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;K6502_Set_Int_Wiring
</UL>
<BR>[Address Reference Count : 2]<UL><LI> infones_mapper.o(.text)
<LI> infones_mapper.o(.data)
</UL>
<P><STRONG><a name="[283]"></a>Map116_Set_PPU_Banks</STRONG> (ARM, 940 bytes, Stack size 8 bytes, infones_mapper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Map116_Set_PPU_Banks &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map116_Init
<LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map116_Write
</UL>

<P><STRONG><a name="[284]"></a>Map116_Set_CPU_Banks</STRONG> (ARM, 348 bytes, Stack size 8 bytes, infones_mapper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Map116_Set_CPU_Banks &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map116_Init
<LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map116_Write
</UL>

<P><STRONG><a name="[316]"></a>Map116_HSync</STRONG> (ARM, 132 bytes, Stack size 0 bytes, infones_mapper.o(.text), UNUSED)

<P><STRONG><a name="[285]"></a>Map116_Write</STRONG> (ARM, 608 bytes, Stack size 16 bytes, infones_mapper.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map116_Set_CPU_Banks
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map116_Set_PPU_Banks
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfoNES_Mirroring
</UL>

<P><STRONG><a name="[92]"></a>Map116_Init</STRONG> (ARM, 504 bytes, Stack size 8 bytes, infones_mapper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Map116_Init &rArr; Map116_Set_CPU_Banks &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map116_Set_CPU_Banks
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map116_Set_PPU_Banks
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;K6502_Set_Int_Wiring
</UL>
<BR>[Address Reference Count : 2]<UL><LI> infones_mapper.o(.text)
<LI> infones_mapper.o(.data)
</UL>
<P><STRONG><a name="[30]"></a>Map117_HSync</STRONG> (ARM, 80 bytes, Stack size 0 bytes, infones_mapper.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> infones_mapper.o(.text)
</UL>
<P><STRONG><a name="[2f]"></a>Map117_Write</STRONG> (ARM, 1024 bytes, Stack size 16 bytes, infones_mapper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Map117_Write &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Address Reference Count : 1]<UL><LI> infones_mapper.o(.text)
</UL>
<P><STRONG><a name="[93]"></a>Map117_Init</STRONG> (ARM, 336 bytes, Stack size 8 bytes, infones_mapper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Map117_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;K6502_Set_Int_Wiring
</UL>
<BR>[Address Reference Count : 2]<UL><LI> infones_mapper.o(.text)
<LI> infones_mapper.o(.data)
</UL>
<P><STRONG><a name="[286]"></a>Map118_Set_PPU_Banks</STRONG> (ARM, 748 bytes, Stack size 8 bytes, infones_mapper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = Map118_Set_PPU_Banks
</UL>
<BR>[Calls]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map118_Init
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map118_Write
</UL>

<P><STRONG><a name="[287]"></a>Map118_Set_CPU_Banks</STRONG> (ARM, 348 bytes, Stack size 8 bytes, infones_mapper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = Map118_Set_CPU_Banks
</UL>
<BR>[Calls]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map118_Init
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map118_Write
</UL>

<P><STRONG><a name="[317]"></a>Map118_HSync</STRONG> (ARM, 132 bytes, Stack size 0 bytes, infones_mapper.o(.text), UNUSED)

<P><STRONG><a name="[288]"></a>Map118_Write</STRONG> (ARM, 652 bytes, Stack size 16 bytes, infones_mapper.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map118_Set_CPU_Banks
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map118_Set_PPU_Banks
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfoNES_Mirroring
</UL>

<P><STRONG><a name="[94]"></a>Map118_Init</STRONG> (ARM, 416 bytes, Stack size 8 bytes, infones_mapper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + Unknown Stack Size
<LI>Call Chain = Map118_Init &rArr; Map118_Set_CPU_Banks
</UL>
<BR>[Calls]<UL><LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map118_Set_CPU_Banks
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map118_Set_PPU_Banks
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;K6502_Set_Int_Wiring
</UL>
<BR>[Address Reference Count : 2]<UL><LI> infones_mapper.o(.text)
<LI> infones_mapper.o(.data)
</UL>
<P><STRONG><a name="[289]"></a>Map119_Set_PPU_Banks</STRONG> (ARM, 1672 bytes, Stack size 8 bytes, infones_mapper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Map119_Set_PPU_Banks &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map119_Init
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map119_Write
</UL>

<P><STRONG><a name="[28a]"></a>Map119_Set_CPU_Banks</STRONG> (ARM, 348 bytes, Stack size 8 bytes, infones_mapper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Map119_Set_CPU_Banks &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map119_Init
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map119_Write
</UL>

<P><STRONG><a name="[318]"></a>Map119_HSync</STRONG> (ARM, 132 bytes, Stack size 0 bytes, infones_mapper.o(.text), UNUSED)

<P><STRONG><a name="[28b]"></a>Map119_Write</STRONG> (ARM, 668 bytes, Stack size 16 bytes, infones_mapper.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map119_Set_CPU_Banks
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map119_Set_PPU_Banks
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfoNES_Mirroring
</UL>

<P><STRONG><a name="[95]"></a>Map119_Init</STRONG> (ARM, 312 bytes, Stack size 8 bytes, infones_mapper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Map119_Init &rArr; Map119_Set_CPU_Banks &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map119_Set_CPU_Banks
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map119_Set_PPU_Banks
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;K6502_Set_Int_Wiring
</UL>
<BR>[Address Reference Count : 2]<UL><LI> infones_mapper.o(.text)
<LI> infones_mapper.o(.data)
</UL>
<P><STRONG><a name="[28c]"></a>Map122_Sram</STRONG> (ARM, 268 bytes, Stack size 24 bytes, infones_mapper.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>

<P><STRONG><a name="[96]"></a>Map122_Init</STRONG> (ARM, 216 bytes, Stack size 8 bytes, infones_mapper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Map122_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;K6502_Set_Int_Wiring
</UL>
<BR>[Address Reference Count : 2]<UL><LI> infones_mapper.o(.text)
<LI> infones_mapper.o(.data)
</UL>
<P><STRONG><a name="[28d]"></a>Map133_Apu</STRONG> (ARM, 584 bytes, Stack size 16 bytes, infones_mapper.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>

<P><STRONG><a name="[97]"></a>Map133_Init</STRONG> (ARM, 272 bytes, Stack size 8 bytes, infones_mapper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Map133_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;K6502_Set_Int_Wiring
</UL>
<BR>[Address Reference Count : 2]<UL><LI> infones_mapper.o(.text)
<LI> infones_mapper.o(.data)
</UL>
<P><STRONG><a name="[31]"></a>Map134_Apu</STRONG> (ARM, 1100 bytes, Stack size 16 bytes, infones_mapper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Map134_Apu &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfoNES_Mirroring
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Address Reference Count : 1]<UL><LI> infones_mapper.o(.text)
</UL>
<P><STRONG><a name="[98]"></a>Map134_Init</STRONG> (ARM, 272 bytes, Stack size 8 bytes, infones_mapper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Map134_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;K6502_Set_Int_Wiring
</UL>
<BR>[Address Reference Count : 2]<UL><LI> infones_mapper.o(.text)
<LI> infones_mapper.o(.data)
</UL>
<P><STRONG><a name="[28e]"></a>Map135_Set_PPU_Banks</STRONG> (ARM, 584 bytes, Stack size 8 bytes, infones_mapper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Map135_Set_PPU_Banks &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map135_Init
<LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map135_Apu
</UL>

<P><STRONG><a name="[28f]"></a>Map135_Apu</STRONG> (ARM, 628 bytes, Stack size 16 bytes, infones_mapper.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map135_Set_PPU_Banks
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfoNES_Mirroring
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>

<P><STRONG><a name="[99]"></a>Map135_Init</STRONG> (ARM, 272 bytes, Stack size 8 bytes, infones_mapper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Map135_Init &rArr; Map135_Set_PPU_Banks &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map135_Set_PPU_Banks
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;K6502_Set_Int_Wiring
</UL>
<BR>[Address Reference Count : 2]<UL><LI> infones_mapper.o(.text)
<LI> infones_mapper.o(.data)
</UL>
<P><STRONG><a name="[290]"></a>Map140_Apu</STRONG> (ARM, 628 bytes, Stack size 16 bytes, infones_mapper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Map140_Apu &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map140_Sram
</UL>

<P><STRONG><a name="[291]"></a>Map140_Sram</STRONG> (ARM, 28 bytes, Stack size 16 bytes, infones_mapper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = Map140_Sram &rArr; Map140_Apu &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map140_Apu
</UL>
<BR>[Address Reference Count : 1]<UL><LI> infones_mapper.o(.text)
</UL>
<P><STRONG><a name="[9a]"></a>Map140_Init</STRONG> (ARM, 272 bytes, Stack size 8 bytes, infones_mapper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Map140_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;K6502_Set_Int_Wiring
</UL>
<BR>[Address Reference Count : 1]<UL><LI> infones_mapper.o(.data)
</UL>
<P><STRONG><a name="[292]"></a>Map151_Write</STRONG> (ARM, 588 bytes, Stack size 16 bytes, infones_mapper.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>

<P><STRONG><a name="[9b]"></a>Map151_Init</STRONG> (ARM, 304 bytes, Stack size 8 bytes, infones_mapper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Map151_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;K6502_Set_Int_Wiring
</UL>
<BR>[Address Reference Count : 2]<UL><LI> infones_mapper.o(.text)
<LI> infones_mapper.o(.data)
</UL>
<P><STRONG><a name="[293]"></a>Map160_HSync</STRONG> (ARM, 2944 bytes, Stack size 8 bytes, infones_mapper.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>

<P><STRONG><a name="[33]"></a>Map160_Write</STRONG> (ARM, 1004 bytes, Stack size 16 bytes, infones_mapper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Map160_Write &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Address Reference Count : 1]<UL><LI> infones_mapper.o(.text)
</UL>
<P><STRONG><a name="[9c]"></a>Map160_Init</STRONG> (ARM, 404 bytes, Stack size 8 bytes, infones_mapper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Map160_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;K6502_Set_Int_Wiring
</UL>
<BR>[Address Reference Count : 2]<UL><LI> infones_mapper.o(.text)
<LI> infones_mapper.o(.data)
</UL>
<P><STRONG><a name="[294]"></a>Map180_Write</STRONG> (ARM, 92 bytes, Stack size 16 bytes, infones_mapper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Map180_Write &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Address Reference Count : 1]<UL><LI> infones_mapper.o(.text)
</UL>
<P><STRONG><a name="[9d]"></a>Map180_Init</STRONG> (ARM, 272 bytes, Stack size 8 bytes, infones_mapper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Map180_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;K6502_Set_Int_Wiring
</UL>
<BR>[Address Reference Count : 2]<UL><LI> infones_mapper.o(.text)
<LI> infones_mapper.o(.data)
</UL>
<P><STRONG><a name="[295]"></a>Map181_Apu</STRONG> (ARM, 604 bytes, Stack size 16 bytes, infones_mapper.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>

<P><STRONG><a name="[9e]"></a>Map181_Init</STRONG> (ARM, 272 bytes, Stack size 8 bytes, infones_mapper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Map181_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;K6502_Set_Int_Wiring
</UL>
<BR>[Address Reference Count : 2]<UL><LI> infones_mapper.o(.text)
<LI> infones_mapper.o(.data)
</UL>
<P><STRONG><a name="[319]"></a>Map182_HSync</STRONG> (ARM, 120 bytes, Stack size 0 bytes, infones_mapper.o(.text), UNUSED)

<P><STRONG><a name="[296]"></a>Map182_Write</STRONG> (ARM, 688 bytes, Stack size 16 bytes, infones_mapper.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfoNES_Mirroring
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>

<P><STRONG><a name="[9f]"></a>Map182_Init</STRONG> (ARM, 332 bytes, Stack size 8 bytes, infones_mapper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Map182_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;K6502_Set_Int_Wiring
</UL>
<BR>[Address Reference Count : 2]<UL><LI> infones_mapper.o(.text)
<LI> infones_mapper.o(.data)
</UL>
<P><STRONG><a name="[31a]"></a>Map183_HSync</STRONG> (ARM, 80 bytes, Stack size 0 bytes, infones_mapper.o(.text), UNUSED)

<P><STRONG><a name="[34]"></a>Map183_Write</STRONG> (ARM, 2268 bytes, Stack size 16 bytes, infones_mapper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Map183_Write &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfoNES_Mirroring
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Address Reference Count : 1]<UL><LI> infones_mapper.o(.text)
</UL>
<P><STRONG><a name="[a0]"></a>Map183_Init</STRONG> (ARM, 352 bytes, Stack size 8 bytes, infones_mapper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Map183_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;K6502_Set_Int_Wiring
</UL>
<BR>[Address Reference Count : 2]<UL><LI> infones_mapper.o(.text)
<LI> infones_mapper.o(.data)
</UL>
<P><STRONG><a name="[297]"></a>Map185_Write</STRONG> (ARM, 184 bytes, Stack size 0 bytes, infones_mapper.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> infones_mapper.o(.text)
</UL>
<P><STRONG><a name="[a1]"></a>Map185_Init</STRONG> (ARM, 248 bytes, Stack size 8 bytes, infones_mapper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Map185_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;K6502_Set_Int_Wiring
</UL>
<BR>[Address Reference Count : 2]<UL><LI> infones_mapper.o(.text)
<LI> infones_mapper.o(.data)
</UL>
<P><STRONG><a name="[298]"></a>Map187_Set_CPU_Banks</STRONG> (ARM, 216 bytes, Stack size 8 bytes, infones_mapper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Map187_Set_CPU_Banks &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map187_Init
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map187_Write
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map187_Apu
</UL>

<P><STRONG><a name="[31b]"></a>Map187_HSync</STRONG> (ARM, 180 bytes, Stack size 0 bytes, infones_mapper.o(.text), UNUSED)

<P><STRONG><a name="[35]"></a>Map187_ReadApu</STRONG> (ARM, 104 bytes, Stack size 0 bytes, infones_mapper.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> infones_mapper.o(.text)
</UL>
<P><STRONG><a name="[299]"></a>Map187_Apu</STRONG> (ARM, 264 bytes, Stack size 16 bytes, infones_mapper.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map187_Set_CPU_Banks
</UL>

<P><STRONG><a name="[29a]"></a>Map187_Set_PPU_Banks</STRONG> (ARM, 424 bytes, Stack size 8 bytes, infones_mapper.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map187_Write
</UL>

<P><STRONG><a name="[29b]"></a>Map187_Write</STRONG> (ARM, 880 bytes, Stack size 16 bytes, infones_mapper.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map187_Set_PPU_Banks
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map187_Set_CPU_Banks
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfoNES_Mirroring
</UL>

<P><STRONG><a name="[a2]"></a>Map187_Init</STRONG> (ARM, 488 bytes, Stack size 8 bytes, infones_mapper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Map187_Init &rArr; Map187_Set_CPU_Banks &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map187_Set_CPU_Banks
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;K6502_Set_Int_Wiring
</UL>
<BR>[Address Reference Count : 2]<UL><LI> infones_mapper.o(.text)
<LI> infones_mapper.o(.data)
</UL>
<P><STRONG><a name="[36]"></a>Map189_HSync</STRONG> (ARM, 120 bytes, Stack size 0 bytes, infones_mapper.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> infones_mapper.o(.text)
</UL>
<P><STRONG><a name="[29c]"></a>Map189_Apu</STRONG> (ARM, 216 bytes, Stack size 16 bytes, infones_mapper.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>

<P><STRONG><a name="[29d]"></a>Map189_Write</STRONG> (ARM, 720 bytes, Stack size 16 bytes, infones_mapper.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>

<P><STRONG><a name="[a3]"></a>Map189_Init</STRONG> (ARM, 332 bytes, Stack size 8 bytes, infones_mapper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Map189_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;K6502_Set_Int_Wiring
</UL>
<BR>[Address Reference Count : 2]<UL><LI> infones_mapper.o(.text)
<LI> infones_mapper.o(.data)
</UL>
<P><STRONG><a name="[29e]"></a>Map191_Set_PPU_Banks</STRONG> (ARM, 536 bytes, Stack size 8 bytes, infones_mapper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Map191_Set_PPU_Banks &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map191_Init
<LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map191_Apu
</UL>

<P><STRONG><a name="[29f]"></a>Map191_Set_CPU_Banks</STRONG> (ARM, 216 bytes, Stack size 8 bytes, infones_mapper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Map191_Set_CPU_Banks &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map191_Init
<LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map191_Apu
</UL>

<P><STRONG><a name="[2a0]"></a>Map191_Apu</STRONG> (ARM, 308 bytes, Stack size 16 bytes, infones_mapper.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map191_Set_CPU_Banks
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map191_Set_PPU_Banks
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfoNES_Mirroring
</UL>

<P><STRONG><a name="[a4]"></a>Map191_Init</STRONG> (ARM, 236 bytes, Stack size 8 bytes, infones_mapper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Map191_Init &rArr; Map191_Set_CPU_Banks &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map191_Set_CPU_Banks
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map191_Set_PPU_Banks
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;K6502_Set_Int_Wiring
</UL>
<BR>[Address Reference Count : 2]<UL><LI> infones_mapper.o(.text)
<LI> infones_mapper.o(.data)
</UL>
<P><STRONG><a name="[2a1]"></a>Map193_Sram</STRONG> (ARM, 600 bytes, Stack size 16 bytes, infones_mapper.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>

<P><STRONG><a name="[a5]"></a>Map193_Init</STRONG> (ARM, 424 bytes, Stack size 8 bytes, infones_mapper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Map193_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;K6502_Set_Int_Wiring
</UL>
<BR>[Address Reference Count : 2]<UL><LI> infones_mapper.o(.text)
<LI> infones_mapper.o(.data)
</UL>
<P><STRONG><a name="[2a2]"></a>Map194_Write</STRONG> (ARM, 56 bytes, Stack size 16 bytes, infones_mapper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Map194_Write &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Address Reference Count : 1]<UL><LI> infones_mapper.o(.text)
</UL>
<P><STRONG><a name="[a6]"></a>Map194_Init</STRONG> (ARM, 284 bytes, Stack size 8 bytes, infones_mapper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Map194_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;K6502_Set_Int_Wiring
</UL>
<BR>[Address Reference Count : 2]<UL><LI> infones_mapper.o(.text)
<LI> infones_mapper.o(.data)
</UL>
<P><STRONG><a name="[2a3]"></a>Map200_Write</STRONG> (ARM, 620 bytes, Stack size 16 bytes, infones_mapper.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfoNES_Mirroring
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>

<P><STRONG><a name="[a7]"></a>Map200_Init</STRONG> (ARM, 268 bytes, Stack size 8 bytes, infones_mapper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Map200_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;K6502_Set_Int_Wiring
</UL>
<BR>[Address Reference Count : 2]<UL><LI> infones_mapper.o(.text)
<LI> infones_mapper.o(.data)
</UL>
<P><STRONG><a name="[2a4]"></a>Map201_Write</STRONG> (ARM, 560 bytes, Stack size 16 bytes, infones_mapper.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>

<P><STRONG><a name="[a8]"></a>Map201_Init</STRONG> (ARM, 268 bytes, Stack size 8 bytes, infones_mapper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Map201_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;K6502_Set_Int_Wiring
</UL>
<BR>[Address Reference Count : 2]<UL><LI> infones_mapper.o(.text)
<LI> infones_mapper.o(.data)
</UL>
<P><STRONG><a name="[2a5]"></a>Map202_WriteSub</STRONG> (ARM, 692 bytes, Stack size 16 bytes, infones_mapper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Map202_WriteSub &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfoNES_Mirroring
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map202_Write
<LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map202_Apu
</UL>

<P><STRONG><a name="[2a6]"></a>Map202_Apu</STRONG> (ARM, 28 bytes, Stack size 16 bytes, infones_mapper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = Map202_Apu &rArr; Map202_WriteSub &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map202_WriteSub
</UL>
<BR>[Address Reference Count : 1]<UL><LI> infones_mapper.o(.text)
</UL>
<P><STRONG><a name="[2a7]"></a>Map202_Write</STRONG> (ARM, 28 bytes, Stack size 16 bytes, infones_mapper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = Map202_Write &rArr; Map202_WriteSub &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map202_WriteSub
</UL>
<BR>[Address Reference Count : 1]<UL><LI> infones_mapper.o(.text)
</UL>
<P><STRONG><a name="[a9]"></a>Map202_Init</STRONG> (ARM, 276 bytes, Stack size 8 bytes, infones_mapper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Map202_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;K6502_Set_Int_Wiring
</UL>
<BR>[Address Reference Count : 2]<UL><LI> infones_mapper.o(.text)
<LI> infones_mapper.o(.data)
</UL>
<P><STRONG><a name="[2a8]"></a>Map222_Write</STRONG> (ARM, 632 bytes, Stack size 16 bytes, infones_mapper.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>

<P><STRONG><a name="[aa]"></a>Map222_Init</STRONG> (ARM, 396 bytes, Stack size 8 bytes, infones_mapper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Map222_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfoNES_Mirroring
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;K6502_Set_Int_Wiring
</UL>
<BR>[Address Reference Count : 2]<UL><LI> infones_mapper.o(.text)
<LI> infones_mapper.o(.data)
</UL>
<P><STRONG><a name="[2a9]"></a>Map225_Write</STRONG> (ARM, 960 bytes, Stack size 24 bytes, infones_mapper.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfoNES_Mirroring
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>

<P><STRONG><a name="[ab]"></a>Map225_Init</STRONG> (ARM, 272 bytes, Stack size 8 bytes, infones_mapper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Map225_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;K6502_Set_Int_Wiring
</UL>
<BR>[Address Reference Count : 2]<UL><LI> infones_mapper.o(.text)
<LI> infones_mapper.o(.data)
</UL>
<P><STRONG><a name="[2aa]"></a>Map226_Write</STRONG> (ARM, 696 bytes, Stack size 16 bytes, infones_mapper.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfoNES_Mirroring
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>

<P><STRONG><a name="[ac]"></a>Map226_Init</STRONG> (ARM, 232 bytes, Stack size 8 bytes, infones_mapper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Map226_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;K6502_Set_Int_Wiring
</UL>
<BR>[Address Reference Count : 2]<UL><LI> infones_mapper.o(.text)
<LI> infones_mapper.o(.data)
</UL>
<P><STRONG><a name="[2ab]"></a>Map227_Write</STRONG> (ARM, 824 bytes, Stack size 16 bytes, infones_mapper.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfoNES_Mirroring
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>

<P><STRONG><a name="[ad]"></a>Map227_Init</STRONG> (ARM, 212 bytes, Stack size 8 bytes, infones_mapper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Map227_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;K6502_Set_Int_Wiring
</UL>
<BR>[Address Reference Count : 2]<UL><LI> infones_mapper.o(.text)
<LI> infones_mapper.o(.data)
</UL>
<P><STRONG><a name="[2ac]"></a>Map228_Write</STRONG> (ARM, 896 bytes, Stack size 24 bytes, infones_mapper.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfoNES_Mirroring
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>

<P><STRONG><a name="[ae]"></a>Map228_Init</STRONG> (ARM, 272 bytes, Stack size 8 bytes, infones_mapper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Map228_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;K6502_Set_Int_Wiring
</UL>
<BR>[Address Reference Count : 2]<UL><LI> infones_mapper.o(.text)
<LI> infones_mapper.o(.data)
</UL>
<P><STRONG><a name="[2ad]"></a>Map229_Write</STRONG> (ARM, 796 bytes, Stack size 24 bytes, infones_mapper.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfoNES_Mirroring
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>

<P><STRONG><a name="[af]"></a>Map229_Init</STRONG> (ARM, 272 bytes, Stack size 8 bytes, infones_mapper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Map229_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;K6502_Set_Int_Wiring
</UL>
<BR>[Address Reference Count : 2]<UL><LI> infones_mapper.o(.text)
<LI> infones_mapper.o(.data)
</UL>
<P><STRONG><a name="[2ae]"></a>Map230_Write</STRONG> (ARM, 556 bytes, Stack size 16 bytes, infones_mapper.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfoNES_Mirroring
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>

<P><STRONG><a name="[b0]"></a>Map230_Init</STRONG> (ARM, 392 bytes, Stack size 8 bytes, infones_mapper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Map230_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;K6502_Set_Int_Wiring
</UL>
<BR>[Address Reference Count : 2]<UL><LI> infones_mapper.o(.text)
<LI> infones_mapper.o(.data)
</UL>
<P><STRONG><a name="[2af]"></a>Map231_Write</STRONG> (ARM, 412 bytes, Stack size 16 bytes, infones_mapper.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfoNES_Mirroring
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>

<P><STRONG><a name="[b1]"></a>Map231_Init</STRONG> (ARM, 272 bytes, Stack size 8 bytes, infones_mapper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Map231_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;K6502_Set_Int_Wiring
</UL>
<BR>[Address Reference Count : 2]<UL><LI> infones_mapper.o(.text)
<LI> infones_mapper.o(.data)
</UL>
<P><STRONG><a name="[2b0]"></a>Map232_Write</STRONG> (ARM, 304 bytes, Stack size 16 bytes, infones_mapper.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>

<P><STRONG><a name="[b2]"></a>Map232_Init</STRONG> (ARM, 268 bytes, Stack size 8 bytes, infones_mapper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Map232_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;K6502_Set_Int_Wiring
</UL>
<BR>[Address Reference Count : 2]<UL><LI> infones_mapper.o(.text)
<LI> infones_mapper.o(.data)
</UL>
<P><STRONG><a name="[2b1]"></a>Map233_Write</STRONG> (ARM, 572 bytes, Stack size 16 bytes, infones_mapper.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfoNES_Mirroring
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>

<P><STRONG><a name="[b3]"></a>Map233_Init</STRONG> (ARM, 216 bytes, Stack size 8 bytes, infones_mapper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Map233_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;K6502_Set_Int_Wiring
</UL>
<BR>[Address Reference Count : 2]<UL><LI> infones_mapper.o(.text)
<LI> infones_mapper.o(.data)
</UL>
<P><STRONG><a name="[2b2]"></a>Map234_Set_Banks</STRONG> (ARM, 696 bytes, Stack size 16 bytes, infones_mapper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Map234_Set_Banks &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfoNES_Mirroring
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map234_Write
</UL>

<P><STRONG><a name="[2b3]"></a>Map234_Write</STRONG> (ARM, 104 bytes, Stack size 16 bytes, infones_mapper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = Map234_Write &rArr; Map234_Set_Banks &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map234_Set_Banks
</UL>
<BR>[Address Reference Count : 1]<UL><LI> infones_mapper.o(.text)
</UL>
<P><STRONG><a name="[b4]"></a>Map234_Init</STRONG> (ARM, 232 bytes, Stack size 8 bytes, infones_mapper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Map234_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;K6502_Set_Int_Wiring
</UL>
<BR>[Address Reference Count : 2]<UL><LI> infones_mapper.o(.text)
<LI> infones_mapper.o(.data)
</UL>
<P><STRONG><a name="[37]"></a>Map236_Write</STRONG> (ARM, 1156 bytes, Stack size 16 bytes, infones_mapper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Map236_Write &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfoNES_Mirroring
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Address Reference Count : 1]<UL><LI> infones_mapper.o(.text)
</UL>
<P><STRONG><a name="[b5]"></a>Map236_Init</STRONG> (ARM, 268 bytes, Stack size 8 bytes, infones_mapper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Map236_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;K6502_Set_Int_Wiring
</UL>
<BR>[Address Reference Count : 2]<UL><LI> infones_mapper.o(.text)
<LI> infones_mapper.o(.data)
</UL>
<P><STRONG><a name="[2b4]"></a>Map240_Apu</STRONG> (ARM, 612 bytes, Stack size 16 bytes, infones_mapper.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>

<P><STRONG><a name="[b6]"></a>Map240_Init</STRONG> (ARM, 304 bytes, Stack size 8 bytes, infones_mapper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Map240_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;K6502_Set_Int_Wiring
</UL>
<BR>[Address Reference Count : 2]<UL><LI> infones_mapper.o(.text)
<LI> infones_mapper.o(.data)
</UL>
<P><STRONG><a name="[2b5]"></a>Map241_Write</STRONG> (ARM, 260 bytes, Stack size 16 bytes, infones_mapper.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>

<P><STRONG><a name="[b7]"></a>Map241_Init</STRONG> (ARM, 272 bytes, Stack size 8 bytes, infones_mapper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Map241_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;K6502_Set_Int_Wiring
</UL>
<BR>[Address Reference Count : 2]<UL><LI> infones_mapper.o(.text)
<LI> infones_mapper.o(.data)
</UL>
<P><STRONG><a name="[2b6]"></a>Map242_Write</STRONG> (ARM, 216 bytes, Stack size 16 bytes, infones_mapper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Map242_Write &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Address Reference Count : 1]<UL><LI> infones_mapper.o(.text)
</UL>
<P><STRONG><a name="[b8]"></a>Map242_Init</STRONG> (ARM, 216 bytes, Stack size 8 bytes, infones_mapper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Map242_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;K6502_Set_Int_Wiring
</UL>
<BR>[Address Reference Count : 2]<UL><LI> infones_mapper.o(.text)
<LI> infones_mapper.o(.data)
</UL>
<P><STRONG><a name="[38]"></a>Map243_Apu</STRONG> (ARM, 1160 bytes, Stack size 16 bytes, infones_mapper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Map243_Apu &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Address Reference Count : 1]<UL><LI> infones_mapper.o(.text)
</UL>
<P><STRONG><a name="[b9]"></a>Map243_Init</STRONG> (ARM, 296 bytes, Stack size 8 bytes, infones_mapper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Map243_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;K6502_Set_Int_Wiring
</UL>
<BR>[Address Reference Count : 2]<UL><LI> infones_mapper.o(.text)
<LI> infones_mapper.o(.data)
</UL>
<P><STRONG><a name="[2b7]"></a>Map244_Write</STRONG> (ARM, 480 bytes, Stack size 16 bytes, infones_mapper.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>

<P><STRONG><a name="[ba]"></a>Map244_Init</STRONG> (ARM, 216 bytes, Stack size 8 bytes, infones_mapper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Map244_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;K6502_Set_Int_Wiring
</UL>
<BR>[Address Reference Count : 2]<UL><LI> infones_mapper.o(.text)
<LI> infones_mapper.o(.data)
</UL>
<P><STRONG><a name="[31c]"></a>Map245_HSync</STRONG> (ARM, 228 bytes, Stack size 0 bytes, infones_mapper.o(.text), UNUSED)

<P><STRONG><a name="[2b8]"></a>Map245_Write</STRONG> (ARM, 660 bytes, Stack size 16 bytes, infones_mapper.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfoNES_Mirroring
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>

<P><STRONG><a name="[bb]"></a>Map245_Init</STRONG> (ARM, 560 bytes, Stack size 8 bytes, infones_mapper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Map245_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;K6502_Set_Int_Wiring
</UL>
<BR>[Address Reference Count : 2]<UL><LI> infones_mapper.o(.text)
<LI> infones_mapper.o(.data)
</UL>
<P><STRONG><a name="[2b9]"></a>Map246_Sram</STRONG> (ARM, 700 bytes, Stack size 16 bytes, infones_mapper.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>

<P><STRONG><a name="[bc]"></a>Map246_Init</STRONG> (ARM, 248 bytes, Stack size 8 bytes, infones_mapper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Map246_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;K6502_Set_Int_Wiring
</UL>
<BR>[Address Reference Count : 2]<UL><LI> infones_mapper.o(.text)
<LI> infones_mapper.o(.data)
</UL>
<P><STRONG><a name="[2ba]"></a>Map248_Set_PPU_Banks</STRONG> (ARM, 764 bytes, Stack size 8 bytes, infones_mapper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Map248_Set_PPU_Banks &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map248_Init
<LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map248_Write
</UL>

<P><STRONG><a name="[2bb]"></a>Map248_Set_CPU_Banks</STRONG> (ARM, 348 bytes, Stack size 8 bytes, infones_mapper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Map248_Set_CPU_Banks &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map248_Init
<LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map248_Write
</UL>

<P><STRONG><a name="[31d]"></a>Map248_HSync</STRONG> (ARM, 132 bytes, Stack size 0 bytes, infones_mapper.o(.text), UNUSED)

<P><STRONG><a name="[2bc]"></a>Map248_Sram</STRONG> (ARM, 176 bytes, Stack size 16 bytes, infones_mapper.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map248_Apu
</UL>

<P><STRONG><a name="[2bd]"></a>Map248_Apu</STRONG> (ARM, 28 bytes, Stack size 16 bytes, infones_mapper.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map248_Sram
</UL>

<P><STRONG><a name="[2be]"></a>Map248_Write</STRONG> (ARM, 492 bytes, Stack size 16 bytes, infones_mapper.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfoNES_Mirroring
<LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map248_Set_CPU_Banks
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map248_Set_PPU_Banks
</UL>

<P><STRONG><a name="[bd]"></a>Map248_Init</STRONG> (ARM, 320 bytes, Stack size 8 bytes, infones_mapper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Map248_Init &rArr; Map248_Set_CPU_Banks &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;K6502_Set_Int_Wiring
<LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map248_Set_CPU_Banks
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map248_Set_PPU_Banks
</UL>
<BR>[Address Reference Count : 2]<UL><LI> infones_mapper.o(.text)
<LI> infones_mapper.o(.data)
</UL>
<P><STRONG><a name="[3a]"></a>Map249_HSync</STRONG> (ARM, 228 bytes, Stack size 0 bytes, infones_mapper.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> infones_mapper.o(.text)
</UL>
<P><STRONG><a name="[39]"></a>Map249_Apu</STRONG> (ARM, 76 bytes, Stack size 0 bytes, infones_mapper.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> infones_mapper.o(.text)
</UL>
<P><STRONG><a name="[2bf]"></a>Map249_Write</STRONG> (ARM, 2264 bytes, Stack size 48 bytes, infones_mapper.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfoNES_Mirroring
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>

<P><STRONG><a name="[be]"></a>Map249_Init</STRONG> (ARM, 380 bytes, Stack size 8 bytes, infones_mapper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Map249_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;K6502_Set_Int_Wiring
</UL>
<BR>[Address Reference Count : 2]<UL><LI> infones_mapper.o(.text)
<LI> infones_mapper.o(.data)
</UL>
<P><STRONG><a name="[2c0]"></a>Map251_Set_Banks</STRONG> (ARM, 1252 bytes, Stack size 48 bytes, infones_mapper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = Map251_Set_Banks &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map251_Write
<LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map251_Sram
</UL>

<P><STRONG><a name="[2c1]"></a>Map251_Sram</STRONG> (ARM, 116 bytes, Stack size 16 bytes, infones_mapper.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map251_Set_Banks
</UL>

<P><STRONG><a name="[2c2]"></a>Map251_Write</STRONG> (ARM, 164 bytes, Stack size 16 bytes, infones_mapper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = Map251_Write &rArr; Map251_Set_Banks &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Map251_Set_Banks
</UL>
<BR>[Address Reference Count : 1]<UL><LI> infones_mapper.o(.text)
</UL>
<P><STRONG><a name="[bf]"></a>Map251_Init</STRONG> (ARM, 424 bytes, Stack size 8 bytes, infones_mapper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Map251_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfoNES_Mirroring
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;K6502_Set_Int_Wiring
</UL>
<BR>[Address Reference Count : 2]<UL><LI> infones_mapper.o(.text)
<LI> infones_mapper.o(.data)
</UL>
<P><STRONG><a name="[3c]"></a>Map252_HSync</STRONG> (ARM, 140 bytes, Stack size 0 bytes, infones_mapper.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> infones_mapper.o(.text)
</UL>
<P><STRONG><a name="[3b]"></a>Map252_Write</STRONG> (ARM, 1852 bytes, Stack size 16 bytes, infones_mapper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Map252_Write &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Address Reference Count : 1]<UL><LI> infones_mapper.o(.text)
</UL>
<P><STRONG><a name="[c0]"></a>Map252_Init</STRONG> (ARM, 376 bytes, Stack size 8 bytes, infones_mapper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Map252_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;K6502_Set_Int_Wiring
</UL>
<BR>[Address Reference Count : 2]<UL><LI> infones_mapper.o(.text)
<LI> infones_mapper.o(.data)
</UL>
<P><STRONG><a name="[3e]"></a>Map255_ReadApu</STRONG> (ARM, 40 bytes, Stack size 0 bytes, infones_mapper.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> infones_mapper.o(.text)
</UL>
<P><STRONG><a name="[3d]"></a>Map255_Apu</STRONG> (ARM, 28 bytes, Stack size 0 bytes, infones_mapper.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> infones_mapper.o(.text)
</UL>
<P><STRONG><a name="[2c3]"></a>Map255_Write</STRONG> (ARM, 1032 bytes, Stack size 24 bytes, infones_mapper.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfoNES_Mirroring
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>

<P><STRONG><a name="[c1]"></a>Map255_Init</STRONG> (ARM, 392 bytes, Stack size 8 bytes, infones_mapper.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Map255_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfoNES_Mirroring
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;K6502_Set_Int_Wiring
</UL>
<BR>[Address Reference Count : 2]<UL><LI> infones_mapper.o(.text)
<LI> infones_mapper.o(.data)
</UL><P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[eb]"></a>rNF_Reset</STRONG> (ARM, 88 bytes, Stack size 0 bytes, nand.o(.text), UNUSED, KEPT)
<BR><BR>[Called By]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rLB_ReadPage
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rSB_ReadPage
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rNF_Init
</UL>

<P><STRONG><a name="[ea]"></a>rNF_Init</STRONG> (ARM, 40 bytes, Stack size 8 bytes, nand.o(.text), UNUSED, KEPT)
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = rNF_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rNF_Reset
</UL>
<BR>[Called By]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RdNF2SDRAM
</UL>

<P><STRONG><a name="[ee]"></a>rNF_ReadID</STRONG> (ARM, 116 bytes, Stack size 12 bytes, nand.o(.text), UNUSED, KEPT)
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = rNF_ReadID
</UL>
<BR>[Called By]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RdNF2SDRAM
</UL>

<P><STRONG><a name="[ec]"></a>rSB_ReadPage</STRONG> (ARM, 172 bytes, Stack size 16 bytes, nand.o(.text), UNUSED, KEPT)
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = rSB_ReadPage
</UL>
<BR>[Calls]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rNF_Reset
</UL>
<BR>[Called By]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RdNF2SDRAM
</UL>

<P><STRONG><a name="[ed]"></a>rLB_ReadPage</STRONG> (ARM, 184 bytes, Stack size 16 bytes, nand.o(.text), UNUSED, KEPT)
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = rLB_ReadPage
</UL>
<BR>[Calls]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rNF_Reset
</UL>
<BR>[Called By]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RdNF2SDRAM
</UL>

<P><STRONG><a name="[f1]"></a>cal_cpu_bus_clk</STRONG> (ARM, 552 bytes, Stack size 24 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32 + Unknown Stack Size
<LI>Call Chain = cal_cpu_bus_clk &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Main
</UL>

<P><STRONG><a name="[4]"></a>IsrIRQ</STRONG> (ARM, 0 bytes, Stack size unknown bytes, 2440init.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> 2440init.o(RESET)
</UL>
<P><STRONG><a name="[2]"></a>copy_proc_beg</STRONG> (ARM, 0 bytes, Stack size unknown bytes, 2440init.o(RESET))
<BR><BR>[Called By]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartPointAfterSleepWakeUp
</UL>
<BR>[Address Reference Count : 1]<UL><LI> 2440init.o(RESET)
</UL>
<P><STRONG><a name="[3]"></a>[Anonymous Symbol]</STRONG> (ARM, 0 bytes, Stack size unknown bytes, 2440init.o(RESET))
<BR><BR>[Stack]<UL><LI>Max Depth = 1416 + Unknown Stack Size
<LI>Call Chain = [Anonymous Symbol] &rArr; Main &rArr; process_key &rArr; App_Main &rArr; InfoNES_Load &rArr; LoadRomImage &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; disk_write &rArr; Write_Mult_Block &rArr; CMD25 &rArr; Chk_CMD_End &rArr; Uart_Printf &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Main
</UL>
<BR>[Address Reference Count : 1]<UL><LI> 2440init.o(RESET)
</UL>
<P><STRONG><a name="[209]"></a>K6502_Read(unsigned short)</STRONG> (ARM, 736 bytes, Stack size 16 bytes, k6502.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = K6502_Read(unsigned short)
</UL>
<BR>[Called By]<UL><LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;K6502_Step
<LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;K6502_ReadW(unsigned short)
<LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;K6502_ReadIY()
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;K6502_ReadAbsY()
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;K6502_ReadAbsX()
</UL>

<P><STRONG><a name="[207]"></a>K6502_Write(unsigned short, unsigned char)</STRONG> (ARM, 1804 bytes, Stack size 16 bytes, k6502.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = K6502_Write(unsigned short, unsigned char) &rArr; InfoNES_MemoryCopy &rArr; memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InfoNES_MemoryCopy
</UL>
<BR>[Called By]<UL><LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;K6502_Step
</UL>

<P><STRONG><a name="[208]"></a>K6502_ReadAbsX()</STRONG> (ARM, 404 bytes, Stack size 16 bytes, k6502.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = K6502_ReadAbsX() &rArr; K6502_Read(unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;K6502_Read(unsigned short)
</UL>
<BR>[Called By]<UL><LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;K6502_Step
</UL>

<P><STRONG><a name="[20a]"></a>K6502_ReadAbsY()</STRONG> (ARM, 160 bytes, Stack size 16 bytes, k6502.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = K6502_ReadAbsY() &rArr; K6502_Read(unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;K6502_Read(unsigned short)
</UL>
<BR>[Called By]<UL><LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;K6502_Step
</UL>

<P><STRONG><a name="[20b]"></a>K6502_ReadIY()</STRONG> (ARM, 128 bytes, Stack size 16 bytes, k6502.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = K6502_ReadIY() &rArr; K6502_ReadZpW(unsigned char)
</UL>
<BR>[Calls]<UL><LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;K6502_ReadZpW(unsigned char)
<LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;K6502_Read(unsigned short)
</UL>
<BR>[Called By]<UL><LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;K6502_Step
</UL>

<P><STRONG><a name="[206]"></a>K6502_ReadW(unsigned short)</STRONG> (ARM, 40 bytes, Stack size 16 bytes, k6502.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = K6502_ReadW(unsigned short) &rArr; K6502_Read(unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;K6502_Read(unsigned short)
</UL>
<BR>[Called By]<UL><LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;K6502_Step
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;K6502_Reset
</UL>

<P><STRONG><a name="[20d]"></a>K6502_ReadZp(unsigned char)</STRONG> (ARM, 16 bytes, Stack size 0 bytes, k6502.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;K6502_Step
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;K6502_ReadZpW(unsigned char)
</UL>

<P><STRONG><a name="[20c]"></a>K6502_ReadZpW(unsigned char)</STRONG> (ARM, 40 bytes, Stack size 16 bytes, k6502.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = K6502_ReadZpW(unsigned char)
</UL>
<BR>[Calls]<UL><LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;K6502_ReadZp(unsigned char)
</UL>
<BR>[Called By]<UL><LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;K6502_Step
<LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;K6502_ReadIY()
</UL>

<P><STRONG><a name="[130]"></a>mem_cpy</STRONG> (ARM, 80 bytes, Stack size 12 bytes, ff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = mem_cpy
</UL>
<BR>[Called By]<UL><LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_rename
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkdir
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_unlink
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_write
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gen_numname
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_register
</UL>

<P><STRONG><a name="[124]"></a>mem_set</STRONG> (ARM, 32 bytes, Stack size 8 bytes, ff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = mem_set
</UL>
<BR>[Called By]<UL><LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkdir
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_name
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_register
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_next
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sync
</UL>

<P><STRONG><a name="[133]"></a>mem_cmp</STRONG> (ARM, 60 bytes, Stack size 20 bytes, ff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = mem_cmp
</UL>
<BR>[Called By]<UL><LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_find
</UL>

<P><STRONG><a name="[13b]"></a>chk_chr</STRONG> (ARM, 44 bytes, Stack size 0 bytes, ff.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_name
</UL>

<P><STRONG><a name="[120]"></a>move_window</STRONG> (ARM, 212 bytes, Stack size 24 bytes, ff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 496 + Unknown Stack Size
<LI>Call Chain = move_window &rArr; disk_write &rArr; Write_Mult_Block &rArr; CMD25 &rArr; Chk_CMD_End &rArr; Uart_Printf &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_write
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_read
</UL>
<BR>[Called By]<UL><LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_rename
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkdir
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_getfree
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_sync
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;put_fat
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fat
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_remove
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_register
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_read
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_find
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_next
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sync
</UL>

<P><STRONG><a name="[123]"></a>sync</STRONG> (ARM, 324 bytes, Stack size 16 bytes, ff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 512 + Unknown Stack Size
<LI>Call Chain = sync &rArr; move_window &rArr; disk_write &rArr; Write_Mult_Block &rArr; CMD25 &rArr; Chk_CMD_End &rArr; Uart_Printf &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_set
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_ioctl
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_write
</UL>
<BR>[Called By]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_rename
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_utime
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_chmod
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkdir
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_unlink
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_sync
</UL>

<P><STRONG><a name="[128]"></a>remove_chain</STRONG> (ARM, 200 bytes, Stack size 24 bytes, ff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 552 + Unknown Stack Size
<LI>Call Chain = remove_chain &rArr; put_fat &rArr; move_window &rArr; disk_write &rArr; Write_Mult_Block &rArr; CMD25 &rArr; Chk_CMD_End &rArr; Uart_Printf &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;put_fat
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fat
</UL>
<BR>[Called By]<UL><LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkdir
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_unlink
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_truncate
</UL>

<P><STRONG><a name="[129]"></a>create_chain</STRONG> (ARM, 360 bytes, Stack size 32 bytes, ff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 560 + Unknown Stack Size
<LI>Call Chain = create_chain &rArr; put_fat &rArr; move_window &rArr; disk_write &rArr; Write_Mult_Block &rArr; CMD25 &rArr; Chk_CMD_End &rArr; Uart_Printf &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;put_fat
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fat
</UL>
<BR>[Called By]<UL><LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_lseek
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkdir
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_write
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_next
</UL>

<P><STRONG><a name="[12a]"></a>dir_sdi</STRONG> (ARM, 292 bytes, Stack size 24 bytes, ff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 544 + Unknown Stack Size
<LI>Call Chain = dir_sdi &rArr; get_fat &rArr; move_window &rArr; disk_write &rArr; Write_Mult_Block &rArr; CMD25 &rArr; Chk_CMD_End &rArr; Uart_Printf &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fat
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clust2sect
</UL>
<BR>[Called By]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_readdir
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_opendir
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_unlink
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;follow_path
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_remove
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_register
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_find
</UL>

<P><STRONG><a name="[12c]"></a>dir_next</STRONG> (ARM, 512 bytes, Stack size 24 bytes, ff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 584 + Unknown Stack Size
<LI>Call Chain = dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; disk_write &rArr; Write_Mult_Block &rArr; CMD25 &rArr; Chk_CMD_End &rArr; Uart_Printf &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fat
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clust2sect
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_chain
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_set
</UL>
<BR>[Called By]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_readdir
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_remove
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_register
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_read
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_find
</UL>

<P><STRONG><a name="[12d]"></a>cmp_lfn</STRONG> (ARM, 228 bytes, Stack size 32 bytes, ff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = cmp_lfn
</UL>
<BR>[Calls]<UL><LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ff_wtoupper
</UL>
<BR>[Called By]<UL><LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_find
</UL>

<P><STRONG><a name="[135]"></a>pick_lfn</STRONG> (ARM, 204 bytes, Stack size 16 bytes, ff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = pick_lfn
</UL>
<BR>[Called By]<UL><LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_read
</UL>

<P><STRONG><a name="[137]"></a>fit_lfn</STRONG> (ARM, 196 bytes, Stack size 20 bytes, ff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = fit_lfn
</UL>
<BR>[Called By]<UL><LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_register
</UL>

<P><STRONG><a name="[132]"></a>sum_sfn</STRONG> (ARM, 56 bytes, Stack size 8 bytes, ff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = sum_sfn
</UL>
<BR>[Called By]<UL><LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_register
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_read
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_find
</UL>

<P><STRONG><a name="[131]"></a>dir_find</STRONG> (ARM, 372 bytes, Stack size 32 bytes, ff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 616 + Unknown Stack Size
<LI>Call Chain = dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; disk_write &rArr; Write_Mult_Block &rArr; CMD25 &rArr; Chk_CMD_End &rArr; Uart_Printf &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sum_sfn
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmp_lfn
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_next
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_sdi
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_cmp
</UL>
<BR>[Called By]<UL><LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;follow_path
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_register
</UL>

<P><STRONG><a name="[134]"></a>dir_read</STRONG> (ARM, 336 bytes, Stack size 32 bytes, ff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 616 + Unknown Stack Size
<LI>Call Chain = dir_read &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; disk_write &rArr; Write_Mult_Block &rArr; CMD25 &rArr; Chk_CMD_End &rArr; Uart_Printf &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sum_sfn
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pick_lfn
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_next
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
</UL>
<BR>[Called By]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_readdir
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_unlink
</UL>

<P><STRONG><a name="[136]"></a>dir_register</STRONG> (ARM, 708 bytes, Stack size 56 bytes, ff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 672 + Unknown Stack Size
<LI>Call Chain = dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; disk_write &rArr; Write_Mult_Block &rArr; CMD25 &rArr; Chk_CMD_End &rArr; Uart_Printf &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gen_numname
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_find
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sum_sfn
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fit_lfn
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_next
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_sdi
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_set
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_cpy
</UL>
<BR>[Called By]<UL><LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_rename
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkdir
</UL>

<P><STRONG><a name="[138]"></a>dir_remove</STRONG> (ARM, 188 bytes, Stack size 16 bytes, ff.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_next
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_sdi
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
</UL>
<BR>[Called By]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_rename
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_unlink
</UL>

<P><STRONG><a name="[139]"></a>create_name</STRONG> (ARM, 1104 bytes, Stack size 56 bytes, ff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = create_name &rArr; ff_convert
</UL>
<BR>[Calls]<UL><LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ff_wtoupper
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ff_convert
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chk_chr
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_set
</UL>
<BR>[Called By]<UL><LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;follow_path
</UL>

<P><STRONG><a name="[13c]"></a>get_fileinfo</STRONG> (ARM, 520 bytes, Stack size 48 bytes, ff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = get_fileinfo &rArr; ff_convert
</UL>
<BR>[Calls]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ff_convert
</UL>
<BR>[Called By]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_readdir
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_stat
</UL>

<P><STRONG><a name="[13d]"></a>follow_path</STRONG> (ARM, 280 bytes, Stack size 32 bytes, ff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 648 + Unknown Stack Size
<LI>Call Chain = follow_path &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; disk_write &rArr; Write_Mult_Block &rArr; CMD25 &rArr; Chk_CMD_End &rArr; Uart_Printf &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_name
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_find
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_sdi
</UL>
<BR>[Called By]<UL><LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_opendir
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_rename
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_utime
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_chmod
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkdir
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_unlink
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_stat
</UL>

<P><STRONG><a name="[13e]"></a>check_fs</STRONG> (ARM, 200 bytes, Stack size 16 bytes, ff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 488 + Unknown Stack Size
<LI>Call Chain = check_fs &rArr; disk_read &rArr; Read_Mult_Block &rArr; CMD12 &rArr; Chk_CMD_End &rArr; Uart_Printf &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_read
</UL>
<BR>[Called By]<UL><LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chk_mounted
</UL>

<P><STRONG><a name="[13f]"></a>chk_mounted</STRONG> (ARM, 1432 bytes, Stack size 80 bytes, ff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 568 + Unknown Stack Size
<LI>Call Chain = chk_mounted &rArr; check_fs &rArr; disk_read &rArr; Read_Mult_Block &rArr; CMD12 &rArr; Chk_CMD_End &rArr; Uart_Printf &rArr; __c89vsprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_fs
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_read
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_status
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_initialize
</UL>
<BR>[Called By]<UL><LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_opendir
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_rename
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_utime
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_chmod
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkdir
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_unlink
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_getfree
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_stat
</UL>

<P><STRONG><a name="[142]"></a>validate</STRONG> (ARM, 84 bytes, Stack size 16 bytes, ff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = validate
</UL>
<BR>[Calls]<UL><LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_status
</UL>
<BR>[Called By]<UL><LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_lseek
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_readdir
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_truncate
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_sync
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_write
</UL>

<P><STRONG><a name="[11e]"></a>__arm_div8</STRONG> (ARM, 0 bytes, Stack size unknown bytes, aeabi_sdiv.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>

<P><STRONG><a name="[11d]"></a>__arm_div5</STRONG> (ARM, 0 bytes, Stack size unknown bytes, aeabi_sdiv.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>

<P><STRONG><a name="[11c]"></a>__arm_div2</STRONG> (ARM, 0 bytes, Stack size unknown bytes, aeabi_sdiv.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>

<P><STRONG><a name="[11f]"></a>__arm_div_large</STRONG> (ARM, 0 bytes, Stack size unknown bytes, aeabi_sdiv.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>

<P><STRONG><a name="[18e]"></a>_dadd1</STRONG> (ARM, 0 bytes, Stack size unknown bytes, daddsub_noclz.o(x$fpl$dadd), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsub
</UL>

<P><STRONG><a name="[18c]"></a>_dsub1</STRONG> (ARM, 0 bytes, Stack size unknown bytes, daddsub_noclz.o(x$fpl$dsub), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dadd
</UL>

<P><STRONG><a name="[7]"></a>_printf_input_char</STRONG> (ARM, 20 bytes, Stack size 0 bytes, _printf_char_common.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> _printf_char_common.o(.text)
</UL>
<P><STRONG><a name="[196]"></a>_fp_digits</STRONG> (ARM, 632 bytes, Stack size 96 bytes, _printf_fp_dec.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = _fp_digits &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ll_udiv10
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_emul
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_ediv
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_d2e
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_etento
</UL>
<BR>[Called By]<UL><LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec_real
</UL>
<P>
<H3>
Undefined Global Symbols
</H3>
<P><STRONG><a name="[d1]"></a>_printf_fp_hex</STRONG> (Unknown, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_a
</UL>

<P><STRONG><a name="[118]"></a>_printf_mbtowc</STRONG> (ARM, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_cs_common
</UL>

<P><STRONG><a name="[1a7]"></a>_printf_wc</STRONG> (ARM, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_lcs_common
</UL>
<HR></body></html>
